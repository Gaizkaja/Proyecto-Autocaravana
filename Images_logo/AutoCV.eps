%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Husbil.eps
%%Creator: Adobe Illustrator(R) 17.0
%%For: ElenaD
%%CreationDate: 9/29/2015
%%BoundingBox: 0 0 1000 1000
%%HiResBoundingBox: 0 0 1000 1000
%%CropBox: 0 0 1000 1000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 17.0.0 x256 R agm 4.7700 ct 5.3328%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2015-09-29T17:16:54+02:00</xmp:CreateDate>
         <xmp:MetadataDate>2015-09-29T17:16:55+02:00</xmp:MetadataDate>
         <xmp:ModifyDate>2015-09-29T17:16:55+02:00</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEA8ADwAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAA8AAAAAEA&#xA;AQDwAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqozX1lCaTXEcZHUO6r+s4qg5vMugxH4r6I/6h5/&#xA;8RriqGfzhog/u3km/wCMcT/8bBcVY7P+cOhmR49P0++1AxNxkkiSJYgR1Ad5FDEe2WeH3mmvxO4W&#xA;3F+blif77RNSj36qtu4p9EwP4Y8A7wvGe4o+0/NLyfMwS4uJdPc9PrsEkKfTKQYv+Gx8M9N0+IOu&#xA;zKbe5t7mBJ7eVJoJByjljYOjDxDCoOVkMwVTFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYqhLvVtMtCRc3UcbDqhYcv+BG+KoCTzdpI/uhNce8UTU/4bjiqHfzdIT+406Rh2MjpH+A54qoP&#xA;5l1pz+7t7eIeDs7n/heGKqD6v5gc1+tpF7RxKf8AiZbFVB5tTk3k1G4J/wAhhGP+FAxVQeyilNZn&#xA;kmJ6mSR2/jirlsLJekKfSK/rxVVWKJfsoq/IAYqw7zFrk2q3Uuj6dIUsYTw1O8Q0LHvbxMP+HI6d&#xA;MtA4RZ5tRPEaHJRhhihiSGFAkSAKiKKAAZWTbYBS/AlxAIodwcVXaTeajoVybnRZBCGNZ7B6/Vpv&#xA;mg+w3+Wu/jXpkxO9iwMK3D1Hyx5r07zBbM0FYLyCgvLGSnqxMelafaU0+FhsfwwSjSYytOsiydir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVU7i5ht4jLK3FR95PgMVY5qGr3F0GjWscB24jqR7nFUtS&#xA;GJPsIq/IAYqvxV2KuxV2KuxV2KuxVi3m7XrhZV0PTJOF/cJyurlf+PaA7cv+Mj9EH05ZAADiLXMk&#xA;nhCV2dpBaW0dtbrwijFFH6yfEnvkJEk2WcQAKDz/APO2+vLTQtOa2nkgL3qh/SdoywEbsAShU0qM&#xA;CWD6d+Yuo2oAi1O/h6VWVku0++cO/wBxxVmvkr8y7/VvMFvo9y0F3HcRyMtxFE8Do0a8qOrM6tUA&#xA;/Zpir0nFVgFxFdRXtlO1rf29fQuU3IB6q6nZ0bup/Xkoyr3MZRv3s98v/mVpdxGttr0kWk6itAWl&#xA;cJbTduUMr0H+wY8h7jfCYXy3QJ1z2Zfb3NvcRCW3lSaJvsyRsGU/IioyFM7VMVdirsVdirsVdirs&#xA;VdirsVdirsVdiqyeeOCJpZDRFFTirFb6+lvJeb7IPsJ2AxVDYq7FXYq7FXYq7FXYq7FUs8x61Ho2&#xA;lS3hT1ZqiO2gHWSZzREH09fbJQjZYzlQYfpllLbxyS3L+tf3TereTnq0h7D/ACV6KPDDOVnyRCND&#xA;zRmQZvNfz1gnfy3YSpGzxw3gaZlBIRTE4q1OgrirxMOh6EHFDMfylAPn7TiRuEuCPn6LDFL6FxVp&#xA;mVRViAB1J2xVb6kD/ByVq/s1Br9GGkKCabZxSma3Q2s56zWrNbv/AMFEUbJeIWPAE1tPMHmyyp9W&#xA;1maRB/uq7WO4U/NmAl/4fHiHULwnoU5tfzK8xQ0F5p9reL+1JbyPbt9EbicH/gxj6V9ScWn5o6C9&#xA;Be215YN3MkPrL/wVsZtvcgY8HcV4+8J9p3mjy5qTBLHUra4lP+6UlX1PpjryH0jAYkJEgUzyLJ2K&#xA;uxV2KuxV2KuxV2Ksc1y/M1wYEP7qE0Pu46/d0xVKGngT7cir82AxVRfUrBes6fQa/qxVSbXNNXpI&#xA;W+St/EYqov5jslGyOfcgAfrxVCS+cLJOyD/XkUYqg5fPdsvR4h/wT/8AEcVQM/5hRJ/u4D/VSn/E&#xA;8VS24/MyAV/0lj/skX/iJOKpbcfmbCf92O3zd2/UuKoC180w6z5g01JaLFE8jAGoBkKUj6nqO2Ww&#xA;+ktU/qDNsqbXYq7FUm1rR/KsqGXVdNtplP2ppLcSEfNgpK/PJ48ZmaHNryZYwFy5JLptl+WujXn1&#xA;/T4IoLujKJEWViA3UAGoFcyBocx6fc457Qwj+L70Dqd1oVxcBrEXodj/AHUUnBG/1QfUI+gZm49F&#xA;MD1GIcLJr8ZPpEiVWHQZ3KPNbW9kJDRJLx2kkam9ArsR/wAKMhPJhh1MvdyZwhnn0ER5806g8nxK&#xA;AJrgHxEMEMQ/4i2Y8tXHpEfEkuRHRy6zPwACZW2jpbLxguZkHgPTp/xDKZZ75xj9v626OCuUpfZ+&#xA;pGRxOh+KV5P9YJ/xqq5UZA9G6MSOtqmRZOxVSntba4XhPEky/wAsihh9xwgkckEA81a1lvbKn1C+&#xA;urQDokUz+mP+eTFov+FyXGeqOAJxa+d/N9tQNdQXqjr9ZgCufk0BhUf8AcbHctHvTuw/M+P1UTVr&#xA;A2kTEK13DL60aV25SBliZV8SA1O+2+PCDyRxEc2c5Bm7FXYq7FXYq+ZtQ/MrnPKZFJlLt6isHJDV&#xA;NRQ8e+KpbL+Y0x+xHT5KB+tmxVBy+f8AVH+yD96j9S4qhJPN2uSdC1Pcuf4jFULJrOsympah+Q/4&#xA;2riqk13qr9Z2HyNP1YqpMt4/252b5sx/Xiq36p4v+GKrhaR9yTiq4WsX8pP34qqLad1iPzAOGMiD&#xA;YRKIIoppa6z5lt1Cw3UxA6K4En/Ew2WeIDzAYeGRyJR0fnPzHD/eLFJ4+pGy/wDESuC4dy1LvRcP&#xA;5hXI/vrFH8SkhX8CrY1DvW5dyMi/MHTW2mtZ0r/Lwcf8SGPAOhC8Z6gqMt95Dvn5S/uJCdyEkjr8&#xA;+I45lY9RmjsDf2uJk02GRsivmE+0ZNC9ItpQiZV+F3j3b5Mx+L78x82TJI+slyMOLHEegB41+c0k&#xA;Z8+W4uUM9vFZxH0CxUULvWhUimUt6DsR5fRVbTtSn05iAQIrqSEqev7TYqndpqPmqEf7j/M9y6j/&#xA;AH+Irv8AFxiqYw+c/wAxLfYzaffDv60UkTH5em1PwxVPfKX5jXeqa8dC1Swjs7tomlglhm9RH47l&#xA;eJAZfh3xVnWKuxVCzX7JO0MdtLOYwrO0fpgDlWg+N0qdu2Kuj1K2eRYiJIpGPFRLHJGCaVoGZQpP&#xA;yOKoiRFkRkYVVwVYex2xV695blkl8u6XLKayyWkDOfFmiUnJS5ljHkExyLJ2KuxV2KsM8x/lD5H1&#xA;6+lv7m0e3vZyWnntn4F2P7TKQyV7k8dz1xVj1x/zjx5Tb/ea+vITv9swyD2pSNP14qgJf+cc7Y19&#xA;LXXQduVsG/VKuKoG4/5x11JS31fWoZB+z6kLx1+dGkpirz7XPJ+p6FqUmn6kpSZPiUqKq6Ho6N3U&#xA;/wCe+KpaYdPVuLTqrDqrSIp8e9MIBKCQHH9Gp1YH3Xk//EK5IY5dxYHLEdQ2J9MAqp5bVoY5B/xJ&#xA;Rkhgn3MTqId7vrtqvSFz3qqp/FlyX5efcx/NY+9v9J25H9zOD7rF/CQ4fy00fm4O/SUH++pq/KP/&#xA;AJrx/KzR+bgptq6RNHyglYu6xoIypYs5oKAnffIzwSiLLPHqIyNBMrxlgkZZp2lYfCzpIIIlcD4k&#xA;UkqWKnvv9HQUt6z+8PFBOxp2a3f/AImWxVpUt4Zo5ponZEcerHJCpXiTxY1iWnwg8t8VZ/oPlmC9&#xA;n+GBIrZP7yRUUe/EbdTirYt4LbzLrkECCOJJLYKi7Af6NHlk/pDXH6i8P/Or/lOV/wCYGL/ib5W2&#xA;MGxQ4Eg1GxHfFUTFqWoxf3dzKo8A7U+6uKso/KiR5PzDsJJGLOyXBZiakn0jil9B4q7FULb/AO91&#xA;3/zz/wCI4q7Uv950/wCM9v8A8nkxVFYq9a8rGvljSD42Vuf+SS5KXMsY8gmeRZOxV2KuxV2KuxV2&#xA;KpV5n8y6b5c0abVNQY+nH8MUS7vLK32Iox3Zvw6nYHDGJJoMZSERZfNOv3+qebNTl1fVZh6zMUhg&#xA;A5RwxqaCOOp2A7+J3zZY8YgHU5cxmfJLzohptN/wv9uW8TSl0sZjkeMmpQlSR7ZJVuKuxV2KuxVN&#xA;fLGnwSm5128YR2lhzhsmb7P1gJymuCDWq20W/u5AzXanJZrudnpMXCLPMsDvroalr9xcvEFheJfq&#xA;sDb+nCGKou9d+Iq3vXJ4cdHfuY58ljbvcbOzPWCM/wCxX+mZPhx7nG8SXeWf/ltZwX+m6lYzlmED&#xA;r6NWJ4JMhHEV7ckJzAzwEZbOwwTMo7vcdBMTaLYyRJwSWCOTj7ugY/ryluYhP/ylmv8A/GW2/wCo&#xA;WPLJ/SGuP1F4X+dX/Kcr/wAwMX/E3ytsYNih2KuxVl/5Sf8AKf6f/wAY7j/k0cUvoXFXYqhbf/e6&#xA;7/55/wDEcVdqX+86f8Z7f/k+mKorFXrPlT/lFtH/AOYG2/5Mrkp8yxhyCaZFk7FXYq7FXYq7FVO5&#xA;uILa3lubiRYreBGkmlc0VUQcmZiegAGKvDfM/mKbzRqpvZVKabByj021YUoh+1K4P7clP9iKDxJz&#xA;cWPhHm67Pl4jQ5MUXTmitleIcozViO4qScyLcQxUsLFjUzcppG8WJ+85YqzFXYq7FWkt7y7ubfT7&#xA;Fed9eyCC2XsGbqx/yUFWOVZsnDFuwYuOVdEy8839nY6bZ+WtMblbLGF5jqbZG5PI3vd3AL7dUUZg&#xA;YYcUnZZ58MWAllXVmZiFUW9STsKBzXMz+P4OF/B/nItJEkUMjB1PRlNR+GWg21EUzr8pnpqGrpv8&#xA;UVswPb4WmH/G2YOq+oOdpfpPve1+VnLaFaqf9084B8oJGiH4JmM5TFp/+Us1/wD4y23/AFCx5ZP6&#xA;Q1x+ovC/zr289J72MVP+DfK2xg2KHYq7FWX/AJSf8p/p/wDxjuP+TRxS+hcVdiqFt/8Ae67/AOef&#xA;/EcVdqX+86f8Z7f/AJPpiqKxV6z5U/5RbR/+YG2/5Mrkp8yxhyCaZFk7FXYq7FXn/wCcX5swfl3p&#xA;VjcCzF/f6hK0dvatJ6S8IgDLIWCufh5KKU74qyTyR5mHmfynpev+gLY6jAJWtw3qBGqQV5UWu48M&#xA;Vedfmx50+v3beXNPkrZ2rj9JSL0kmU1EIP8ALGd3/wArb9kg5ODHe5cXU5a9IYuR6dtT+RP1DMlw&#xA;XWwpbxj/ACR+rEqo3NhDIGdfgelajp9IwgsTFhU+m3cRJ4cx/Mu/4dcuBDAxKFIINDscKHYqtZ0Q&#xA;cmYKB1JNBgJpIFso8nacln5d1Tzpe/BGYntdL7MIOVLmdK0+N1BVO+3vmsz5OKXk7bT4uCPm8vud&#xA;fGo63fXlwVjaUB5DUcVCnisanbZFoo8cs00qJYaqNgJTq80sjyyIDHH9XNC43cBwdh+z9OSymz8G&#xA;OEUB71HRtQkaaNSeXIgKT160IJ7imUYZESDfmiDEvV/yrcDXb1OW7WoIX/VkG/8Aw2XarmGnSci9&#xA;r8pP/uPngr/cXMq0229Sk/b/AIy5iOWx2f8A5SzX/wDjLbf9QseWT+kNcfqKT+Y/IvljzHNFcata&#xA;etcQr6ccyu8bcKk8TwIqKk9crbGOzfkf5KcfA15D/qTA/T8atiqBm/IXQT/capexiu3Mxvt9Cpiq&#xA;Bm/IE9YNfYbbB7YNU9txKP1YqnPkb8pm8ua2NWutSF5JHGyQRpF6YBcULElm7Yq9ExV2KoG1Zjqt&#xA;8lfhCQkD3Iav6sVQkuppezTxQENBaTW0byDo0rTqSB/qAfjk5QoC+rCMrJrom/qx+oIuX7wqWC96&#xA;AgV/HI0atlxC66vW/Kn/ACi2j/8AMDbf8mVwz5lEOQTTIsnYq7FXYq+Zv+cwSf0j5YHb0bv/AIlF&#xA;irNfy10myh/Lfy9c6VcT6Xq89orXU1owEclSd54HDwyMV/b48wOjDFWLw/ktrsQCjzdJwDFjWyUs&#xA;eR5H4mmY1JPXLBlkBVtZwxJshGn8pdab4ZPNtyyHZgLeNSR8+WPiy70eBDub/wCVO3DUV/NOpemO&#xA;ojKofoIwHJLvSMUe5cPyXs2IEvmTWXTuv1hR+JVv1YOOXenw49waH5GeWuQMmq6tKB+y9zHTf5RA&#xA;48R708A7l/8AyovyYzhpZr+Wn7L3AI/BAcHEU8IXj8jfy/U85Ibh1WpIe4en00ocFppC6V+T3kG6&#xA;na/OnuNNApaRPPMPVHedzzqFP7AFNtzWoAVSr85IdTvPKgsvL9szW1rLEn1S3X/j3QGnFF3NHCGg&#xA;Hb2xV4Touk6iL1Zn0+4deJ4sIJHofEUU5bhkBKy054kxoIzWNM1admEWn3bFoHQD6vMDWoPQrluX&#xA;LEnbuasWKQG/eklj5d8zw3MZOlXoTkOR+ry7CvX7OY0eblSGz2P8rtM1NNXur+e0mt7UW/oo86NE&#xA;XdpFb4VcBiAE3OX58gkdmjT4zEG3sXlNqfpCM9fXWQb12aFF6dt4zmO5CQz/APKWa/8A8Zbb/qFj&#xA;yyf0hrj9RV8rbHYq7FXYq7FXYq0zBQWYgKBUk9AMVef6/wCbGbUby10lufrrFG86bk0DDjH8+XX7&#xA;sysWHrJxcubpFSk086FDpd5PMFuoizS2AJ5M0ssRUkjYBVj3rkxhlmlY+nva5Z44Y0fq7mUeVHub&#xA;qK41O6PKW5fingEj6BfAVJyWuEYEQjyj+lj2eZTByS5yP2B7v5U/5RbR/wDmBtv+TK5hT5lzocgm&#xA;mRZOxV2KuxVivm+z8u6uEttQ0yz1N4C3GS7giuBEWpyEfqK1Cabkf7SqBRERFRFCooAVQKAAbAAD&#xA;FV2KuxV2KuxV2KuxVJ5/9zFy9qpDaVbsVvG7TyKd4AehjU/3nifg/mGKta5qIRfqkR+Ij96R2H8u&#xA;KpDiqA0Uk2clf+Wq7/6ipMVR+KuxVht1+ZenW2szae1ldyLExj5Rwszl122TY0xV6F5RmWW8vXU0&#xA;V4LVwjKVccmm+0DuPkRiqUT/APKWa/8A8Zbb/qFjyyf0hrj9RV8rbHYq7FXYqpXF1bW6c7iZIU/m&#xA;kYKPxwgE8kEgc0jvfO2lRH0rMPf3B+zHCDSv+sR+oHLo4JHns1Szgct2Oatd+YNT+HUJU02zP/Hu&#xA;xIYj3jFZGPzFMysOH+aOJxM2evqPD+PmllldWunXc5sE9SfigW7mUcl+1UxpuFr4mpzLx6S5Hj+T&#xA;hZdbURwee5Rdto2o6owuJeQgeaISXL1JJaVV+Gv2jvlup1EMUaHPuadLpp5ZcR5d70aztIbS2jto&#xA;BxiiFFHU+NT880OTIZyMjzL0OPGIRERyD1/yp/yi2j/8wNt/yZXBPmUw5BNMiydirsVSrWtTMC/V&#xA;4WpM4+Jh1VT/ABOKsexV2KuxV2KuxV2KuxVLdTnuJp00y0cxTTKXuLhesMFaEr/xY5+FK+7b8aFV&#xA;Zc39np1qtrZhQY1CRRruqACgrirHmZmYsxqzGpJ6knFWK3nnOeC6uLZbSPnDK0aBpn5uFNKhBF1b&#xA;sOWa/LrpRy8AxyIsero7LF2fGWLxDkiDR9PVPdKQJauAa1uLlv8AgriQ/wAc2DrUZirsVW+lF6nq&#xA;8F9SnHnQcqeFcVTPyw4GqXqEGrwQEN2+B5aj/hxiqVXScfNWttWvN7dvl/o6L/DLJfSGuP1FUyts&#xA;WSzRQoXldY0HVnIUfecMYkmgxlIAWTST3XnDRYCQsjTsO0S1H3niMzIdn5ZdK97hZO0cUet+5Jbz&#xA;zLqV2xEFvcLGeixkpX5lVL1+TjMqOghH6pBxZdozl9MSl4g1KRuaaMC5/wB2SRSzE/MzFxlvhYRz&#xA;n9o/Q0nNnPKH2H9KIXTfN06GNI3hiPVEKQL9KrwrhGTTQ7vvQcWqn3/YFa28i6hIa3M8cQPXjV2/&#xA;41H44J9pwH0gllDsqZ+ogfamGj+VdLttUu1kT6y0aQlTJ0q3Kvwjbt3zX5NdkkTW19zscWgxxAv1&#xA;V3p5qAAtkAFAJrcAD/jMmYbmovFXrPlT/lFtH/5gbb/kyuSnzLGHIJpkWTsVdir5m1f8xvN6X1/5&#xA;gkuuWjC7YrZBF5/VWm9NQh+H4kjI3Y7kb4qhv+hgfLv+/rr/AKd/+quKrT/zkH5eB/vLs+9bb/qt&#xA;iq0/85DeXgaF7z6Pqx/VNirX/QxPl7xvfutv+q2KuP8AzkP5dIpzvfut/wDqtiqjcfmzq+vSR23l&#xA;y4uLRKAzXEgjaVi5ogj+KWMDZuRYH6MVTET+d2gpJ5mujIRQ/u7em/uIgfpxVJdLk803eoapFc6z&#xA;dJLbmKH1P3ZLApzH7A2HM0+eKpv5Ov8AWl1m70u/unuo44RKhl4llYOBswCkhgw64qzLFXYql+mT&#xA;qhktJjwuRNO6xsCpaNpmZWSv2hxYVK9O+KphirsVdiqY+W/+OrN/xgH/ABPFUsvf+Un1j52//Jlc&#xA;nL6Qwj9RQ9w97IxitQI/5riQVA/1EqOR+e3zyUBEby38mMzM7R28yh10CxdxLeF72b+eduQHyQUQ&#xA;D6Ms/NSAqPpHl+LahpIE3L1Hz/VyR0NtbQikMSRjwRQv6solOUuZtyIwjHkKVMiydirsVdiqEiVR&#xA;qlyQN2hgJ+fKUfwxVvUv950/4z2//J9MVRWKvWfKn/KLaP8A8wNt/wAmVyU+ZYw5BNMiydirTuka&#xA;M7sFRQWZmNAANySTir4/1TWdJn8mXVuLuJbhYChiZ1Dl13oASK1p2xV4WQoYqQBQ034f0xV1E8R/&#xA;wn9MVbqn+T/wn9MVdVP8n/hP6Yq74f8AJ/4T+mKvSfIN/pmltG11MkTeoFcMQKAIFrT2Yk4q9KXz&#xA;F5fY0XU7Qn2nj/5qwqlGla9oi6trMrXkSLLPHwZmAD8IEQlT3FV7YFRnlfW9Jm806hetdJDCLeOK&#xA;Npj6YY8zWnPj/Liqf33n7yfYwTTXGqQhYVZ2VTyYhR0UD7RPamKvHte/5yJ1+a6ddEsoLSzBpG9w&#xA;plmI8TRlRa+FD88VTryL+cb+YLmPSPMcMavIyiG9grGySE0V+u25pUUp74q9d06eaSJ456G5t3MU&#xA;zAUDEAMrAduSMrU7VpiqKxV2Kory/dWsOsXRuLmOH/R4RGkjKvLk8lSKkdOIwiJKDIDmll/fWS+Z&#xA;dXdriJUJt6MXUD+5Uda5ZKJoNcZCypvrejJXlf24I7eqlfurkfDl3MvEj3qD+aPL6db+I0Fdjy/V&#xA;XD4Uu5Hix71B/Oflpet4CaV2jkP6lw+BPuR48O9Rfz55dXpJI3yjb+NMl+Xkj8xFQf8AMPQx0iuG&#xA;+SJ/Fxh/LSY/mYqDfmPpwpxtJj41Kj+Jw/lj3o/MjuUH/MuIU46eST4ygf8AGhw/lvNH5nyQf/Kx&#xA;Ln65LKlkgLRxqQXJ+yznwH82EaYXzQdSa5KN7+YWqyxBRbwKBJG24c/ZkVh+0PDCdMEDUlTl/MTX&#xA;eXECBKkdFFfir0VnLHp4ZVLw45BjqVn5fEt0fEljOS40D37/AAD6i8nFm8o6GX+0dPtS3z9Fa5VP&#xA;6i2Q+kJvkWTsVS3zPpMms+WtW0iOUQSalZ3FokxBIQzxNGGoP5eVcVfngmuTIfiaQihVkYkqQRQg&#xA;gnFVR9VtRRmtEPIcq1k7/wDPTFVn6Xsv+WRPvl/6qYq79L2X/LIn3y/9VMVd+l7P/lkT75P+qmKr&#xA;11S24eoLVBQ0BrJWv/IzFVJtbl6K8iqOiqSAPoriq+PU76QclaSniXIxVU+s3R3eRq/6xOKoK6md&#xA;5CCxIHicVQcivM4t16N9r9e+KplZ+XvrCMLeze54D94yIz0+fHpiqCgtTYarBIhIhclDX9kkHY4q&#xA;+qPL16byOC7ZgWu7G1nahqC5D+p9I2GKp1irsVYn5lP+5mm+1tEfbd5czNLyLg6zmGE6x/x0Jf8A&#xA;Y/8AERmU40eSDxZOxVYVJUqVjNXDiQoTIKAbBuVKfD4Zr56AyzjLxy2r0/wuxx9oCOA4uCO9+r+J&#xA;fmwdc7FUm13Qta1Am4tI3e2hShCPxJapLcVrUmlMwtRI8TmaeI4WFWhkt9Sj+I1Lfa8a5jW5NPSA&#xA;59TmELK6rQinue5982d7usrZtjI9F9MqKgksR2NexOE2VFBOPLPl++8w63a6TZKTNcuAz0qEQbvI&#xA;3sq74ykIi1jEyNPsKxtIbKyt7OGohto0hjB3PGNQo/AZrCbdkBStgS7FUJq813BpN7NZoZbyKCV7&#xA;aNRyLSKhKKF2qS3bFX53SQaVIxZreRSxqeEtBv7MrYqse005iopMEUUA5KT9/EYq76hpPjcfen9M&#xA;VbFho/c3A+RQ/wAMVb+oaL/Nc/8AJPFVps7DZA8oiBqRReR+np+GKuFlpIapWdx4c0X/AI1OKq7S&#xA;WgXjDb8ANgWct+rjiqFlkCL/AJR6DFUHiq7T15Syyd/srir2nRbW00nRYUdkhRQGmlYhQXbYkk++&#xA;2KsI/M7SYYrhLuJQoulLOB09SIglvpBGKsq/5x6uZDbajbE1RW5oCdxUIDQeHTFXrsl7ZxV9WeNK&#xA;Gh5OoofpOKqJ1rRxWt/binX96m344qxTUrqO71S6nicSQ8ljikUggqigGhH+XyzP04qLrdVK5sU1&#xA;f/joS/7H/iIy9qjyQeLJ2Kro4ZZDSNGc+Cgn9WBV+qWd5pNtFdapBJYW0zFIZ7lGhR3UVKqzhQxA&#xA;7DImce9kIS7ko/xFovIqLtHI68Kt/wARByJzRHVkMMj0T6fXY9HOkWUkLSPqcxiDqdkqwFT4/bG3&#xA;zzCyy4pWHNxR4Y0XnHnOFLTzLcekKBZeYHapo9PvbK2x9ReXP+cckl0iwn1PWJI7iW3iee2jgCmN&#xA;2RSyc2duXE1FeIrmSNSQKpxjpwTdsktf+cefJMVDNc39wR1DSRqp+hYwfxwHUySNNFmPlbyL5Y8r&#xA;rL+h7QQyzgCad2aSRgO3JiaD2G2VTyGXNthjEeSf5Bm7FXYq7FXjv5h/84z+U/NF9PqulXUmhapc&#xA;MXn9JBLaySMSWdoSUKsx6lWA9q4q+YfzT8iav+XXmSPRNRuUuzNbpdQXMKkI0bsyUo3QhozUYqw1&#xA;tWCkAk/cMVd+mI/H8MVZh5A8g+c/Povj5Zs1ul070xdNJJHCFM3LgAZGXlX0z0xVl3/Qtn5zf9Wq&#xA;D/pLt/8AmvFXf9C2fnN/1aoP+ku3/wCa8VaP/ONf5zH/AKVcA/6O7b/mvFVM/wDOMn5xE1Olwk/8&#xA;xdv/AM14q8985+WNa8o65PoWsxLDqUCRvIiOsigSxiRaMux2b78VQGjsF5E/ssCcVeqeZdJute8u&#xA;CyspEWdJEkAckKyivcV/mriqRfmAotdK0uwZ/UltYGV38eKKtfppirPP+cZvJOm+YfL+sz392lsk&#xA;N3GiLIiMCTHUkFyMVek+ePy/t9K8rXd35Tv7K6121AkgsroxJHLxPxovF4yrkfZq3Xb3xV8zXn51&#xA;+dh6lu1vaWk6koxEMgkRhsfhkkcVHuMVSGD8yPOsCFI9R+Ekn4oYH3Jqd2Q5YMsh1a5YYnmHu3/O&#xA;Pvl+DzOl55h8/wA8B01o1t9NtJG+rvNICC9yfTaNqKF4L+yanbbJePPvYjBDue52Hlf8nLVx6Nrp&#xA;jEdPXdZh0p/u9nGROWR6shiiOicW8H5b2xrbR6NCfGMWqfqpkTM97IQHcmya5obL+71C1Kjb4Zoy&#xA;PwORZPIP+cpNDt/Mn5aNd6bPFcXehXC3rRxuruYCrRzUAP7IYOfZTir4506QLcUPRxT6euKvWNO8&#xA;0aW+mxTXRiaa3HILJTmj03Kg779qYqr+SPye88+c/Mmj+ZJNKJ8q3V8kt1ePLAoMEc/70CJnErbI&#xA;VFExV9qYq7FXYq7FXYq7FXYqtmlWKJ5XBKoCzBVLNQb7KoJPyGKvA/8AnInQ9E896HbmwSeLzHpT&#xA;MbF5Y/TSWOSnqQuXKkV4qykjY+xJxV8k6j5e1uzkaK6sJ4JENCHjYfcaUOKoWw0XVtQu1tLKzmuL&#xA;ljQRohJHz8B7nFX11+Stwv5deTU0oWCz6ldytdancersZGAVUUBfsxooHXc1PfFWcP8AmvqZ/u7G&#xA;Fd/2mdtvo44qh5PzS8wNULBaoOxCOT+L4qoSfmV5oavGSJK9OMY2/wCCriqHk/MDza9f9O4g9lii&#xA;H48a4q8G/wCcgtO1PUNRtfNE7mctGtpdycQOJQkxMeIHUMV+gYq8o0+YJNxOwfb6e2KvQNG82wQW&#xA;aQ3fMSxDiroK8lHTv1xVW0fy/L551S6aaSS10+CPiJVALBifhXfap3JxV6T5M8n2nlbTprK3ne4E&#xA;0xmaSQAGpVV40HYccVT/ABVLNS8s+XdTk9XUNMtrqX/fssSM9B25EVpiqDTyD5KSQSLolnyXpWFC&#xA;PH7JFMVT5VVVCqAqqKADYADFW8VdirsVbEbSVVVL1G6gV2xVhuofkd5b1C4e5htbyz5tyK2hogPf&#xA;iHSSnyGKutfyAYXKFk1G4hUAtD6BDMQe7KvT5D6cVekWHl/zZaW0NvZWV7bW8ChIYkWSMIqigAG1&#xA;BiqaQab+ZCmkZvlp2MxA+5npiqYW9l+aopxeUDxklhb7wzE4qmtlB+aIYercW3HwmEdP+SS1xVmN&#xA;t9Z+rx/WShuOI9Ux1Ccu/HlU0xVUxV2KuxV2KuIBFD0xVReys3pzgjanSqKf1jFVB9D0VwQ+n2zA&#xA;7msMZ/WMVUX8seXGNTplt9ESD9QGKqLeTPK7Ag6dFv4VH6jiqi/kPyk9K6eBTwklX9TjFVJvy78p&#xA;k1FoyjwEslPxY4qon8tPLBBASYe4kP8AEYqhb78o/KV9aSWl0J5beYcZI2ZGBHuGQjFXnt//AM4d&#xA;/ltOzPaajqtozGoQSwSRqPABoef3tiq23/5xF8nxyR+rrmoywqfjWkCsw8A3A0+44qzvSPyW8naR&#xA;aJaWJuY7dN+POOrMerMfTqScVTFPyy8tKd/Xb2Mg/goxVVT8uPKqihgkb3Mr/wACMVVl/L/ykKf6&#xA;DUjuZZt/+HxVWXyT5VU1GnR/SXP62xVVTyl5aUUGmwfSgP664qrL5d0BaFdMtQR0PoR1+/jiqsmk&#xA;6UleFnAtetIkH6hiqstrbIAFhRQOgCgUxVUxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1000.000000</stDim:w>
            <stDim:h>1000.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Standardfärgrutegrupp</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Vit</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Svart</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>29</xmpG:red>
                           <xmpG:green>29</xmpG:green>
                           <xmpG:blue>27</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK röd</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>226</xmpG:red>
                           <xmpG:green>6</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK gul</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>236</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK grön</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>149</xmpG:green>
                           <xmpG:blue>64</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>158</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK blå</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>49</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>130</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>229</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>126</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=15 M=100 Y=90 K=10</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>189</xmpG:red>
                           <xmpG:green>22</xmpG:green>
                           <xmpG:blue>34</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=90 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>229</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>42</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=80 Y=95 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>232</xmpG:red>
                           <xmpG:green>78</xmpG:green>
                           <xmpG:blue>27</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=50 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>145</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=35 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>248</xmpG:red>
                           <xmpG:green>177</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=5 M=0 Y=90 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>234</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=20 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>221</xmpG:red>
                           <xmpG:green>219</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>192</xmpG:green>
                           <xmpG:blue>31</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>53</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=10 Y=100 K=10</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>141</xmpG:green>
                           <xmpG:blue>54</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=90 M=30 Y=95 K=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=75 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>45</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=80 M=10 Y=45 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>160</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=70 M=15 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>53</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>224</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=50 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>29</xmpG:red>
                           <xmpG:green>112</xmpG:green>
                           <xmpG:blue>183</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=95 Y=5 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>45</xmpG:red>
                           <xmpG:green>46</xmpG:green>
                           <xmpG:blue>130</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=100 Y=25 K=25</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>35</xmpG:green>
                           <xmpG:blue>92</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>36</xmpG:green>
                           <xmpG:blue>130</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>148</xmpG:red>
                           <xmpG:green>27</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=100 Y=35 K=10</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>162</xmpG:red>
                           <xmpG:green>25</xmpG:green>
                           <xmpG:blue>91</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=10 M=100 Y=50 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>214</xmpG:red>
                           <xmpG:green>11</xmpG:green>
                           <xmpG:blue>81</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=95 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>27</xmpG:green>
                           <xmpG:blue>114</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=25 Y=40 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>202</xmpG:red>
                           <xmpG:green>186</xmpG:green>
                           <xmpG:blue>159</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=45 Y=50 K=5</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>163</xmpG:red>
                           <xmpG:green>137</xmpG:green>
                           <xmpG:blue>122</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=50 Y=60 K=25</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>122</xmpG:red>
                           <xmpG:green>106</xmpG:green>
                           <xmpG:blue>88</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=55 M=60 Y=65 K=40</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>99</xmpG:red>
                           <xmpG:green>78</xmpG:green>
                           <xmpG:blue>66</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=40 Y=65 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>201</xmpG:red>
                           <xmpG:green>157</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=30 M=50 Y=75 K=10</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>177</xmpG:red>
                           <xmpG:green>127</xmpG:green>
                           <xmpG:blue>73</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=60 Y=80 K=25</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>146</xmpG:red>
                           <xmpG:green>95</xmpG:green>
                           <xmpG:blue>54</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=65 Y=90 K=35</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>126</xmpG:red>
                           <xmpG:green>78</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=70 Y=100 K=50</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>104</xmpG:red>
                           <xmpG:green>59</xmpG:green>
                           <xmpG:blue>17</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=70 Y=80 K=70</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>41</xmpG:green>
                           <xmpG:blue>24</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>29</xmpG:red>
                           <xmpG:green>29</xmpG:green>
                           <xmpG:blue>27</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>60</xmpG:red>
                           <xmpG:green>60</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=80</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>87</xmpG:red>
                           <xmpG:green>87</xmpG:green>
                           <xmpG:blue>86</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=70</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>111</xmpG:red>
                           <xmpG:green>111</xmpG:green>
                           <xmpG:blue>110</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=60</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>134</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>134</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=50</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>156</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>155</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=40</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>177</xmpG:red>
                           <xmpG:green>177</xmpG:green>
                           <xmpG:blue>177</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=20</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>217</xmpG:green>
                           <xmpG:blue>217</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=10</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>236</xmpG:red>
                           <xmpG:green>236</xmpG:green>
                           <xmpG:blue>236</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=5</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>245</xmpG:red>
                           <xmpG:green>245</xmpG:green>
                           <xmpG:blue>245</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=100 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>226</xmpG:red>
                           <xmpG:green>6</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=75 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>233</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>12</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=10 Y=95 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>221</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=10 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>151</xmpG:green>
                           <xmpG:blue>58</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=90 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>40</xmpG:red>
                           <xmpG:green>52</xmpG:green>
                           <xmpG:blue>138</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=60 M=90 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>129</xmpG:red>
                           <xmpG:green>53</xmpG:green>
                           <xmpG:blue>138</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <dc:format>application/postscript</dc:format>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c2b8b23f-7ed5-fa46-9649-91c1811a0bf8</stEvt:instanceID>
                  <stEvt:when>2015-09-24T12:59:16+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b9678637-7956-5e4e-a582-97297987111d</stEvt:instanceID>
                  <stEvt:when>2015-09-25T16:20:12+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ae46cdcf-738d-3248-b72b-ce8eb17a3556</stEvt:instanceID>
                  <stEvt:when>2015-09-29T13:27:37+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2c7b9605-e9c8-d94a-8d37-64d8410bdad3</stEvt:instanceID>
                  <stEvt:when>2015-09-29T16:32:56+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b98f10bf-9103-664c-898c-0ad71695b56e</stEvt:instanceID>
                  <stEvt:when>2015-09-29T17:16:55+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DocumentID>xmp.did:b98f10bf-9103-664c-898c-0ad71695b56e</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:b98f10bf-9103-664c-898c-0ad71695b56e</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:c2b8b23f-7ed5-fa46-9649-91c1811a0bf8</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:2c7b9605-e9c8-d94a-8d37-64d8410bdad3</stRef:instanceID>
            <stRef:documentID>xmp.did:2c7b9605-e9c8-d94a-8d37-64d8410bdad3</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:c2b8b23f-7ed5-fa46-9649-91c1811a0bf8</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1000 li
1000 1000 li
1000 0 li
cp
clp
1000 1000 mo
0 1000 li
0 0 li
1000 0 li
1000 1000 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
146.245 768.62 mo
201.639 766.519 522.739 746.311 561.441 745.175 cv
594.274 744.211 619.25 745.774 679.245 746.695 cv
788.245 748.37 897.665 757.025 915.495 758.37 cv
937.578 760.037 968.021 767.928 906.896 771.962 cv
846.278 775.962 448.745 793.284 419.745 793.284 cv
373.995 793.284 160.675 783.767 118.861 780.945 cv
78.2449 778.204 73.9949 771.36 146.245 768.62 cv
cp
.607843 .607843 .607843 rgb
f
584.16 704.237 mo
584.16 726.209 581.914 754.675 581.914 754.675 cv
581.914 754.675 554.587 754.675 548.772 753.574 cv
529.953 750.01 514.985 731.28 514.985 704.237 cv
514.985 677.194 530.47 655.271 549.573 655.271 cv
554.348 655.271 583.37 656.743 583.37 656.743 cv
583.37 656.743 584.16 683.954 584.16 704.237 cv
cp
.027451 .027451 .027451 rgb
f
616.501 705.709 mo
616.501 732.752 601.016 754.675 581.914 754.675 cv
562.811 754.675 547.326 732.752 547.326 705.709 cv
547.326 678.666 562.811 656.743 581.914 656.743 cv
601.016 656.743 616.501 678.666 616.501 705.709 cv
cp
f
117.892 484.167 mo
120.418 484.037 122.118 484.082 125.366 484.057 cv
129.218 484.027 130.451 485.241 130.451 491.678 cv
130.451 498.115 130.451 524.011 130.451 526.425 cv
130.451 531.655 128.852 534.566 124.005 534.566 cv
119.484 534.566 116.891 534.566 114.895 534.566 cv
111.26 534.566 108.947 532.926 108.637 527.661 cv
108.274 521.482 108.564 507.816 109.37 501.637 cv
110.11 495.966 114.118 484.362 117.892 484.167 cv
cp
.14902 .14902 .14902 rgb
f
172.589 721.69 mo
172.589 747.013 170.323 779.819 170.323 779.819 cv
170.323 779.819 143.608 779.735 137.272 778.583 cv
118.319 775.138 102.828 752.857 102.828 721.69 cv
102.828 690.524 118.444 665.258 137.708 665.258 cv
142.524 665.258 171.792 666.955 171.792 666.955 cv
171.792 666.955 172.589 698.315 172.589 721.69 cv
cp
.0588235 .0588235 .0588235 rgb
f
205.204 723.387 mo
205.204 754.554 189.587 779.819 170.323 779.819 cv
151.059 779.819 135.443 754.554 135.443 723.387 cv
135.443 692.22 151.059 666.955 170.323 666.955 cv
189.587 666.955 205.204 692.22 205.204 723.387 cv
cp
.027451 .027451 .027451 rgb
f
836.831 742.197 mo
848.78 697.058 li
849.749 647.24 li
781.321 647.24 li
816.667 741.594 li
836.831 742.197 li
cp
.0862745 .0862745 .0862745 rgb
f
152.864 512.492 mo
127.543 500.546 li
120.953 500.546 li
120.953 498.22 li
128.088 498.22 li
155.748 511.596 li
152.864 512.492 li
cp
.14902 .14902 .14902 rgb
f
389.288 613.775 mo
352.885 708.928 li
352.885 708.928 466.29 723.542 494.591 723.773 cv
496.918 672.052 466.975 569.843 389.288 613.775 cv
cp
.027451 .027451 .027451 rgb
f
797.895 662.417 mo
797.895 763.076 li
797.895 763.076 774.891 761.147 766.168 760.275 cv
749.787 758.637 736.364 738.28 736.364 710.484 cv
736.364 682.688 748.858 661.049 765.077 661.049 cv
782.378 661.049 797.895 662.417 797.895 662.417 cv
cp
.0666667 .0666667 .0666667 rgb
f
827.263 712.747 mo
827.263 740.543 814.115 763.076 797.895 763.076 cv
781.676 763.076 768.528 740.543 768.528 712.747 cv
768.528 684.951 781.676 662.417 797.895 662.417 cv
814.115 662.417 827.263 684.951 827.263 712.747 cv
cp
.156863 .156863 .156863 rgb
f
818.54 712.747 mo
818.54 731.215 810.208 746.185 799.931 746.185 cv
789.653 746.185 781.321 731.215 781.321 712.747 cv
781.321 694.279 789.653 679.308 799.931 679.308 cv
810.208 679.308 818.54 694.279 818.54 712.747 cv
cp
.4 .4 .4 rgb
f
817.625 702.265 mo
820.227 716.376 814.729 731.369 805.327 733.792 cv
796.497 736.068 786.844 724.455 786.457 707.3 cv
786.081 690.658 790.829 680.742 798.378 679.425 cv
807.023 677.916 815.023 688.153 817.625 702.265 cv
cp
.486275 .486275 .482353 rgb
f
234.595 406.434 mo
218.845 392.138 li
218.845 392.138 128.222 386.71 111.26 383.512 cv
101.223 381.619 92.6509 371.881 94.3955 358.215 cv
96.1401 344.549 107.397 325.419 107.397 325.419 cv
429.18 306.918 li
429.18 306.918 601.982 370.233 601.982 375.079 cv
602.952 726.91 li
565.151 722.258 li
565.151 722.258 562.795 727.289 550.686 728.292 cv
526.988 730.254 472.881 733.21 472.881 733.21 cv
472.881 733.21 473.704 683.877 469.391 665.074 cv
464.865 645.343 453.884 633.67 430.622 634.833 cv
407.361 635.997 391.465 656.544 383.711 682.52 cv
64.8822 659.888 li
64.8822 659.888 65.0277 624.85 66.1908 611.766 cv
67.3539 598.681 75.4954 587.05 92.6509 567.859 cv
109.806 548.669 151.677 513.195 151.677 513.195 cv
151.677 513.195 203.386 438.806 234.595 406.434 cv
.678431 .678431 .678431 rgb
f
568.153 715.705 mo
551.702 716.4 515.086 719.095 489.656 720.016 cv
488.694 720.051 485.567 718.099 485.195 716.311 cv
483.632 708.811 480.634 691.437 480.634 691.437 cv
472.881 733.211 li
472.881 733.211 526.988 730.254 550.686 728.292 cv
562.795 727.289 565.152 722.258 565.152 722.258 cv
565.152 722.258 568.161 717.836 568.153 715.705 cv
cp
.576471 .576471 .576471 rgb
f
471.352 410.449 mo
515.81 410.096 562.098 416.133 562.098 416.133 cv
562.098 376.63 li
453.351 362.479 li
471.352 410.449 li
cp
.517647 .517647 .517647 rgb
f
553.521 379.732 mo
601.982 375.079 li
602.952 726.911 li
565.152 722.258 li
565.152 722.258 575.619 709.464 577.313 649.3 cv
579.793 561.166 568.215 443.507 559.507 402.066 cv
557.278 391.458 553.521 387.001 553.521 387.001 cv
553.521 379.732 li
cp
.839216 .839216 .839216 rgb
f
562.098 416.133 mo
568.936 411.072 594.411 381.082 601.737 375.103 cv
552.939 379.615 li
553.521 387.001 li
553.521 387.001 556.795 391.571 559.507 402.066 cv
560.03 404.09 562.098 416.133 562.098 416.133 cv
cp
.607843 .607843 .607843 rgb
f
577.19 653.054 mo
575.307 711.326 565.152 722.258 565.152 722.258 cv
602.952 726.911 li
602.952 655.271 li
577.19 653.054 li
cp
.364706 .533333 .627451 rgb
f
450.986 308.705 mo
524.444 206.821 li
499.631 207.596 276.32 234.734 235.613 241.325 cv
194.905 247.916 175.52 251.018 141.791 283.196 cv
109.795 313.72 101.445 336.351 97.7441 345.721 cv
450.986 308.705 li
cp
.839216 .839216 .839216 rgb
f
525.51 212.248 mo
524.444 206.821 li
499.631 207.596 276.503 234.705 235.795 241.296 cv
214.71 244.71 196.383 247.431 179.995 255.317 cv
179.995 255.317 261.007 238.805 525.51 212.248 cv
cp
.698039 .698039 .698039 rgb
f
494.204 338.152 mo
481.703 335.125 126.934 376.873 101.875 378.981 cv
104.604 381.292 107.84 382.867 111.26 383.512 cv
128.222 386.71 218.845 392.138 218.845 392.138 cv
459.505 370.233 li
552.939 379.615 li
601.982 375.079 li
601.982 375.079 497.945 339.057 494.204 338.152 cv
cp
.388235 .388235 .388235 rgb
f
472.948 389.382 mo
453.758 380.247 233.48 396.911 233.48 396.911 cv
234.595 406.434 li
203.386 438.806 151.677 513.195 151.677 513.195 cv
151.677 513.195 109.806 548.669 92.6509 567.859 cv
81.4047 580.44 74.0597 589.768 69.9927 598.39 cv
69.9927 598.39 226.206 603.088 336.044 593.988 cv
350.757 592.769 363.132 583.419 372.662 571.446 cv
383.685 557.597 413.174 519.552 433.768 479.263 cv
455.17 437.394 472.73 406.002 476.153 402.541 cv
481.113 397.524 472.948 389.382 472.948 389.382 cv
.839216 .839216 .839216 rgb
f
472.948 389.382 mo
453.758 380.247 233.48 396.911 233.48 396.911 cv
234.595 406.434 li
230.476 410.535 225.079 416.835 225.079 416.835 cv
457.559 416.898 li
463.019 411.135 471.352 410.449 471.352 410.449 cv
473.632 405.755 476.153 402.541 476.153 402.541 cv
481.69 397.185 472.948 389.382 472.948 389.382 cv
cp
.627451 .627451 .627451 rgb
f
565.152 722.258 mo
573.075 705.902 576.775 689.991 577.364 612.924 cv
577.909 541.574 567.081 457.889 563.005 426.385 cv
562.248 420.513 li
558.842 393.827 553.155 387.461 553.097 387.4 cv
552.942 387.232 li
552.939 387.001 li
552.939 379.615 li
554.138 379.504 li
554.102 386.785 li
555.09 387.999 560.207 395.337 563.402 420.366 cv
564.159 426.236 li
568.238 457.761 579.072 541.504 578.527 612.933 cv
577.941 689.777 574.093 705.709 566.098 722.375 cv
565.152 722.258 li
cp
.207843 .207843 .207843 rgb
f
527.739 406.778 mo
536.171 407.645 542.428 408.249 544.28 423.068 cv
547.124 445.833 549.45 505.344 549.45 512.129 cv
549.45 521.821 546.542 527.443 532.973 527.83 cv
519.404 528.218 447.874 527.726 441.865 527.83 cv
431.979 528.003 421.444 521.105 430.555 503.465 cv
439.666 485.825 471.882 423.321 475.953 416.149 cv
480.024 408.976 482.576 404.763 493.186 405.029 cv
504.962 405.324 524.208 406.415 527.739 406.778 cv
cp
.137255 .137255 .137255 rgb
f
525.959 410.779 mo
533.615 411.583 539.296 412.142 540.976 425.87 cv
543.559 446.961 545.67 502.093 545.67 508.378 cv
545.67 517.357 543.031 522.565 530.712 522.924 cv
518.393 523.283 453.453 522.827 447.998 522.924 cv
439.023 523.084 429.459 516.694 437.73 500.351 cv
446.001 484.009 475.249 426.105 478.945 419.46 cv
482.641 412.816 484.958 408.912 494.59 409.158 cv
505.281 409.432 522.754 410.443 525.959 410.779 cv
cp
.180392 .329412 .439216 rgb
f
449.281 467.208 mo
449.281 467.208 434.612 495.61 430.555 503.465 cv
421.444 521.105 431.979 528.003 441.865 527.83 cv
443.037 527.81 458.151 527.833 458.151 527.833 cv
459.169 489.785 449.281 467.208 449.281 467.208 cv
cp
.137255 .137255 .137255 rgb
f
463.694 405.852 mo
453.583 423.646 419.019 487.51 411.207 499.529 cv
407.492 505.244 405.792 507.8 395.392 507.945 cv
384.992 508.091 202.085 514.076 164.347 515.23 cv
154.837 515.521 152.601 512.547 156.336 506.513 cv
160.965 499.036 210.753 430.799 230.175 411.426 cv
233.111 408.497 234.433 407.151 240.147 406.434 cv
251.574 405 345.269 393.396 459.91 393.396 cv
468.503 393.396 469.504 395.627 463.694 405.852 cv
.207843 .207843 .207843 rgb
f
456.197 407.571 mo
446.577 423.871 415.965 480.249 408.532 491.259 cv
404.997 496.495 402.325 498.914 392.43 499.047 cv
382.535 499.181 208.237 504.589 172.286 506.458 cv
163.86 506.897 160.78 505.358 164.119 499.965 cv
168.402 493.045 213.37 430.018 231.78 412.54 cv
235.545 408.966 237.087 408.919 242.523 408.262 cv
253.396 406.948 344.136 396.387 453.213 396.387 cv
461.39 396.387 461.725 398.203 456.197 407.571 cv
.247059 .435294 .54902 rgb
f
432.138 346.289 mo
432.138 346.289 422.16 340.289 424.695 324.731 cv
94.2594 359.529 li
94.2594 359.529 92.9863 368.747 99.1871 376.231 cv
107.607 374.349 432.138 346.289 432.138 346.289 cv
cp
.498039 .498039 .498039 rgb
f
104.285 380.744 mo
433.167 348 li
433.167 348 423.57 342.476 422.151 333.341 cv
378.335 338.296 95.0068 368.155 95.0068 368.155 cv
95.0068 368.155 96.4999 375.813 104.285 380.744 cv
cp
.337255 .337255 .337255 rgb
f
234.595 406.434 mo
218.845 392.138 li
218.845 392.138 393.714 373.075 459.505 370.233 cv
472.948 389.382 li
472.948 389.382 344.486 390.139 242.639 403.962 cv
239.317 404.413 236.146 405.101 234.595 406.434 cv
cp
.458824 .458824 .458824 rgb
f
491.587 720.514 mo
486.913 720.514 484.123 718.34 484.123 714.698 cv
484.123 714.298 484.134 713.677 484.146 712.858 cv
484.263 705.353 484.621 682.512 480.452 661.309 cv
474.447 630.782 450.479 620.897 447.766 619.87 cv
442.58 617.908 442.251 614.348 442.35 611.166 cv
442.425 608.78 442.384 569.926 442.362 549.053 cv
442.355 542.795 442.35 538.042 442.35 536.166 cv
442.35 528.677 439.223 528.288 439.191 528.285 cv
439.271 527.125 li
439.444 527.135 443.513 527.479 443.513 536.166 cv
443.513 538.042 443.518 542.794 443.525 549.052 cv
443.547 569.932 443.588 608.798 443.513 611.202 cv
443.418 614.231 443.704 617.089 448.177 618.782 cv
450.952 619.832 475.467 629.941 481.593 661.084 cv
485.786 682.407 485.427 705.341 485.309 712.876 cv
485.297 713.687 485.286 714.302 485.286 714.698 cv
485.286 718.897 489.692 719.351 491.587 719.351 cv
496.356 719.351 568.166 715.2 568.883 715.159 cv
568.215 716.339 li
565.284 716.51 496.389 720.514 491.587 720.514 cv
cp
.207843 .207843 .207843 rgb
f
324.579 602.457 mo
323.428 602.296 li
323.442 602.197 324.895 592.24 331.09 583.42 cv
339.25 571.807 392.422 508.648 392.961 508.007 cv
394.576 507.967 li
394.037 508.607 340.172 572.516 332.042 584.089 cv
326.007 592.682 324.593 602.361 324.579 602.457 cv
cp
f
434.686 495.466 mo
434.686 495.466 431.781 488.662 432.174 483.396 cv
432.52 478.77 436.78 471.053 441.712 462.117 cv
442.732 460.27 443.785 458.363 444.843 456.411 cv
446.352 453.63 448.246 450.072 450.359 446.102 cv
456.807 433.989 465.637 417.401 471.475 408.023 cv
476.758 399.538 482.42 394.279 494.301 394.279 cv
507.662 394.279 551.091 398.755 559.087 399.636 cv
558.96 400.793 li
550.974 399.912 507.609 395.442 494.301 395.442 cv
482.907 395.442 477.666 400.28 472.463 408.638 cv
466.645 417.982 457.826 434.55 451.386 446.648 cv
449.271 450.621 447.376 454.182 445.866 456.966 cv
444.805 458.92 443.752 460.83 442.731 462.679 cv
437.864 471.496 433.661 479.109 433.334 483.482 cv
432.961 488.469 435.298 494.277 435.298 494.277 cv
434.686 495.466 li
cp
f
463.845 684.41 mo
463.845 684.41 479.278 686.203 480.634 691.437 cv
481.991 696.67 483.838 745.883 479.186 763.135 cv
454.265 762.399 li
454.265 762.399 466.581 729.382 463.845 684.41 cv
cp
.0666667 .0666667 .0666667 rgb
f
427.092 662.368 mo
427.092 793.211 li
427.092 793.211 399.824 793.624 388.485 792.482 cv
367.193 790.337 351.483 763.341 351.483 726.952 cv
351.483 690.563 367.724 662.236 388.807 662.236 cv
411.295 662.236 427.092 662.368 427.092 662.368 cv
cp
f
465.266 727.789 mo
465.266 763.921 448.175 793.211 427.092 793.211 cv
406.009 793.211 388.918 763.921 388.918 727.789 cv
388.918 691.658 406.009 662.368 427.092 662.368 cv
448.175 662.368 465.266 691.658 465.266 727.789 cv
cp
.156863 .156863 .156863 rgb
f
453.927 727.789 mo
453.927 751.795 443.097 771.255 429.738 771.255 cv
416.378 771.255 405.548 751.795 405.548 727.789 cv
405.548 703.784 416.378 684.324 429.738 684.324 cv
443.097 684.324 453.927 703.784 453.927 727.789 cv
cp
.4 .4 .4 rgb
f
452.22 716.66 mo
454.062 735.582 446.659 751.787 435.683 752.856 cv
424.708 753.924 414.317 739.451 412.475 720.53 cv
410.633 701.608 418.037 685.403 429.012 684.334 cv
439.987 683.265 450.378 697.738 452.22 716.66 cv
cp
.486275 .486275 .482353 rgb
f
282.814 653.443 mo
119.403 652.723 61.2099 708.46 61.2099 708.46 cv
62.7104 720.562 71.1339 729.818 96.7216 735.634 cv
122.309 741.449 326.72 741.449 354.053 739.995 cv
375.83 738.837 375.957 708.495 383.711 682.52 cv
386.213 674.138 391.847 660.324 399.346 651.676 cv
399.346 651.676 354.295 653.758 282.814 653.443 cv
cp
.109804 .109804 .109804 rgb
f
282.814 653.443 mo
119.403 654.188 64.8554 653.443 64.8554 653.443 cv
64.8554 653.443 59.275 654.824 59.1457 657.816 cv
59.0321 660.443 59.0565 664.547 59.5329 669.978 cv
59.7307 672.234 62.4108 673.627 62.4108 673.627 cv
62.4932 676.76 64.8824 698.742 64.8824 698.742 cv
60.5925 699.106 li
60.4914 699.661 60.6545 709.005 62.5436 714.055 cv
64.3977 719.011 69.6381 722.96 93.6686 724.802 cv
137.284 728.146 262.164 730.4 294.348 727.76 cv
316.083 725.977 331.179 719.579 347.22 685.185 cv
350.917 677.257 358.027 653.502 358.027 653.502 cv
358.027 653.502 337.382 653.194 282.814 653.443 cv
cp
.156863 .156863 .156863 rgb
f
282.814 653.443 mo
119.403 654.188 64.8554 653.443 64.8554 653.443 cv
64.8554 653.443 60.3512 654.557 59.4186 656.793 cv
59.4186 656.793 60.3692 657.566 64.5858 657.988 cv
69.1632 658.446 76.1187 658.634 83.603 658.852 cv
85.4907 658.907 86.4242 659.742 87.09 661.088 cv
88.0908 663.111 89.6419 666.562 94.9285 666.955 cv
108.74 667.981 204.889 667.806 243.755 667.469 cv
250.883 667.407 254.603 664.696 256.48 661.875 cv
258.365 659.04 260.473 659.2 260.473 659.2 cv
317.692 658.81 379.345 657.38 399.346 651.676 cv
359.855 652.779 li
359.855 652.779 337.382 653.194 282.814 653.443 cv
cp
.329412 .329412 .329412 rgb
f
256.838 699.304 mo
122.115 698.81 64.5703 695.519 64.5703 695.519 cv
64.5703 695.519 60.957 697.102 60.5925 699.106 cv
60.5925 699.106 61.9308 701.883 88.4347 702.995 cv
142.215 705.251 225.606 706.239 271.983 703.614 cv
298.952 702.087 309.94 696.239 309.94 696.239 cv
309.94 696.239 282.16 699.397 256.838 699.304 cv
cp
f
249.705 613.804 mo
260.897 613.797 265.07 612.92 262.664 625.619 cv
260.03 639.529 258.362 648.285 257.388 652.917 cv
256.013 659.449 253.608 662.443 244.183 662.443 cv
234.759 662.443 102.078 662.441 98.838 662.443 cv
94.7146 662.445 91.2168 662.026 90.6354 653.356 cv
89.6645 638.882 88.677 624.983 88.677 621.894 cv
88.677 617.236 90.0374 615.011 94.8621 615.011 cv
101.79 615.011 240.158 613.81 249.705 613.804 cv
cp
.247059 .247059 .247059 rgb
f
121.799 661.265 mo
244.183 661.267 li
253.017 661.267 254.975 658.733 256.25 652.672 cv
257.238 647.976 258.979 638.824 261.522 625.398 cv
262.439 620.555 262.373 617.813 261.307 616.508 cv
260.242 615.204 257.861 614.965 253.558 614.965 cv
249.706 614.981 li
244.655 614.984 204.071 615.318 164.824 615.64 cv
130.524 615.922 98.1261 616.188 94.8623 616.188 cv
91.0136 616.188 89.8403 617.521 89.8403 621.894 cv
89.8403 624.386 90.5053 634.201 91.2754 645.567 cv
91.7955 653.276 li
92.3317 661.266 95.3314 661.266 98.8047 661.266 cv
121.799 661.265 li
cp
244.396 663.196 mo
98.9993 663.087 li
94.409 663.087 90.4704 662.896 89.84 653.491 cv
89.84 653.491 88.035 624.588 88.035 622.015 cv
88.035 618.03 88.1625 614.528 94.6377 614.528 cv
97.8919 614.528 253.737 613.329 253.737 613.329 cv
258.178 613.329 260.967 613.168 262.784 615.393 cv
264.375 617.34 264.41 620.17 263.321 625.917 cv
260.776 639.357 258.946 648.41 257.953 653.128 cv
256.527 659.91 254.603 663.196 244.396 663.196 cv
cp
.117647 .117647 .117647 rgb
f
243.536 620.611 mo
253.943 620.606 257.708 620.046 255.472 629.805 cv
253.022 640.493 251.638 646.76 250.634 650.301 cv
249.629 653.843 247.165 657.988 238.401 657.988 cv
229.638 657.988 106.265 657.987 103.252 657.988 cv
99.4179 657.989 96.1655 657.668 95.6247 651.005 cv
94.7221 639.882 93.8038 629.202 93.8038 626.828 cv
93.8038 623.248 95.0688 621.538 99.5551 621.538 cv
105.997 621.538 234.658 620.616 243.536 620.611 cv
cp
.0666667 .0666667 .0666667 rgb
f
255.508 629.644 mo
213.267 629.644 95.1188 630.084 93.9642 630.088 cv
94.086 631.83 li
121.623 631.726 217.86 631.389 255.093 631.389 cv
255.508 629.644 li
cp
.156863 .156863 .156863 rgb
f
95.4239 648.542 mo
95.5665 650.287 li
100.14 650.269 209.68 649.841 250.748 649.841 cv
251.191 648.105 li
219.181 648.029 100.382 648.522 95.4239 648.542 cv
cp
f
253.355 638.951 mo
216.061 638.951 114.128 639.317 94.6757 639.39 cv
94.8178 641.138 li
95.9502 641.134 211.579 640.694 252.96 640.694 cv
253.355 638.951 li
cp
f
432.748 634.762 mo
432.748 634.762 452.699 633.278 462.475 648.182 cv
472.251 663.087 471.893 686.006 471.893 686.006 cv
463.845 684.41 li
463.845 684.41 463.142 668.741 459.021 656.544 cv
455.09 644.914 446.166 636.097 432.748 634.762 cv
cp
.207843 .207843 .207843 rgb
f
274.849 422.936 mo
261.717 422.314 239.24 422.669 234.991 422.669 cv
230.742 422.669 226.798 422.794 218.16 434.59 cv
212.068 442.91 194.239 466.04 193.693 466.813 cv
189.16 485.239 186.458 505.838 186.458 505.838 cv
278.333 502.58 li
280.297 481.472 284.171 442.529 284.995 432.857 cv
285.519 426.711 285.876 423.458 274.849 422.936 cv
.368627 .556863 .647059 rgb
f
228.248 422.308 mo
220.564 504.596 li
215.131 504.788 li
223.001 423.087 li
223.001 423.087 225.788 422.193 228.248 422.308 cv
.247059 .435294 .54902 rgb
f
479.93 410.337 mo
483.445 527.933 li
489.648 527.982 li
485.186 406.434 li
479.93 410.337 li
cp
.137255 .137255 .137255 rgb
f
457.213 503.889 mo
455.211 504.308 450.625 505.526 449.68 505.526 cv
447.935 505.526 447.85 501.516 449.4 501.416 cv
451.239 501.298 454.852 501.461 456.945 501.258 cv
459.021 501.055 467.389 495.581 473.826 491.423 cv
485.305 484.009 492.464 478.448 494.591 478.448 cv
507.87 480.438 li
507.87 482.765 li
494.591 481.428 li
492.891 481.45 481.82 488.987 474.952 493.423 cv
463.857 500.588 460.082 503.29 457.213 503.889 cv
cp
.0862745 .0862745 .0862745 rgb
f
940.339 634.914 mo
940.339 619.213 940.244 405.901 940.244 369.264 cv
940.244 354.55 938.773 345.808 935.683 340.263 cv
931.079 332 923.29 330.988 914.706 329.132 cv
900.362 326.03 678.358 277.187 675.838 276.411 cv
673.318 275.636 652.77 258.965 642.69 250.242 cv
632.61 241.519 612.547 223.588 596.264 216.61 cv
579.981 209.631 549.256 206.045 524.444 206.821 cv
517.48 207.038 509.539 209.218 500.128 218.645 cv
476.506 242.307 440.742 285.57 429.18 306.918 cv
411.415 339.716 429.297 352.848 452.419 355.64 cv
480.412 359.02 601.982 375.079 601.982 375.079 cv
602.952 726.911 li
602.952 726.911 696.981 717.964 783.553 709.347 cv
785.044 708.86 787.945 707.214 788.445 701.709 cv
789.124 694.246 791.644 669.046 792.225 664.684 cv
792.807 660.323 794.115 657.56 799.495 656.979 cv
804.874 656.397 830.461 655.816 833.078 655.816 cv
835.695 655.816 841.22 655.573 842.238 663.133 cv
843.255 670.693 846.163 692.986 846.599 696.184 cv
847.031 699.349 848.579 699.757 851.753 700.451 cv
889.557 696.539 904.546 694.399 910.822 693.188 cv
932.92 688.923 940.339 650.616 940.339 634.914 cv
cp
.25098 .380392 .486275 rgb
f
936.87 636.654 mo
936.87 620.952 937.531 407.839 937.531 371.202 cv
937.531 337.473 929.844 335.828 915.499 332.727 cv
901.154 329.625 676.365 281.382 673.845 280.606 cv
671.325 279.831 649.784 262.288 639.704 253.565 cv
629.624 244.842 611.863 228.631 595.58 221.653 cv
579.296 214.674 551.407 211.282 526.594 212.057 cv
519.631 212.275 512.744 214.406 503.333 223.834 cv
479.711 247.496 449.81 284.823 437.255 305.71 cv
418.039 337.679 434.896 347.333 457.997 350.294 cv
487.342 354.056 607.846 370.189 607.846 370.189 cv
607.701 661.681 li
607.701 661.681 936.87 652.355 936.87 636.654 cv
cp
.678431 .678431 .678431 rgb
f
602.952 655.271 mo
602.952 726.911 li
602.952 726.911 696.981 717.964 783.553 709.347 cv
785.044 708.86 787.945 707.214 788.445 701.709 cv
789.124 694.246 791.644 669.046 792.225 664.684 cv
792.807 660.323 794.115 657.56 799.495 656.979 cv
804.874 656.397 830.461 655.816 833.078 655.816 cv
835.695 655.816 841.22 655.573 842.238 663.133 cv
843.255 670.693 846.163 692.986 846.599 696.184 cv
847.031 699.349 847.271 701.886 850.446 702.58 cv
888.249 698.669 904.84 696.835 914.141 695.648 cv
924.421 694.337 940.251 668.563 940.251 657.223 cv
940.251 651.31 940.339 634.914 940.339 634.914 cv
602.952 655.271 li
cp
.25098 .380392 .486275 rgb
f
850.446 702.58 mo
850.446 702.58 849.233 702.377 847.977 700.93 cv
846.822 699.599 846.743 696.818 846.251 693.575 cv
845.525 688.777 842.768 667.108 842.014 661.888 cv
841.746 660.027 840.154 656.179 835.235 655.898 cv
832.863 655.762 828.208 655.9 828.208 655.9 cv
828.208 655.9 835.867 655.573 836.885 663.133 cv
837.903 670.693 840.81 692.986 841.247 696.184 cv
841.519 698.183 842.219 700.741 843.821 702.025 cv
850.446 702.58 li
cp
.207843 .207843 .207843 rgb
f
649.905 342.911 mo
666.203 345.097 751.075 357.714 758.636 358.639 cv
766.196 359.564 771.597 362.748 771.597 373.8 cv
771.597 384.853 771.601 461.18 771.601 469.507 cv
771.601 477.833 771.231 485.614 756.83 484.997 cv
742.429 484.38 657.106 477.372 647.745 476.755 cv
638.384 476.138 636.584 472.997 636.584 463.311 cv
636.584 453.625 636.224 359.564 636.584 351.546 cv
636.944 343.528 643.528 342.055 649.905 342.911 cv
cp
.0980392 .0980392 .0980392 rgb
f
657.333 351.615 mo
671.799 353.53 747.13 364.577 753.841 365.388 cv
760.552 366.198 765.345 368.985 765.345 378.663 cv
765.345 388.341 765.345 454.147 765.345 461.438 cv
765.345 472.996 764.063 476.774 754.515 476.083 cv
739.481 474.996 663.724 469.354 655.415 468.814 cv
647.106 468.274 645.509 465.523 645.509 457.042 cv
645.509 448.561 645.189 366.198 645.509 359.176 cv
645.828 352.155 651.672 350.866 657.333 351.615 cv
cp
.145098 .14902 .14902 rgb
f
657.333 351.615 mo
671.799 353.53 747.13 364.577 753.841 365.388 cv
757.612 365.843 760.778 366.923 762.828 369.499 cv
762.828 369.499 753.104 380.335 750.154 379.913 cv
743.902 379.02 676.153 369.991 662.44 367.671 cv
658.791 367.054 648.427 353.086 648.427 353.086 cv
650.711 351.527 653.734 351.139 657.333 351.615 cv
cp
.396078 .396078 .396078 rgb
f
518.932 259.256 mo
518.932 272.545 518.903 288.437 518.931 297.883 cv
518.961 307.771 519.643 310.058 528.408 311.6 cv
539.91 313.624 565.135 317.962 571.248 318.866 cv
577.36 319.77 584.92 320.006 584.92 310.663 cv
584.92 295.216 585.017 281.5 584.92 276.453 cv
584.844 272.524 584.963 264.587 577.184 262.991 cv
570.334 261.585 538.019 255.047 533.086 254.042 cv
528.154 253.037 518.932 250.145 518.932 259.256 cv
cp
.0980392 .0980392 .0980392 rgb
f
525.52 264.021 mo
525.52 274.945 525.497 288.011 525.52 295.777 cv
525.544 303.906 526.108 305.786 533.351 307.054 cv
542.854 308.717 563.696 312.284 568.746 313.027 cv
573.797 313.771 580.043 313.964 580.043 306.283 cv
580.043 293.584 580.123 282.308 580.043 278.158 cv
579.981 274.928 580.079 268.403 573.651 267.091 cv
567.992 265.935 541.291 260.56 537.216 259.734 cv
533.14 258.908 525.52 256.53 525.52 264.021 cv
cp
.145098 .14902 .14902 rgb
f
534.332 265.837 mo
543.417 268.019 569.622 272.5 573.778 273.14 cv
575.208 273.361 578.026 269.66 578.026 269.66 cv
577.087 268.458 575.701 267.509 573.651 267.091 cv
567.992 265.935 541.291 260.56 537.216 259.734 cv
534.582 259.2 530.768 258.172 528.333 259.085 cv
528.333 259.085 532.965 265.508 534.332 265.837 cv
cp
.396078 .396078 .396078 rgb
f
502.031 466.527 mo
508.972 467.865 521.117 472.638 523.473 479.708 cv
527.108 490.612 528.174 513.469 528.174 516.264 cv
528.174 522.318 528.174 525.553 521.057 525.553 cv
513.823 525.553 503.37 525.553 500.176 525.553 cv
496.982 525.553 494.445 524.207 494.445 518.101 cv
494.445 511.994 494.445 480.35 494.445 474.657 cv
494.445 468.965 496.98 465.554 502.031 466.527 cv
cp
.0862745 .0862745 .0862745 rgb
f
504.425 467.026 mo
516.034 470.476 521.779 474.215 524.049 480.336 cv
527.786 490.418 528.171 513.273 528.171 517.537 cv
528.171 517.537 520.053 510.106 509.662 495.957 cv
499.441 482.04 496.759 476.31 496.25 470.143 cv
496.043 467.64 498.182 465.171 504.425 467.026 cv
cp
.137255 .137255 .137255 rgb
f
505.462 469.282 mo
515.421 472.771 520.585 475.793 522.577 482.01 cv
524.976 489.497 526.09 505.017 526.09 505.017 cv
526.09 505.017 523.279 485.814 517.561 479.659 cv
512.905 474.649 503.774 470.888 501.266 469.361 cv
499.609 468.353 501.916 468.039 505.462 469.282 cv
cp
.286275 .286275 .286275 rgb
f
62.4108 673.627 mo
62.4108 673.627 73.6052 677.25 165.489 677.044 cv
230.151 676.898 280.1 675.541 293.716 674.533 cv
290.229 688.534 280.419 698.28 269.592 699.108 cv
261.853 699.7 215.839 700.108 162.339 700.063 cv
127.589 700.033 73.4601 698.512 64.5703 695.519 cv
62.4108 673.627 li
cp
.0862745 .0862745 .0862745 rgb
f
326.43 671.664 mo
326.43 671.664 296.168 674.646 280.57 675.198 cv
285.625 680.387 li
285.625 680.387 312.763 677.189 326.43 671.664 cv
cp
f
234.839 702.208 mo
227.857 702.219 li
235.07 671.116 li
242.282 672.775 li
234.839 702.208 li
cp
.156863 .156863 .156863 rgb
f
107.843 700.833 mo
102.341 700.661 li
97.3837 670.112 li
103.133 669.179 li
107.843 700.833 li
cp
f
116.494 699.36 mo
107.843 700.833 li
104.282 676.564 li
115.06 676.767 li
116.494 699.36 li
cp
.0980392 .0980392 .0980392 rgb
f
250.87 676.026 mo
241.4 676.263 li
234.839 702.208 li
244.436 700.458 li
250.87 676.026 li
cp
f
257.204 653.489 mo
257.204 653.489 262.671 625.58 264.543 615.797 cv
266.003 608.169 270.901 603.624 282.394 603.43 cv
293.888 603.237 335.817 601.88 344.118 601.686 cv
352.419 601.492 359.868 601.355 359.868 612.182 cv
359.868 623.009 358.695 652.694 358.695 652.694 cv
358.695 652.694 296.367 653.621 257.204 653.489 cv
cp
.388235 .388235 .388235 rgb
f
258.616 652.33 mo
260.768 652.337 262.983 652.339 265.253 652.339 cv
300.826 652.339 349.689 650.697 357.615 650.583 cv
357.825 645.106 358.705 621.683 358.705 612.182 cv
358.705 604.251 354.85 602.8 347.255 602.8 cv
346.242 602.8 345.2 602.824 344.145 602.848 cv
341.003 602.922 333.04 603.162 323.734 603.442 cv
308.509 603.901 289.563 604.473 282.414 604.594 cv
272.324 604.763 267.165 608.286 265.686 616.016 cv
264.073 624.441 259.743 646.575 258.616 652.33 cv
cp
265.253 654.665 mo
262.482 654.665 259.793 654.661 257.2 654.653 cv
255.793 654.648 li
256.063 653.266 li
256.117 652.987 261.551 625.247 263.401 615.579 cv
265.102 606.687 271.132 602.457 282.375 602.268 cv
289.508 602.147 308.446 601.576 323.663 601.117 cv
332.977 600.837 340.946 600.597 344.091 600.523 cv
345.164 600.498 346.224 600.474 347.255 600.474 cv
353.92 600.474 361.031 601.379 361.031 612.182 cv
361.031 622.908 359.855 652.779 359.855 652.779 cv
359.855 652.779 303.899 654.665 265.253 654.665 cv
cp
.117647 .117647 .117647 rgb
f
322.608 635.723 mo
322.086 642.152 319.324 647.57 315.09 651.676 cv
282.136 652.237 li
276.78 647.214 273.61 639.834 274.262 631.798 cv
275.38 618.033 287.108 607.753 300.459 608.837 cv
313.809 609.921 323.725 621.958 322.608 635.723 cv
cp
.572549 .572549 .576471 rgb
f
333.145 607.7 mo
332.164 607.613 330.674 607.565 329.718 607.631 cv
327.843 622.33 327.385 651.366 327.385 651.366 cv
342.569 650.967 li
347.853 647.032 351.691 641.165 352.268 633.452 cv
353.255 620.247 344.694 608.718 333.145 607.7 cv
cp
f
322.404 653.232 mo
320.079 653.156 li
320.897 628.013 322.825 602.542 322.844 602.288 cv
325.163 602.465 li
325.144 602.719 323.22 628.141 322.404 653.232 cv
cp
.117647 .117647 .117647 rgb
f
169.798 506.529 mo
169.796 506.529 169.794 506.529 169.792 506.529 cv
169.794 506.529 169.796 506.529 169.798 506.529 cv
169.798 506.529 li
169.8 506.529 mo
170.486 506.529 171.223 506.509 172.005 506.472 cv
171.222 506.509 170.486 506.529 169.8 506.529 cv
163.989 500.177 mo
163.997 500.164 164.005 500.152 164.012 500.139 cv
164.005 500.152 163.997 500.164 163.989 500.177 cv
164.126 499.953 mo
167.396 494.676 189.687 462.592 210.375 437.17 cv
190.47 462.197 167.18 495.028 164.126 499.953 cv
.364706 .364706 .364706 rgb
f
169.798 506.529 mo
169.796 506.529 169.794 506.529 169.792 506.529 cv
163.377 506.528 161.198 504.838 163.989 500.177 cv
163.997 500.164 164.005 500.152 164.012 500.139 cv
164.047 500.081 164.082 500.023 164.119 499.965 cv
164.121 499.961 164.123 499.957 164.126 499.953 cv
167.18 495.028 190.47 462.197 210.375 437.17 cv
210.385 437.158 210.395 437.146 210.405 437.134 cv
211.518 438.279 212.629 439.4 213.748 440.507 cv
206.053 450.717 194.138 466.183 193.693 466.813 cv
189.253 484.859 186.57 504.989 186.461 505.812 cv
180.739 506.051 175.939 506.268 172.286 506.458 cv
172.286 506.458 li
172.286 506.458 li
172.192 506.463 172.098 506.468 172.005 506.472 cv
171.223 506.509 170.486 506.529 169.8 506.529 cv
169.799 506.529 169.799 506.529 169.798 506.529 cv
.396078 .54902 .639216 rgb
f
186.461 505.812 mo
186.57 504.989 189.253 484.859 193.693 466.813 cv
194.138 466.183 206.053 450.717 213.748 440.507 cv
216.051 442.783 218.368 444.981 220.689 447.094 cv
215.139 504.705 li
204.213 505.103 194.441 505.478 186.461 505.812 cv
.494118 .647059 .717647 rgb
f
278.337 502.539 mo
278.774 497.844 279.305 492.269 279.876 486.334 cv
305.782 498.264 324.632 501.061 324.632 501.061 cv
309.804 501.523 294.012 502.026 278.337 502.539 cv
.396078 .54902 .639216 rgb
f
220.572 504.508 mo
225.532 451.384 li
244.48 467.703 263.575 478.826 279.876 486.334 cv
279.305 492.269 278.774 497.844 278.337 502.539 cv
258.102 503.201 238.067 503.88 220.572 504.508 cv
.494118 .647059 .717647 rgb
f
215.139 504.705 mo
220.689 447.094 li
222.3 448.562 223.917 449.993 225.532 451.384 cv
220.572 504.508 li
218.731 504.575 216.921 504.64 215.139 504.705 cv
.396078 .54902 .639216 rgb
f
631.641 620.56 mo
631.641 620.56 658.779 586.76 759.155 574.81 cv
854.277 563.486 901.518 524.078 925.167 493.062 cv
912.252 535.807 li
912.252 535.807 893.046 564.591 832.121 579.711 cv
753.658 599.184 693.495 579.416 631.641 620.56 cv
cp
.156863 .47451 .686275 rgb
f
67.9849 604.734 mo
67.9849 604.734 75.1539 605.005 79.3327 604.933 cv
83.5115 604.862 87.7245 606.968 88.1424 614.383 cv
88.5602 621.797 90.6002 653.521 90.6002 653.521 cv
64.8543 653.443 li
64.8543 653.443 64.9809 612.416 67.9849 604.734 cv
cp
.388235 .388235 .388235 rgb
f
89.6705 634.882 mo
89.9395 640.801 89.6705 652.564 89.6705 652.564 cv
75.7131 652.28 li
70.1162 649.192 67.2776 640.268 67.8768 632.887 cv
68.9036 620.241 76.3678 612.057 87.767 611.635 cv
87.767 611.635 88.9436 618.89 89.6705 634.882 cv
cp
.572549 .572549 .576471 rgb
f
66.0057 651.529 mo
74.9866 652.779 89.6705 652.564 89.6705 652.564 cv
89.2895 646.624 87.8195 621.136 87.4534 614.637 cv
87.0642 607.733 83.2735 605.987 79.3482 605.841 cv
76.0231 605.718 70.4177 605.77 68.2626 605.696 cv
64.3168 620.393 66.0057 651.529 66.0057 651.529 cv
cp
91.5236 654.682 mo
91.5236 654.682 68.1535 654.254 64.8554 653.443 cv
64.8554 653.443 63.2468 616.891 67.8872 603.566 cv
67.8872 603.566 75.1996 603.842 79.3129 603.77 cv
82.583 603.824 88.7669 604.796 89.3036 614.317 cv
89.7165 621.642 91.5236 654.682 91.5236 654.682 cv
cp
.117647 .117647 .117647 rgb
f
722.652 576.583 mo
722.652 576.583 741.928 571.758 757.593 569.41 cv
793.163 564.08 855.401 554.318 881.939 518.262 cv
893.046 478.136 li
893.046 478.136 859.943 538.359 776.056 559.815 cv
759.996 563.923 743.442 567.423 722.652 576.583 cv
cp
.25098 .380392 .486275 rgb
f
861.317 364.951 mo
858.221 364.951 856.303 366.352 856.303 373.327 cv
856.303 384.425 856.439 472.689 856.558 550.562 cv
856.653 611.324 856.733 663.8 856.733 668.962 cv
856.733 677.952 858.641 679.218 863.79 678.824 cv
870.244 678.332 885.598 676.777 893.103 676.171 cv
897.947 675.78 898.786 673.216 898.786 667.274 cv
898.786 383.981 li
898.786 373.233 898.786 372.109 893.396 371.03 cv
891.363 370.622 888.595 370.081 885.448 369.466 cv
879.387 368.281 871.843 366.807 865.501 365.496 cv
863.677 365.119 862.386 364.951 861.317 364.951 cv
cp
862.464 680.206 mo
856.939 680.46 855.57 677.482 855.57 668.962 cv
855.57 663.801 855.49 611.325 855.395 550.564 cv
855.276 472.69 855.14 384.426 855.14 373.327 cv
855.14 366.552 856.93 363.788 861.317 363.788 cv
862.468 363.788 863.831 363.964 865.737 364.357 cv
872.073 365.667 879.612 367.14 885.67 368.325 cv
888.82 368.94 891.59 369.481 893.626 369.889 cv
899.949 371.156 899.949 373.114 899.949 383.981 cv
899.949 667.274 li
899.949 672.458 899.526 676.762 893.285 677.286 cv
885.692 677.924 862.811 680.206 862.464 680.206 cv
cp
.207843 .207843 .207843 rgb
f
467.362 396.569 mo
466.381 395.945 li
466.712 395.422 474.662 383.095 486.633 381.689 cv
494.72 380.736 543.928 384.489 553.634 386.431 cv
553.407 387.571 li
543.744 385.638 494.805 381.899 486.77 382.844 cv
475.342 384.187 467.44 396.445 467.362 396.569 cv
cp
f
440.575 727.789 mo
440.575 734.129 437.483 739.268 433.669 739.268 cv
429.855 739.268 426.763 734.129 426.763 727.789 cv
426.763 721.45 429.855 716.311 433.669 716.311 cv
437.483 716.311 440.575 721.45 440.575 727.789 cv
cp
.0666667 .0666667 .0666667 rgb
f
808.268 712.747 mo
808.268 717.624 805.889 721.578 802.955 721.578 cv
800.021 721.578 797.642 717.624 797.642 712.747 cv
797.642 707.87 800.021 703.916 802.955 703.916 cv
805.889 703.916 808.268 707.87 808.268 712.747 cv
cp
f
413.442 579.272 mo
413.442 590.83 li
434.002 590.375 li
434.002 578.938 li
413.442 579.272 li
cp
1 .403922 0 rgb
f
414.315 589.939 mo
414.315 580.13 li
433.615 579.817 li
433.615 589.522 li
414.315 589.939 li
cp
412.57 578.414 mo
412.57 591.722 li
434.874 591.229 li
434.874 578.052 li
412.57 578.414 li
cp
.117647 .117647 .117647 rgb
f
696.179 660.339 mo
696.179 669.47 li
713.044 668.262 li
713.044 659.33 li
696.179 660.339 li
cp
1 .403922 0 rgb
f
696.907 668.689 mo
696.907 661.025 li
712.317 660.101 li
712.317 667.586 li
696.907 668.689 li
cp
695.589 659.647 mo
695.453 659.655 li
695.453 670.251 li
713.771 668.938 li
713.771 658.558 li
695.589 659.647 li
cp
.117647 .117647 .117647 rgb
f
918.63 646.918 mo
918.63 653.53 li
929.486 652.753 li
929.486 646.263 li
918.63 646.918 li
cp
1 .403922 0 rgb
f
919.212 647.465 mo
919.212 652.906 li
928.904 652.211 li
928.904 646.881 li
919.212 647.465 li
cp
918.049 654.155 mo
918.049 646.37 li
930.067 645.645 li
930.067 653.294 li
918.049 654.155 li
cp
.117647 .117647 .117647 rgb
f
449.522 473.796 mo
449.522 473.796 437.867 494.217 434.087 502.073 cv
430.307 509.929 430.089 512.613 430.089 512.613 cv
430.089 512.613 431.637 509.191 435.105 503.927 cv
441.793 493.774 451.751 480.193 451.751 480.193 cv
451.751 480.193 450.491 476.025 449.522 473.796 cv
cp
.286275 .286275 .286275 rgb
f
553.957 554.827 mo
554.435 560.266 551.474 564.969 547.343 565.332 cv
543.213 565.695 539.478 561.579 539 556.14 cv
538.523 550.701 541.484 545.998 545.614 545.635 cv
549.744 545.273 553.48 549.388 553.957 554.827 cv
cp
.439216 .435294 .435294 rgb
f
564.95 556.072 mo
565.011 557.877 563.597 559.39 561.791 559.452 cv
537.817 560.263 li
536.011 560.324 534.498 558.91 534.437 557.104 cv
534.376 555.299 535.79 553.786 537.595 553.724 cv
561.57 552.913 li
563.376 552.852 564.889 554.266 564.95 556.072 cv
cp
.137255 .137255 .137255 rgb
f
564.95 556.072 mo
564.95 556.072 564.171 555.102 562.365 555.163 cv
537.112 555.968 li
535.306 556.029 534.437 557.104 534.437 557.104 cv
534.376 555.299 535.79 553.786 537.595 553.724 cv
561.57 552.913 li
563.376 552.852 564.889 554.266 564.95 556.072 cv
cp
.258824 .258824 .258824 rgb
f
891.287 501.34 mo
895.124 501.523 li
896.32 501.637 896.141 502.578 896.141 504.11 cv
896.141 505.012 896.12 513.167 896.14 515.302 cv
896.151 516.381 895.945 516.762 895.135 516.762 cv
894.325 516.762 891.795 516.753 890.894 516.762 cv
890.214 516.769 889.941 516.51 889.941 515.265 cv
889.941 513.224 889.941 504.319 889.941 502.845 cv
889.941 501.542 890.505 501.339 891.287 501.34 cv
cp
.188232 .188232 .188232 rgb
f
739.472 324.176 mo
739.472 324.176 696.028 315.167 658.377 320.826 cv
620.726 326.485 588.053 342.819 547.415 335.796 cv
567.694 349.607 589.045 353.047 589.045 353.047 cv
589.045 353.047 604.938 348.205 621.76 341.064 cv
636.959 334.611 672.406 316.979 739.472 324.176 cv
cp
.156863 .47451 .686275 rgb
f
617.015 325.08 mo
617.015 325.08 655.209 311.775 703.993 315.215 cv
683.538 312.174 661.907 310.237 628.147 314.483 cv
609.463 316.833 593.108 314.045 593.108 314.045 cv
593.108 314.045 602.952 322.477 617.015 325.08 cv
cp
.25098 .380392 .486275 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 17.0.0
%%For: (ElenaD) ()
%%Title: (Husbil.eps)
%%CreationDate: 9/29/2015 5:17 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6D9jKJEMiW(!<5E9&KpOF4fEb3'FkWB]ZfF/3Kb[Z[b$8I+NEJu*c!`&bRCK$q=P^$*>qut>qM4kk_25PgX]'U;cVXZPqS73
%O`C?\-P,[[H2GSH[pM>3qk$*fCmUcJD;-]65N*5=rT#=jq/<HdoBLrmk"^rhC-)p%'#m.P4RMChkML[[lKuW!^OQ"RWt-9nhn==0
%rkm&8O+2QQp@?Cn?cp-r]_p6Z2fIROiUZL#jlaCFF70(*I.mL7c)^#On%X2EnP\g6MWlpgr:_;o/@bc[:;))L2d_F6gK,I]au>N"
%j7&]=k-#lXO2N]gl_jd\Ro`t2rp]IVX7pZ(s7e)aHN,p(0E'X,?b_!go&K%[DrkFm^W6r#r)E[co(;3k0>Df(;*XYm*$p+5pfA8:
%ir?Ufl>%diGZL(?$@H^NV=28b"ag2!i;\hTc@<ahj!A!:Ia5-HrIiLQH9g:=\]@"UEC)X5!0j,H9B$H\h5d`nIe3-j.mC]lc`:<"
%VLP[clsP)C4>;M;QS1ShgO@a-D(g*5hLrKpN]S<PX)D@[qSUW4s6\@[04)=6:\+M`a5=W1s5f*^7Pau%2rD8np&=F;^A]N>X]"K]
%(k2;KMcXhGIL4$uT&73AK>%8Dj+tHsq>SQ=+/O7sHh.]<_Tsn4r04tpk,Vk%r8T<7\M-5.='r^gqfhN.JRA(_XbOHPCUo*8mo%oH
%[,+u_;26c2GOPJCX+%/J?VJYlZqnL!E&%6WL'RBeBp$/Vs8'pjDgrh>gq18Od9-GFrTc+s[bB_PfDjgU]%`SOn+QeAHco^iq!lm=
%q]R,3p@uh-eSfZHr%1,/`S3$ehgL1`nc<YNUqOO.Y41T0QfDG62uGVF`&D%aha6;.^O7IW]RGbHJ,7:ElG)_YrVFbtnrJ;!rnTM?
%s39<U^&.GcTAG(fmU'=,ro)Dj+5abu8,U?f=9&-co&d,.5CIeTk)0aWs%CMrrEHgi..aCLQ`n1'X7*Tpr6k>C0)Dbl0&OgD^Vc[.
%jF$3r13OWRT_dX<[ClOmlaN3fIJ#lEPisdWIf&ET]<>RI?G?Bto&!fgs8%LUr7>jn^4#hV_LJe*?_1T=J+`]"^QW#phgbI.nNl`L
%^Nf^ZSFKKpjq#&11n_&67e%`FF7h9FEPV-@5NnkKIf),BEF6EXikrG*^SFuHIJ*S44L_e,^3jkV?P!#W=8hM.^\ZQ+DdIqgC0ks]
%k21[H(]='nrS(\meSk<`Rh,OBq7Ck>hTRMMnm>:sDa2</dK/H\ip4`hTdTd$pk3q^XfMJO10o9Tb80^3op7<bs+ru#n`:]MrVapC
%s6]LB2a:pPqsRj@pcUk%(&mSrSFqNgdH>m8[m',e?crG,606#^T_$S2=[$=PZ-/%Y?H_R,-i3IZ*qS,N]_qR#^Kl<YqHr-pI/j&n
%p[gd7d,2Nc/$n^+\)4jtq!.WC+()b\nFDJF`^L:OEnp8,gi:m8REQ6.%.LTqIJ;NY0+W!Q,Q@Q<b:d2FjR[F1?N93/pFe1,rVJOg
%s0%b"hnFL<nac)5\,S':Q@.2+r1cr>l14>_Vk<nYVk7dLX_qA#n[H*u[1rTlKbF3j]`n>=m56d/RnVd4[C2?K`u"ZqB+OH\e4VB#
%ls^dCfX3?EeA\S4YmXk(3b#3+0ksqZQdY;Bc3]iVh#5oeHe!l^J*H]$iGPi']!Qq<>55A:kOhjTo']^p=oMO4;(mZBp$d'F$>\:D
%U9Xa`rQDZW^A>%"0>Ddbk.SJDbH=s"rkIQmf(!MG_Oj8'=^GZb*UiTEQ)g7B?0;rl^-;MVs5E-'gcmn`4?gE&G^eEh_de'fO86%C
%f#RKobH!ka5<_1n5/)8hIbLC1;gc_`jf(GOVd3X-l2Kr+l1+$&l,D-CMsWrX&O66T7=(*X<TVb;m.NG[L;*A$DKE#(Q[`)uPOS,]
%eGLR"SYsDUc$Ui7SF&iGn+qq83A:*rC0.Tbod]BpY?o=W]Pi$`IG*f)K7B1#T?:Yh./0R)]sJuC[H*LHW<RY?cZ5_Wr0SSsIGT%g
%2&GoO*-92*HBsIQV8r4imScpP4Ang0Q'>3>&L3Wk:(#0[]D[W52d\4U]fuB_rqGZ%nT/M[`,e7\9s`s@o(M7K^ZX]sqY.$k03>M=
%5MEaKY.a1EDu79CrBV@oMuC2)4nRB*0>7)1AbFXCqdY-@0Db;=Fs$2%ID.B/otK8Vqtp8GqoAT3qr`b%+[![JGtnnGTfgh[p96dR
%L\oc=GP>jqhep2hJ(6Hj[X%*D998&tIs:d=hXGj]]Y)hqSsJ!gHp'$aqrK-5<n_a>0D:n2I%KHEP<>7grEc)C0$gQ?1Wt.!iu[or
%4\M]!C6.bUh7)6EX0&ba;N!-Jd.T"rm&<2"LO*<Sh5f<Y=dYPECT=Xo3e*3tGQ7O-s5Ndc_GuX'VtM.?+Krjf5j.)VNV@Gjq_n)F
%*GiI,4EC?K<t+M!kgg^JkPV.edbeE-B9Aqdcn+3Cb?`,B#8ngojCd^$;9"VI@n;g2jBfik7i>a,jaJMdDtn7;Hhee.or1,6\V"q#
%UYPIhn6_OFn0h)n`P0IcM=R1Z*#$*%[62%Oni0gq_pVG!9U1`=Y,Gi@PaM]YN>Hl')<X:lpJ:\dY$Q,6Ls]"ipj*p`L[hqtY<H=j
%Gd[(Aj&O)LlV"CJT@8&<&0&WIIF:;^B':^#Fd<n,b07Q@a1dYingO,*]o5XsN)3MDWr.rhg^4R]I%;'/P!-sTf'df#h5ZES=[p#J
%+7?W;r95TW3M0h-I$!m&bIH28Hn7G(8/Z!Wh"KpmD?mVebgEk9q^-s\G/$1VO5&.W@XFE<*C?!.O[BF4['5<,jC?%oGRRC=.%d=R
%LDZj<AJiuqm&[_;*q,kOg%ZsO`f'UCNBBa=9.?KZQi(+a4FHG>QWc8eHW-g?j6WRQ9%0,3nP;l*=%E8:(Is"#eNO*(=d<oL0>@M]
%$?muB>nXbJmZQEOgn?+PThXrO`Z:5/f^-78pMtI!jc2Lo*k`Ct%qC_#=2q<2[EmI<HTbWK3,Ui0ZPb;UZg0Ms&FDNbA*U;en5;>=
%a7fDZMmJ!,jG0Sp5Fl-Ds.7"&V5"L7n"q,qp4(tDSNlq=?2I-=nVXXdEEIVLd+:;=eR9TcE$mSM:=6oGOb;K'R+l@2R$f(/YIr3p
%UqOi:PP2pl8FJ</eGgT0l^k:D?b:ZmlPG;Cj82F^bgKdlFPDeMd0ocs8*SB6Z<]N$bS&@SM_o$&B/rY?!6fDh,;t!2G$B&nl+6H@
%qU/7@F=1?A`V"@pclV)rXhhIp1EB`oYl#C[k;$oIVBMn,Z*)huV'i-K./9^eADRa(QAn,SolN@/`@OBTr3LM6]^o;eDgUKOE#\I[
%p'mX\oFgbi][jg?3]=URpENsaI)Ac1Qc(1l),GK;Yn*T.g:$Nl3QTOa0m1t/Ls->l7_N'/GC)o0rJEhn290pr`72]t@%&B*R^@jP
%1Kr5o$+(]h&<0bI].EE_qc83_<Q=cpPueeWR_5!@2%h4e_1/u<nn:)>#8'hIjeMjg'E:b0_f(&)a0-=gq=Km2n,*@<J[TL%F\Gt_
%dT!YW3NDXa,d+8h(VnqN(4$GTN6)MZ/_AbL8f,)NJ!44$p_e7;Md>@D2u<t9Ueg&)\B'a'?2j2goae5j%VI/\fCEg-@V/PlBnaA-
%H^H_1@==R2"j79sf<i+)Mi7:p%.RqLA[*=,XbTYUiGl"K2At=n<Dg9/fZ2.o;:cRg>m+A=I/6EsV:`)rGa)@s"kO[VC142'E)<Zr
%Wt$jV\ajtGdob`9X?<3o10AtG+gMktD3m*c<Zr!DV.:n#Sn[b(21kKl7Md!/I]WIPp(r@Jli0JC6"-oY%mPTOA,67ifX[Ck!VcfU
%("hagJ8[]3C&/(+B]?ftYfWCOLSmCc"n3;c6i-c[Vk;=OTRMM@)F;])s$0o[*ul>T5!3eF@_9Bop>XcF^)o9,C1X%)Cjk$<V(I+@
%H1'3GH*t%e@$r`#8Qsnc!HhM+I9;GA#GWS9YP2nM>(a5<7loe69j"ICFf2[)]uUXqb<XgD%^NI%[=.,`5.$"`D$91R(UKs>D<8B6
%b6r/CCc,Y&@2%Bh*PS8U`B:EEN:nHt7=@\[>-,F(_i(n1PipFdddSWL5OiRWaZb*u;q2r%Y+G9B-@*&_VlHeMkB.6Q<PdCih=I.4
%;kBmL>Q7CcB-4m;U@q:JWAZrjqk_(!REDkDV],A1f7*1\X83j.roA.>PEl1/g$\IbiorYrkrp[pom!Y5AA<1Bi3UDO4iRSN`bkJW
%:X=9E#2=Wh+%!Y)lYBd9Y27RDo;UlZY(?He1[\t#Z\?L9dE8hekrbXk%;egDRpW9NUWDgW7,$O4]foWR14(RIKsdp8CTo+Y%AE`n
%m6#D7coFEU;Jl(s9jcC64AjFPg1!=iZb>NXI?s%%s"9l]I(Ri+fGg#2bf3KuU[nl(,uI.lb&R2B`ntG)\Oi5A@NY?ME-ak+@sWI*
%R!bWhkFV[C7dj'KT-hodH>?)2(Na^YpRk/>H?eaX`aK1_EU!28"ku2,BCPEg)*T)r1Cc(a_k6MkI%Qa<ouDOXanL*lp[@juXrc9b
%LhQ^cQq%,DW5ba-+Kj[u)N7Z=rpV>2iOuVI?.s)->/JD`pA[80s7:(,K:_J&iL,tYksp0-a?oZAT.JtMIo[Q[H_0Q*8E:;0Y&HFm
%SNJLI6!/Ka/3fIerRa'i@c$Jq'fnECO<7]^?P(JC2ff(MPj<<$lI($_Q^5,[nTu%1IqJ*Xdr.+[;j3#JNVVma?[_nDMg+'k`tIug
%F,=>?$hA*e@8D*@p3oS[;+5pi(&c_XqSti"!IoQnD_1)F+9/;.s'PU!^PhpnUrE?(o$@>G]6s,tch\(\3.KL\:::\GquZHRHX+\a
%,/:X9D9BpcqWttUYPThuctPiQ$`j#MgZZ7bHbrZFp0Qqm.e7CsVmC4;-,MN>0)t\ZQcNCCPBIit]ugp1kg+dJp3*AGEfUYrQF92T
%aSHp/oVTgpH<S)<],WGXfj3jU??59#$Z`q6=RNcmWCp"F:7@pT\<QFX*qD9J7C]RbaSB_snjTP!(dTI(Bs*?k)\r/Yj$^GLoO`su
%D&`mVB2umQU*@L.?Aa"qH>3k4;(OPdj'>8_%LdA4Z1I&Bib.e:QTP#r5op?6bfcd\:@p)bUg-uMn0RbpDG*Q]bF9J!cahT<%\I.M
%noJQfH=GUi"L7nnmWZ'0B1oAmr=;>7B]#j=o(<Ca,aA7fSX*UuZA^cTb#*UO'H(<dQ+b>LL4U-EPpY)SEGC>):R,@.**>h/;IllU
%M]k_!MEIbU@_&OY*/5XH2=M:?=ics[5G6-I\]FOqD%IN3pNg#bg,A:?q6@/ljYCLtnj!sZ%[D2t:-@T\f4DW<rC%WfN5_O`]2jge
%C4$cpeO(4Hg#^#RaS9LSji,AJPM&D>FM8d97/7nTJgcD];\"An8e`/t71%[;TucLBW$7<!3&Lk>A\\g=/uRQ+$+ld3UcG@to8]@Z
%V<J]88XcH^'Nm!B,mra/<Y^#pjJg6VdnUlt7DhaZJmY+t#"<jq-I"Qm-V:r7LGJ;#r&e*d/I/#RD4B;lq)2OHm%X7[1M+*$IO87+
%p.]hL*=Z>8YIo^kWhKqD:H\*@GD9CP<N`j.d_k-seXA/Kl?<n!E1E":+DY"@::m7u55$G4VCcC0nTaVdpJ"GKa4klIgr`H(\O@gd
%\'e3a&?X@$p^2L1"ot'r,B%2[-0sb?eq#r;HA@&Z$@:hej'[b&/1,s2QR4XS1pfZ2OP:`uV*BHI,HE@PFW`89&*%lL:g:O=DFEW4
%^Vg))b7h'&dm@[lb<(HB1^<>QqD'-b_6o2+WZs>5Zm!MbpEEC"#&*8IXj9a;/`V\D=IOVG._E'--o1`h.U?*!<8d;N;sUsd,)`-F
%K=30_'Km2>)\lLZ7m/_2]+<P"Zf*i"b^n3]EgMnHA#tr]?0VnGaTLFap/`LslKB`W-K%6IAt(&E9&K*GP&q6bLqD_#5:,UYS!)#k
%&2>1jQ+id]0Ff"qYieB9>?>t&QI4kT<?;W\\b2Km7#<o77;k(&gYVVQ0^hl*9,GfrBS62:HR*fXYC(Ze&%LNKcgu-?E\VRAG=NPD
%RuHQ<R4=CsLFU<H4<PVu7j`i?SX"dDf*+LcdCtR<60r6_V<iN\<Y3r:OJRXf)%"5Hk'8D:5t<7n":?c<UVH`XJj'F5a\S%oF"Z0N
%:!h@"es(LuNl,Dem.,hJ<4bN;J4uKFZkrPW8X`YZ2E5js5SsW7\r%s.0Xd:c0`r)l9FtLL'bSU>Chsf.LY7hEj9@c+o;r;3@Dme[
%0R;N_9mWh1=1"ZDq0'%FOi-7'<_RmH>=%+"e'%8:j2]D<Nt"HDKpaC0&\>WB4WR6qg'"0#;^dH<2R>KB.d_2qeUuKfEWX[XV40:^
%"#/Pu0Kr;#7qca"/>-A>66(%W!>b^Bb(_=H93+ga>L54&5mHZ`'<=^93=N"K7Of;@AH`2oj5*X`"X8QBe10s'M\'HS3mK7CG=;sf
%e&uBGdk].W%G'+U$V,JPc_0SUa1%4E-I8@-<$T'j^BI?l&EIUZcYf[:L"/?N\(Yn`QRXRh*Y45k=[O7I0`GU!/CM>s@8R4>=I3#=
%Td1Y%$8S/a`,<V@6^>9?8?a'\j1ENnGj'LmT+R83m]RH41+/)Z9?r_g@@iM6JuK#MESdT=epG2Gg\(=*H!.k0OLm+%64>_3++n"_
%J9+emr%&^aFY^rQ^^Qt#@FlSP1HCBrLFe0KOKTn<&'5/&aFMdfaLZhOdFI?*[RO7J)Egbfa\IDh<<Tj?Tb(]qcJ((mibG]6.A68K
%oV")El'/P^KCpB*m(5s[Gfhd?akaa[Mft19P%>Z.g^&/KLIH$[MW$+CS[s[R_SNLmK#Jjr2DoQ59_1"+*;,EG+l,Su(KrQqi3O^q
%%:\O"7IMfb393q(kid5t>p>&0g9K\N3epBI.QfBL.%;`u21&NT;0GUgcGP(Np.Lc/Ek%'=nqH08-S4#PXJb0J=0/"34Q5Qmc]atG
%rA\:d%2df=?BiFZ*-OqLULR>1&!"t/=:O[pGI/V&O`.i?"+1K/7=SlTc@Y;9+,*jc!nKF-;.X"0@T,,.Y2s89.9JL!ORTBkn;8'q
%U5WQ:co0T)o=%S]3E"G:(tmuAd&_iXKX&'YpX4bW.=,Tf;1V4*4E/36Ol=HE<g#.uaEUq.!YO1>c]]@QLV`p!HV4cfFS@npFpsn1
%oJA9KA5&.E4Vdq:KH@nqbCO[a\.1n>MQHgfTcpH`m`.Je._iE%i[?Ra+9`5gCrCo<^F%+-1^-$<-6/HRqJdAGULu<#1'WM^&IR*_
%ELpgCr)>5a$Wa\+cn@.$aR"c0_h9S9P6piP<_U-G@5:qo"XST.9?.`4"sK"%o$,=)MGQ=*_+M^<!<Gn_KG8Zl]D<1/Luil9?/5ue
%Gs;DBL.of&OKSY8@lZ.UD/G68Q,S2bgQEk5*%$0g'5,J5*luo0q@pqp10*]s:EG:"-uGJ`UqbJL^sj=ckF%2fUuF;*$Xg'a0ajU,
%-IG!\4Y:-#_AHp@`N"h]X9$`/VGOa5ks*^QKrXcI>e\*JD8V<rHS$J3Hm'0c@u$I\,*i<kb<XO\&UqI3F;hdE-DmNpnO^hkG]0@a
%<I#ANiUSO1YrII-*T\br;:.DpQ?>%O"`:s%$qRV1Ce.0clD-p:KE21K_MCrur7'6H$Gd<.;!3+Nl0J\N"%e,5T`u*B&G(_3.'t`o
%%Z`KB[_VZX$%<'r6I@obbh_h]fM=B^O7'UF_Xfael[sl&BZK_:!`mPp*s90U=Q5<cJ<j7R;^jo579PYFJ&(7ck@O$4:cWKO;!8n:
%l88$ZL@m(cq_9a#Ps,pA2-P9/POSsV:?DhSoa='!o?kZ26]4G%$3H8)9VAb+Ug(gJY6'HX3Js4S\"%5h_W>mg7(CT:ie0mi_c2ZZ
%:eOt%9Q3hFcP+gnOQE#/UZ>(aQ60VE(f=_.*uqSTA/Gic/p#T-m.g]Q,qcm7#!Q*j;4aG[=Q[t!,2Yf?]I(.K5#k`MpDlma=fj#1
%kB?))dO3!@'Pe+=rNQ&le+eNa%#0W:X/oT;Ao?Ch-[cRJ2([Bp=!LhkSN)s`YgM\1PlV3_G35#=SS#P7<\;0_4,k86fq@:sDE;FI
%Z4peH$srRdh<`IjrKncK%hp_YO$9@+*eKnGcV(lPV7"*YOa%^]!<h7?#dP;&+H*UCkO#cqKpp!W\j32N_ol?/qEEl(<&bKPV^6K8
%1o(Z1GY^BY[k_jr2AXJT=Lt?VSn(+o'oN5$/P+cM!#I[4:M<SoUD@&g6D[BZVe^0r*rCm%]gWYcr%j?#`4;c!RJ)HAQ,Z;5<!gV/
%N]&I&%@kTJMo4,Ro0:s/,GH"ZegOYeBG["idaSo#K%MId2fl&;LDoZm!QGplb>-B*f0rn=]=LFA,`Z;^+@\m=_si'<R:u0)7_7Zf
%;5^Sq2TT7hHQSjPY&!XEJ&f#mE5fXnPg%4hTO(OH;rR8=V\ZcWoSS4?@=epY-+QiH?#MM%q=aMAA3A^)4NB4(`(J(%XHdRQdr2-?
%5SVEJ;3ek`di#GB@`jdr*iMgaGY%rP86CVq0o_+-Z)+?6%[`NehFfJi0J;BDj-Sfk1d`Dho?-$)kkH0,1ZEVTi@#/QJiJu(nHne,
%:Us+kk]@\M#2@+=PQlrfk6s!rQB<MQp!T`*ms/#h7oShT&&T,mJdf:QI#eq8%\"At=F)j7[,n?+ZD*RZ`!U9[`pH'b#*/?95hnl:
%!u\8l<AtYO^LEcfG?/:n.M,Af_i8^V*,SsKD7\rJm9r4>Ic_.?.Vs8Z1,DEZ3;K5_q[4_1N_u54I)m9KH,Vg.UX2`G_.ScM!!S+!
%^h=p%pi.eNAG?=B0bnqXjJR3IRQ(]dKr\Gl7b\m"oK5fND+=:*?G[_8XU0<'VXJZM0G40Z!;%8!l8De7E7l5`G>.hf]Y.QK*XC\/
%_mPFF2*Hq()"%ZV'q8`[<j*lE]eWi\:&`!5:aq0Md7,I9`<iPb6k>MBD:c06rMaI,-0d$3K7sa(AsYd>q;`Z:;%Jng3Y(5WKYg9D
%-u?ope1lt+I#-`'b0JpOeW:J@V3M5Gn3*)?:+``3E"b9Nj9X2UGS"XqPT&UCeChl9Q>*uUIXn#P0YJSQ.u'BIGZ\i#1/7Q!7bcSl
%^)SLrVnt2"XiVC"f/T"3L<L.4ArT2$AskE/C&ANqIkWjj`.1lq!^^^NN+1'7Z1t(]+2)T;BB:b$nUosL7aGC<\OH;=T[<Yn@+5?[
%1mZ`IOk>PS1-8;OFubdZdgQ_73+JVgc6!BdTe<,-3#-Kmk"^U%(iGNlC>5aeJpt%GWl]@Rn2&L[#-hL6S<8P%BI`$HB:+/6JR[FZ
%op%86MMVN&IK]0BSCq<h5Tu2U/I&Q(`O:JH&G2\)%V@5m5Qi^Eg_a\$1$$3VZY,7NCC#sl+,i-X,MQutPi:0:U\1(7&G$D+*FfhR
%$t>.C2;U,a2&UC0//R4g%=(?q)>Cq8Y#c&aL;Qg"_=Z83Ysq)Kd@40[%;AXi=iC[6>bP'XXi'VjjFW;0e.SUXZW_f,UGPf;YJ8\d
%[r.-%]$7rZd?*"TaIP7KqP(j:`efNJn9-'PWEX?1a&gMHUb@L'NTS.Q7*"Ll7\bR1*B-;,k>l\q2!&)s"Z7!-:(\D>&J6(Oo7>kQ
%WDrOi*`afQ*Us>-hD#KJ"n$>Q%XHhm,A(T2SB`u'57cO$3s'mtAG&c8:`2'EajPPSOi'_]3H-3n`YfhG;st?.'uadF1gFt0W)"3N
%.4bf[p+l1C:PbC?_]h^=p])\2NpgEWbC_<-ZdWq_s$HA9T?JUF,#T8^7c3,_ckW5!Igi_#`00(uS]Y&qAi&K65V04.O!5\'YiBIJ
%Qp'E=d5+M95QqrO,*81&OPPHU.TbKsV-jVSJH=V?=o@`IX6fJ%-.kD;"6j"YjI\V@fDjt$q7e/DkK0;g6mO#(qbq*/f:7m:ffa"C
%3"Z(*.*Nld_E]'*A(f4uHM%=A6q*H_Q)9"b6+4\mAVi>X:@[TBL!7mlQJCbIMAe1B_82`k9'"&a'BJZ^EREN@Y4VEV"N^5W"?;%m
%GgfK<e&^r:;[,o4lu:-Y3'P3VIP"7HnjES.\0F9?_aUm)($OB'iMP382_bB@)s2<s-9E8TeYj[i@[U69W<gtW'/g[.(O1;j]Yo/>
%ikd#mo]+"WD&,p%bV1)KXCZXH`m&_1bTUXX6,T.%2E/\_TMXM(eq=EC+.)70bFm349kB&P(qJT".o!Fh;aj1m%7\;.l26;OLA'%S
%:$S,&+m*)&>n[b,S`9K-,!H7l#Q>Z'8YZ]a.Eud8eS,aQCLkHBA<;Qg4`k:H:tRaa_6aX"hcWEF(uHUEqr(Ub)7q,2c.Kk8V@&X$
%WD!QLN^883$ZLlW5^,1&\th_+q^1Wsp$dP"-kNdbAi^ZlfN"%K^7Mnj%mZ@Ylf.$l]]3tfdlRe-L">Ena/@?IKOKgr'P[Qn?#rDA
%B/fU,V9RPF?bS>Y-"eFs<A@Xu)I\]U,M>!Bo9$@Mcr1l=-r?(K.u]u@!!i7'<SuGf3cWCVkqo=,FOs3L#V-!)auIKC+.fA=(tRW-
%Z3&'BglU\"kC%rW=:CW8ckg6hq,S$]1fjj$hW2iC<1Qci-jbp5f[\^6WI($#i3";s?4hen'QrVV\ltk,CS>eD%N#R>\.=Ud9&K%p
%1An@Ag#-O3?4W5iR!31',mD"q2Qqj.cp+/P.tbC#+WlZ-)5\@)VXUP..1pV9<4-!d`9QQ;>cON^W?7[l_0k>*BK-#&GPFJc/q%:u
%;kn]Bio`)J_f.3ebTWYjN$odLKfVRh@710[>.P8+;Eebm^r)^q3l2Gu=b;OT=Mr?O[t5Z$nQmPo`qOS>6(!L**#d42&^k60:1eG,
%:_raPNGt,joD:5=3JQ?ah*8Pj$p-?>hog^sj9T/+AdX]TP=K.-CZ5n)%LcHp@j-eA2HZahUf0N\6D#s!>%7E/+S\^*lfZAhh"3]g
%/!.ge/:Ric#PNH%gWS3tM1q63K%h3[\U&F[oBF,nC^>:$;X"IeI:[H\j=9`'fd9uhKa/e-!_!mi]=La8RjNG'-DSW_hhMQoekd2%
%82FI!^u[\VF;V(N"@huJ@raFc(RO*"4lOu>q,ZcSG_kX7`Iu=iN7Ea<=r?.YJqt*l"C!R?DfZnR*&o00L5!j)R8,OqO.89OK*eWs
%eD/Jm-E#scTdWt?#d0"Pa\8fN,r(8aV7.cL7(R?tJ2r'l(oafC*2*]^]VufFJc2*Ob#PO\IW'A1ZJ`"Gq?3**9QXeo1881di,`tA
%lh?[i>+#(p6#dmCH!Uc_+D-:(L7MnYL_C#</>a)nNL5O4b%aY!SFhCg(CV(sCn4\\pH"K"!_NgXl`#";Kul-pT?M$n0[Jj"3:s@#
%LKl%n5kUYp._upU_MhWb-/6/(]$UZh$NnYB8rrg3Yl*OX2GN#fQnqL=Y\nF3KDMl/f@6p:_Km13#@;b4?[_dP$LGQ&o+*q,3P#='
%9PdQHXT^`>=:SC0i,Y@/:d12PE8KW[BL3d&BUF?iW9Q\f;5g(`7qU4$)jnDA`][N2(K@5O]LC&<l/E_S0[G7Ur8_N8V2TLgfX%#S
%3<j&">o.HN;Slg*@j^c&17\jo(NH^JJBCREN"@_`F&_7eTsc$DOGG/)oP__bko.EW%u;,KOU(+o9T'>Cd;q%1bcda<D*:XLUSu0g
%'O<]77%`^WLqW=b_ObB]d5KPl&2_=Y#i\DAa.?H"BHoKhmj8Pg1R!e&!YXX`hgQJ+O(gDD[:!m.@f`Fd.N08W)+_m\(i6#F?j]O4
%\KL\KL@3-g4'[J=F25KjNG:^dN]T&d0ubE,[I#Hf@1b!&P>#[3QfjTb$Sa@TNR^3G>&H_pTEd8)B((>q`uS_U39W04Q!e<6'LI!$
%1rG_@N5u(\fuuu\C1OVOBrYZ4^dCSP1c%Uo,,#bN@Xb5hCJkq$SKm^.o0SIq-PL6I5;J98!.d^EGm#HCm.<E=jYmD$TLl1>13%c_
%ZpP35D2KEf^amuEkS#aMNff:j;C'J*M@nTCmU&GD;d^q,XIb4hZ,G`9M."AUH(ArQ@6PgsX%#gBaBTk(Cr*nIK3K`/$el^\&Q@``
%OdT6?bRq`cT\1\u]Is9pHD9KTEh1JU=K0O4A980m#K2edR4Lq6nGaV87%X1..$8W*nSq9q\3*Bds-QcTQNTb2<Z!FYm,0Rt(nm@0
%]f5d$R4Y_^R5m(!Yr`+LTQ4@J^0oN^(A_+#YS]6a[3BKM'C+L._(^CQ/6ok*BGsQIfST5)_p=/S#*Su_o[76[JZtfHpf8F&QcVJ]
%Q:&GE<S[W_(&\X,L$5[cT$5fj'I3$oaP(h$*guOHQp+WfeYET+*8nQg&Ue8WWk@FK*&I-4^r"0e`,Fe."m^uI)uT'mn^s2KG\ua;
%f8\u+d[TnQN!pj\'c<=l.O28jIgiB]&/U*D#Z[(m_'rfe6X5G]6i!%l3\,JYCLa`LM1At;UUk/Me752.PXGXi,FT*_0P;F?,Pu._
%Xc>h?Z?1_r1D;;\7L?>eSIPgNGHMfl>jVQ%;:ACOO-LH7=tX&gSFj@K_%L79-B<+3`kif-:1T%#,bSKX.B,,q6kq3jqOK@,6%EMN
%QNH_m+OKYC]B3tTo<t3HrRs*u2<b3rJ@lL#N1.7^)R/3Vf?fsRLFk3=)&=Qnl6[dfkCNp9oJFL.Gk%Ynr58_?9F+a/@i#cDg4c<F
%&m.eLp_pA\TY_=3mKOjiLiC.@QIrPW8!T%4Aphk%CDs#Ao:CjOiB;r`M+R"bWhg(HDtQ(CWu$m6"Q%T8KBjYL;[#/VA3uZ$F.U@t
%K35k/F/gHf(#aSZ34XmF85kXJNh-D;O(Jr$niL-JfUtT1"Vr':abet5ps60c@d^BK\rNcBf/Gmq_NtI&.=)jYBt=la;u^[K)g@Q)
%o\kPD+7:^nr)V?#_?&:7M[#cW?#';IVA[%&<GU"h1*>be7ck4B)JkJ;dGOAnTJ7e::o'C@gcDq\<`n,uLp"lQ"I!]BC.ci=.M2,;
%a*U[9!a"@_>7Fq-$@muTk'Np&`'&'JCkdQ#X<He\!C4Z[Dp<7P!,<FObinP2(8A&WG<"b?dD?XEk`(%GPL7?LWC&odQK;;L13^o,
%k2Hgf\K%9Kq*C]nf+*1"$mB5/WKn's(_5JPh&*b7Ai#rkBT*lD,MH8Bk$;8BO#Fu>CjYG,^/g.PWDbp!P%Qg.ifm*]'n$-\j.dNX
%/0ht:$I)F/"d&c([&S;>W#<BA*l<TO(iUOO_9nP4(#V]">LQ?OViL'ZUcrdF%jE@mp/nC$L<C'"B("^.+,Vd@[q,aJ8e@B;G$2ht
%h=,*gNkkA+\J`N_,3CXYJU/EsFL^]>SLHk2'?.DBiO;jGV,XjP"'6n<N=I$oP:dMiR(GC#G0R'0%e_Z$8g3sIkQiWTc]?R^3gt";
%h/-R/AE21@Xr#7Q]c_8]*uPd,AYKmrc:f[_VDb7>,+qk]:o>;>=4(C)<t>hKXr;n0/K(HU9*u(Pr>-n7FX3R*E<6;*P:.."faDr?
%Xe[<Y*bsJ&qF#9Oof*-")!,DUe4Tup\PA>ai[,$MrS4Oqe6kd!U#mK7O#f4#_-;Jk8K[EB9LO6T/FjKFfEOnMCrQbO@AtuMD&HIi
%LjlRRf.d-JgaU.bH773/i,dVLGp3V07P9"nAAg6N-N"b:n0d6C*AqTIS'ctI=)YTc]@^u$D_UY,*n3=l`5ZLngl2iHQMUb7!0_P`
%a)Y%K8S49!K5lT]Q_T%fb-_IR]d$K3"c]:\-Shr?SuLP3fe_F?L8H&JJtX$=##(]Vdkm4La7Meo'=uqt%dO;m>K:"5Z?e5nOkNJS
%C1B=0Sel#HILl:q@atS.(odeZi%^_82XF\u:h65'K,OHQK%)BoVSXS!S=qMfg"/osV4#?iY,kA[k)*PF'hfoI"?U5#S;uQo41s=N
%/u`Z6@*gMdS&&KunJE,Z7p7GJTq0B)Us@\Sq@LkZeEAOR7qV)/I:d=`k,*Se,8hFgU/59]Rmfq-A9XoEPj+drp(7UaN6fqnE$#GI
%!o'mWE$u^``W-\aXd0p7>OF/1T$mQ25!gV&q;KH`_n&r4i]D4$\Z^qGJZp4+.D$!a_Q[Qu%p<YdEcMM!%lsg_aUR4M;UhF.dcJbN
%;B*L\<fD/Jlshcpm=RrBD/`9\=J.Al#L\u)%^`*l?soOFIH3OMF?`kJ)ZIf&Wn?8jg(HWWdM]qSa#4hi\X_JPA?Lp%#D^bH%b*'o
%D'Tc[JYdf`c'\"-@Ad)T\D2f>#7?Z@Gq,Ab)r_<D`[Qd+RG_dEoU$NoBX-A?-Y.7mMtEn<`e`/ICi-M<#2F$HXEUaA&ZnC\6rQIS
%)T-PErE:YMKjNuZ@pUWCk<[a;Fq)#QlHsLPRP3H?JES+M\m9aGbeRjNQjl!\&8jR]As(2:g_`mD2[-0HJ/K?kACpu]ZW9^YG,d90
%SI%l,IDA:0YG'tcXUGDRgN`">gIrD8p'GHa.H2js"64P\UCWt/Fi0>2$"1NnThBTQ7B3FQ!C:RW@dPfr]2Dao4U\_H7P/>Yl%tkT
%JIb:;2j\A`UdBo``pT6CJmO?d5\<_EY-i$s!P5ACR=fQ)447s9@f+WH>d+^WNPr,h)$EC!^kcO$nGs0k9XcN'97ZOL$Vt[5K*)JT
%0uId'1eOX?4cEM\U5q2\0Pdb)]#67$bdo;SE(euhNF%ql3"S_`ma4DO*)E+Eg[ptCoqaal_['YX2F]DHBNG<]gMhRL\k]]k'(K:/
%88*;8Z,._To`FIg?sgh^)XK@sRks/Lh6rBHi(S'NfpA!3r;JDM0q*1OGM/V4fO6s.En?C1RPcdYA0@s40^g4m"/1#t@\$m`R)",V
%qh?D594Kbqf3\#DAs"bZ!%FPq,.pG=gL3K\IQb?UBOC7]mk`c95FrT^[]qiDT8pj)oX^hE>W=cDc$1+4SUFVN_p&4cNXet!]'-ZU
%=DeW/5A!/*i^<k_RIX2=Y)lBpZ`_JINp4GoI3W[N=$b9?3fL"-$k?K@pXWCmCP+L4nT-U2Cg1cqgX]eeqlf2$a_f'R_]i'8:"+fc
%EuL[c%YC1PdFWUde?m,-LOfPI;$]^tLOYEW$]eu4_..dWGVuSg\3H>U>",!ZF[S;70SpT4[ri.'LVY$e2^XPj4q0^ZR40S"F:Fi4
%3;6dWWq3fD+o7SQl'Pdk)hjDD`Ul!G)JuALPbJm_\B>6.5EcsHJe6rXeY8'K']j<TNq3iUoo+Q^b"<X`F!TOLYg_Qj48)"h8X=Ui
%IN/K::2HE)DJ\:P*Nc1]K,';n$ng<@>;aM/%Mn]4_PB!T1DKI<ljuIJo6D0IG4_Fk2DJ!Y$'"ZEVAdIY+MD,C+@6:rM3l'g9-r5;
%4UVkE&uLKR7#r8K&X]+KJBhhEqONIL&<["3mF7VcH')ltVZ'I!S;6>TR&NVn<,?!R%dqcHlD%ea+iaC[eIU;u`7BP$AHiB/C-rq0
%G37YRjo)W""ITUD$QH2Tdahum62_\hP!ae`\i1AdAnebQ45q2HXgFcGj"t"M:VkleW?UoK4b"k+OV>FqfHGkD0DCDpGI1HsSm'5%
%9%r9eRNJamWiP6\q)FogIu&3uo"@_ugms3!eWF(HEV%[<+"bFH"U$>n'\`J=#LSG?@G>?sJq+Pmd>kHS6N.i9)mbWf1^?AJ_b8$D
%fZ('$'8FmsP',nqR%q2<3p;`]>Q&`6Q>n?O79PUh[/?R%WZqe%,s8^#;=tcnXYpY/:PB_geIAN=PXs3GXNdEE(#2j^JRN!n/A_t<
%_Sj\l#WlH^#W?"03th9[mbEXZ,#r&f65da`k'?7Dla01H?#7*';Zd**Y.0GlF**g1";Uq5L5C`C%AXQ>V@7XQZ5<]AKNJZDO`<B$
%F]RH'1!ldZ]"#A6FfAIV%8-^QnVV3[S)HDs%*5L,=?rNnm4jR,kg<'u83AJ@(=>J<!o=ZJ(ho(U`pKCBM+R,kD4ltd.;MI/O!5#%
%P8/3dW^Qr8R[]2;T%r@R[Yta^re4'&_Y'lPFJS.(kSW)#PXi]c2WF7'PjmOagMqQ;!n1i@A>DF)5/9"FL$G5-QIlXXRrPuN<T>cc
%1:)Ca(RNf$A,V5K7O*i-XXI=I#-#fnA+J)p@;XUa)VE+>(F&=EZtWi6AgsX<I25pn@s]78$PZm<ii+0[O31<W!/!=l%\t.$Ih%AW
%(@/hg3U1eP>'@S]:"'3b+>c3r]-S==9TJ=)i/d$7mSP5P^pu[RE"s.n^hO-hde&+/XJpCto2.A^$4Ilu&S.md6I+ueoJ<4#d$pB!
%o5lCQgD[2nXZm=Q-[F+UQgZf&Gf^FO(&MV$rRIOY&q"[-P0*E-PiN%N4OU3+PG9JL9im)]CHM#IR%"d]fPUHjYb[+YAZ_`DXdUg9
%QK]eMah5"ig<>77],r'p^7Dh@[ZT9thmGnNX@WeTN6!pKh@Q\pJ\AFi%h?'Q1UKgnD0OK'3=^_OB]lg$FQL4BE'34!VeRt[fO0,_
%loXXcA1=.FgBQ(WHAI6/7ls^,UQDOoRfqU^)sY(QE'hrDPt,SKNeq'%\Vsg5lO&Mdd[phuOo8=^%%>&Wn7cr#Knkk[7%,8>kebqn
%\'4eV8\P&WJWC5313[ll4r1t[e"dX*lHt:%NDc^oVL-t#p$p[]fJW@qR0AH4XA64gl;iu!Wg0!BX!d%)(!Vo>2n*WK'N.G_lTBhA
%;^VXJRT!=PH?r(*c@2\VY*P60m\?!aL-S4)q^A0A-,m</6.0UhOAjL-R9X:le3*F\l,79Jpj)-EFF2W#89Km@Z9[\S[&+t`5r2!P
%=EW!D!#s(CC82YT8/aeb/*a6s1r-]PY/#'Rb8XE&pSRKPc#URBGi4_=0m[ih=NpQOfI+"@S;SF7.Wc6;<KW]sK=$`5AaGGB).d\\
%5s_Eg%:*rIka;H=4?o)+NDNN?hm_oT0JI+_gnUrb2Al8R76$OA%Ws6WU]MVk.NY<H+mcOqJ-WDPeQ^)'g:le+D"A4J=^c.ijbOuN
%PX^6JpP[&%Q[^*B?8mcM+C@g^GuSiX=Z=S]b%?6SS8H)$'q=/OBgm:G:pm!X,+./WD%49KegEgQ%4N;+4`P2Z`1CZ<Sa0`de+g6:
%("p*t)EoTf9IQZ(e=e"X*+r+.OLMLp3a%kFKR56Dl;u_25EpFtR@JC>LfA@p):b.fC@Vj)Z)CEgiV,$-0:ZngC'Udj!q.+-7mb[&
%O*'!u%I7tlW'`(p4oL1^BTP0481-M-N.'^8UQ?Y4Yt<\P5h8?Y/1)CWIUb8Mpq9B>5;_]'C!(CMj,ReH1c("2=/BR5@@TAipl05_
%i9Sp"'#r:Q.O_joLGHRsG'kW\i2/pKY_#9>V^X;gn&S0@.bZoCcTs)5+=0s'7:]TR*"QVhKugGU%n%iuL;Dh?66>Ke?t)=n?=o*+
%TW!b1ZW9^+/t)g%]??/NWJn#"XF@&fBK>QCfNPi(19/>8Rg<.MOn3PBnc^S*BJhao8ec9/-)8%o'J#\dl<\O:OSL9nC@X`#2Da4p
%a64e5FmJY_hH$kk[C];lZ"qHA=IG\/j9*H/ULK_@dQVE.9UU`4*;#@YK#H/-am,fHVbS-,31.=U-6@bERYZepkqE4%-X)Q;.?9u'
%RDi]6ZGF\YQHU3Q].MI`K,'I6b;alr#h6`\VS_R!DU=E+S%gdn8p$G,Mo=C9cBh3<7eZ,M<Srm9*AgW,.[^$JI<*EQYV2Dc_+<l6
%HUUjD_pe!3Pqks<D>.c1UPLKp!U[dtfs5q71oid/d=bdgbe'R`$2,-lIrZVd&oFkK^r.r[^Fb?P0)SfS@3,^;J`^I<Z0n0?+!.<'
%U,8t<&<D3n*I6,FBcQ"TN1>r!><M0X0VI_d_kV7a0ErAr3.Vn`'\)D56GoSoWe2$%@-pf!UJBcP1I/?hR>f(>J8A2&beW:tm4u?Z
%/QGP1pFpsK(htM_2@_9P.*[ugb!)"V7]e/b,2"dc]A]ouC-%k%<&@`d'Z-E=En;?&)M0#"(I*Sil<IeYDgFWMYY\+'g$16.qW&"#
%P%WcZ'ofUap3TiL@+-6+7.8(f:/RCRXU"Pp7GAbDi;7PlFsN=&m"eZF9%">[aU6!Dbu>PGb<?7`7-:(\K/"Q_#h5ML0O38!7=eo2
%(,/(+%R.L$[FcuD>nV2$o"HSEE0t@#.Q<[cdH/\4.M&0r1*#>UXMFsVfVr:`!LOUc=KQGip)CV8=TKKke0poHIZ<@JI?s8Og!o5Y
%e092iNsmC:[=ncr"69N"9DqkH\hOU0K*d4A!%Sk3hieD[_lRN81M^,D7Cj;X33aG;L)oVFKu8Ue:%pAr1tG.*Y.HX;OeZ+PY`+7*
%[V=#,"?Hm0Tp[N)<GUPNAiej,jFUNg7:(5'>[6VPb[YT01oiIBjfoJHm-1Btaec2?]^mhS5VR8H':nRI)ATGujf7diMQDfe[W)j`
%,C?fg3+Hp$Jh>^8=?d:<n"ZaQMs?X[h&]Zh%%U(ND@1OKo-D"no.\rG"ACQ;E<%l4aoi_DZY;sn.C!i'2,"EL2P@`m5(;=s[JW/<
%*%JNQ.(?G^\Ea?F/>6LOE;S6\ru'i?7!Q9k"<KtO4Q"$qM%*nl-s>B5]4)ukD5r"'O9=qLMn64GV6_W2OcNpr*eu,d9IjZ6E'7S9
%n&eMpH`5SB:F@e[!7f&_m]aU3?'Gt[96!^;k0PbpW]F'?M[-6%F!$<4A:4#0T>2i!#.0A',9<f.`L7/^;lk$(oYV;H5dp_$WH;G<
%'jJ[#oS]]VVBqE1Wg5S7UKErjX?;HZfQsjCXI-8B'T14HKL!Hf^/YH+i>L$PC0Vf__+B&2o*NjY:cJsTmNm#R1AYMLEP&)tG%c]Q
%G%Psk0c(WFqr1-c.a*RBU=h#EWm!Y[V2d:E`8uF!;/U]YW7n*gplnn;%;o#[AJjMYGDPl;[_rrI\ZKH`-A)>_5;C2H%Yd:Db417O
%RHB4AcDi?q-=(i[_Y"5-+\tI8Nu4)SG+?Q`.X-JP%iKQ.DgImpq\==gj6,NHTt/cp?F_"ZRgB,KmT>d#^2N?&M/#4HS2(\>nO+D5
%k]Z"+hB@igDIeg_;5h\G(HmW]0[g1X!2N&JOg^o]*Ad'7+\.V(l#^$7Y[V0?-SVY^(fOO04IWI@j(6dsD=h,^G/484,JOK\4t*eW
%Xj)]K*gT<b,i]qm3eTWD)od0#-J`LT1_M(@jAC)QT>s)Q@QCOhA_i&OBrpg<Z4QB$ktQa+-,LS"L5L>3hcumVYSd%%Wk#U,]nD2#
%bbs\IAf\oS2UF2GAu?0Wib0[3LrA(h51P)2K<V!\Wo7CO.kJuR#iiRr"7gHaV@e60ZWOCF6lp6FMg>KtiB\JgcWI+5(NqZ:e#!KU
%HY?e4<lSFU,+\1*NIH3&<=FL8KOcjl%^X##"q3t)[UZ=+(k1KH@JD0,]g.:#$jU:11/q4QjVBhcWjubjTO+jui/Q[gZXO<%4AnR?
%*aW)^&p#RO*5OZ-<hs2EB3-R<qi$.]gor3=_;1S/'q)IUM.YP]U6HTJVR^+qBML-AYF&g]!Rp"(2.='YBgiIC)`+i@+bI:Ycg4]R
%0W=##c^Q](F/c`4AQ3lSRa$hONs#GjXX7Ddfj9bT'I'Y@-\_kLgM&)Q0$MV$kefu?/+MaTa'X]%HNSa$e`!\S3;cce%G!'-<Q%T!
%n5iI31^j:4,/euN?UZpq*WCqR_dDX_=84:Pcf)(#Gl/;@)u-H>r.Msp7F[-5poB3QmPXtn@Ze\!1%88mLct_e12_0M?c?/?c1"dH
%4,b3Z$AD;oi3+8Mr"YG7o7F`/!lXLAree#!?Vr7t_-c_A3I:U'S40IeIh`"MWF=ei&1p'(YJT-9rX'\oO2"k_Q*Rd<"+Q"[1I)g"
%<%I`PDW%_:Ge:h"iN%8%<TofrgGStfEek,&MMf;Y6+MQ]K'_u.&3Tq!MG-t#pa_>#YP9Wt&p!cJ6Wik[;`4IfI_!L+_#nf^J#.8o
%=8Z(VQFR`[FX[7*9NgmeE.*$0'qY41r"\K?Gl/:,+7*)$.uK@97E*ZXkbm3<ODC\";/UfU?U=5S.h1%$kZ=_ZiTXEp^<W!m"\7L=
%IMILc0/5JalKM@e+OB[1W[n#TK&!eeIWZQjNu;>9pa#Y#cLe/jIF!q&Q"'=VX2KmVSplqUNHWaRW&XWR@[cP<I[-#>iTO?>4T,W0
%%Jj(Vh<O3*.IL:0X!D3E%Jj(6mA#AaQ+/P_V-g&5ch&`FNdaF9dBB4uTO0#-frt#u.%YkkjTbZ5`HF\b8h<?9d'(a@o5QtbKOj0X
%r<fR"?h(@cIKe\(^Okb7<tHAM9#gE@oW(Ngf0R0/ba;Vu=-5AoY3B""kmf6B$M1-i?U`>;6G9+#5n/6,kZ8I!qGg5D%Jgf==fWP7
%.gV/a7H$YLMWEU#K74OIFBe!2&Lf9_oW*ebF.jTGX/KT.&,Ofj*<#/!7mJLAXi@SG*!8t..h".mIMGF?W<`Ce&/P,m'F4So^La6K
%73qc#kZ9JR:VWWcb!Ef%GpiGgjS%nnIMKtp39XFgJ#6Sl'KuCE1,3dB?QI!U^RD1MYAebW^Of1(VI)bkYZ^3l&Ph/IIPh:!^RD1M
%Y9GK:/bH)Gg(!mYU_A$I?U^d.Y4Sb#PQ+%cMXZG*oIFW1SphE$^-TMclKD:]o>sV>9&"NAIKe9LY95h$<FS\XC\ecF8&(e&d]Y'(
%e#srYnI,:&6]IjJSOUD)5"'S8R=9k:StfX9%E?f!:oNMM^Okb7="J<sd]ZaXk=!(Z]$dd,hFbQBPu%$&X:cQP$;48e^I$TD9Y\Hj
%EV(cOkNGuP7@r^E>^ijJ.p\32qA%nZkZ:_bqA"^LI`5*pVI/:048K]+[A.)'@AR=*dHFY6,('/d6HtEEr@2eF?0PDs45X*8<D)W_
%r<e<?qA%tgNdaFVm[8Mm0WLmTiDqr7eJ'#%C8sb<@Qfd;I[."iVk[Uqe33a[+YLCTYGU7A=,/j#<saf=Q$rn,m?rEWDrKn]W<?#3
%@]bS&rJKl4^S7s\Y>U39kZ:S$r<e.O?R7%R?.6"H[2f.&d+st9V6/dHI[+sDoIHd70(c23=J7^03aBRZ]BBb$'gDXk^Hs_soII4j
%=8LG]*;sWP7__RN@^+4_#W=loYOL1GqA#:u#Q8DOF7cN4)Z:!ZEV(b(WmC=<"@'aq^I%+&oII&qiosMqm'>'C+?93tC@MN,MCuB'
%IKdR8YB[uCr<g8#8&%[O:q4lU:j;"h^I"2.8&)p^mH@W,YgT]bFjR<G-p%2>542+Zig3d3<tJF/'s#6BkZ=c:oIHNAd]`;p?.5u2
%b;f>5-;[4I3eWcI2-$DY,qc)sq@tO6S`s4'%ZZ"Wb![cY$C-InoIEu7=m9!)%ikNt_>e\Q?ZCe-d]]n!EV-:\pl96ldB=0<6rs.a
%$KVKj.W*GZYL8_!r@/Zdf$U[/UTO0h85I5?rCYWQNd`:O\#3TLZ96O<.'E1m'c-Y2$J4o#W/c<q@AR=.374p?Nq`/r#V5i\mn`SV
%LiIj>?U^4E=m9!i"J+dYd0^O)r<e.O?ZGUXU0g3/oICXlqA%>/J&]m>+tDNQoW-%G<t"s6^?%0L$EK2PIKfJUUL-a3dBBE.kuYBA
%SphDY\3[le/D@\`Y9K._*W8UEcn5)/A5BsliosO,M>&Co'kBhLK!<\,Gef_r'j53dV-cYlH!ff;&_dQ:oIJ"SIKd^>YJ_]r7DGS`
%kZ9lhV-icXBDN?lL8/*E1hK7m3YY*!R^1>E,%n-6IMMU)K74P^o(4F@,`[=2"])loA><L#P/%mb<C@8p9YZGjkr\a,hT(n1FXW9!
%[E*uL'eS`nd'*4kcL`X0Nd_/Ne$#G"TO1"YoIDDOIRW?l^Okh9=894aIMMU)K75\5l$4+8X-J,k"])loA><Mr#H[PJ/=US)YMeg@
%oIG5D*W6>:`\[Q#*m'[r79AVD^RBbP?QHH#Y7_\V/,]gHM&Z(;aI[ha`RD$M/AC3/=-,TDMMe09n^KAn.e\*U^VZ!&oW(?!oW(>;
%qA"=2VdIEoDU>S/.UM@@E;OnVeY4&UX$\^?9k7H'9#&7$G_:Ia`olPek]Mo7'tFB*dB=[>q@s`8^Z)5*qA!R3^P],8^!a*Wgn8$5
%gNiWq6q#AKY81]G?QHH"Y@=P6oIG16DU>RrBijpW32[eq.Uq4`VI)cX+^F85YXptU$80=Sr@6rU7DF^??dZ(:/DBLT=#%-6q@t3u
%Spn'q/,eapNIDU"%!L"$n=aLk'nb5#IKcQbgHrZLEi*2@G4[:kbgEWh9@*5\\Fr)a$9n;)[Y91<-k#ug;3cSF)>-"o<cE/QkZ8?F
%4cXt+;topbR.abV/''[5=&H#V`e/_/A(8o0(1j=L*O=(r,+Q!"IYE@8#5nnX\YieC-0"/jLZ7N!LMZT5N9$RZ"fL[SIYE<BVdI7b
%jlfe8K\W5-_9(j(=#fdUr<b.p:VT60<_pIsl.$aF.rJL3oII%lZdQ%SiojHB*V:lMgKE`A/BW=6?ZEF39#&546:\dOq54bToo3LR
%A:">?r@3MA7DIi5Ndd7\m<PF5-0u7goIDJR4oG^Hr!*+WZD1bmnan=[2s==jKT:Kb`R1mQGWXBXd!-Q/.NqpRkZ@94hOn5l"6euN
%WQ$Ib<N?!5r<aV.Q$rmTO/H@$6#qU,"kh;,Ghbp+JoH?k7G6(lk^mgH.k!@?=,^BDqNYZb/bH)sIlYu]a:MJ<=7At1qA$IITBK@X
%na>UBfRE2N=,Gno'E&:8OZiZ#^M9TPiF\_H=&9q9$A,0_Z#]T,IRR>/UL-l<oIDD(qA!O:^Z)D08&)n]\j=)_-d9uAa<GTq/$L+6
%d''ZNdF59)/9(53gtadb$Ec6^^Hs5\8&)o#H%UR2\Fk3F?buV_K74!We$%,t4T-b7>i1Be"khA.W&XVgPr&ArZ&k6"Ks0J"=#fdU
%rCY*//,E7TrpWOp_FSsL?g7?rd'#FI3r7BPF?TnMbKJ<.q%`i86dnZB8qqXGqGh;+9YZ2CkZ8<8rJJIKIRSCQ?g1Dmr<i#>oICE2
%/,^sF\%'eg'$CSfe#tGh48K]TQ^*#RnbPqoi[DOhY7acH(]"l#'E&9<UL-l#kuU"97)+?LiTO>l-VqK<4hJc1FCA5,TO1!fXXs)p
%g7LAYoID>8DqFV3atsuqIRSr.V+/5Z`G4^?oICi\Ndc[u&kB]g/+NoC.Pgk-d]]knEV(dB_6E!cVdD_"\M*S*-HnIG'p%%j(&]W%
%rJH'CO4a/[IK_$OISIRD)Mb4tkoso>?br4XK78N5$r=WiMqZR^,-(^9kZ;`*HhpaLT_P<i_'$KY^VXa;e$%uHFS%)06-o0R/F5Ou
%.SdFSdB=an*%1Rt*=e*Y"i\roW1<*RO?NQ"b!Nkk9:b9Jpi;sTL"kbR=*+tCkuViSGkr02JLg[KP4NZf^VYhfIYGi%kuVi&hOn5l
%*T60`C`P&)$8I;ToW*e(VP@M78`T&:\G?[2'q1Vi?f>IcIMEG=51?_)AN]pKY+_,0Kb(j_^S8BhY:)C,'pLNQ.b<\F=*i1nqA#56
%oIG;l:VVdgB!K^dc@b:7D8Mr+e#srE]BPtq_)tia=#f,3^S8<fY95O<h<7oO.XZE"IKaja/N9G3;-<'a&GjtIVdDl%Seq6',R,Ym
%qGi3FdDH^tMM]5$r<fNYV8*tJoIK](cL`Wc/,^s')!jT(U<mEEoIHjk[:o1_#V:%2oIC8>R<8'OGYUR3IF>;Qm5XqW,#W(M'h0rK
%^I"ZnUL,/rm6n]U,f7s4i4O4)X2kIm2>mlWa%F+(4a?f<LR/\Q$3:T+^L@1ZTjJsdGG\`ps0L.W,4JN8Sb+Epats!RhRAc!'q#NC
%d')@T4O^LD3G"mk_1V"9=.%@\oIHHokZ8U7*;tbDc4g-`WhWq[><2NpKbOD7>29sh?g2hDr<cUie$#M)MiE0#l-l3qX2k`*fCUSR
%ROe=d&sU&UY9K)\fCUSP9*r;ekZ?!4Q%=2.YL(-@0!Fmtq?g=#<Ff80HI/kb/^O&>N:r9\Kp\p9?QiNuVI)'`^XB<)StfZ/i]5Jk
%nD,,`.M<+-&,I#qg(XDl.niIJide\iY@7o!kZ:_bqA"]&%f019IWr>s?U8i,.st&]^Oi\Ne)oWm>H&V@.^3Bt2X+;uK63hpd@=J+
%=+L[^q4M*2'lp0YEO!1)YHSR\oII#4[hQ%0=&`BgkZ8<>]]Vc!Jj;u\dB=b[9HWmW]U(9od'$EYU0mGlfFRgY,df'AoIK?<.d`+B
%"c(#g^OjG5A*Ie$X2&].(&\Il&P'Tnbc+k2='WY8kZ>?pm%@_EhE(L5A2*bHIRW]lfbXEaS/"/GIKeKd#5sDkq3?CDiRV/r=-<0L
%YN],U?p+CFYqS\_;T&5s^PYK\S+J3Jc8Xrg38`2gd,@.d.^jeaIcY-anRfC@#5p#TY*Gnl;0MR^.ZSr]jTbYjZDV%uAi?jb.k!@?
%=.!G[rJK!K8&)ndItN2=g!R!r3;OAC1]7Z\VdD._][Eu+gn8#jrp]P1.%Ykk_rV+$.['Y5d'""JEV(dBJt;.-gm[?g<sZ!VqGg/`
%(B"T&'2QAHI/&>CKcK4ooW(BYa\'=BiojH+oh<,Pm-.SJ(A\d&hOn4!2:^0Zkb<(hX+VK;BDN?R:VTLi`iSe_-tiAk<(F^_X`X1c
%.OY'm@ZYW(?QnLlkuW_+c7A`+'*TET$LPg]YF%^sVI)c<a]J<R:A+7[`9k.foW+d!QO`j,[cr)6<=8[?r@5eRMLL7X4oHj]Ap1%Y
%,uh[#oIKi_:VT5^jI(H#e^L^$=m/rT`.NM-g!R!rGkr/>)t^1A22rs].W*0m1&;Wrlj`e+F#G';MVl>!Y7__T-i+R%0!=gsB&GcI
%'m;='kZ8T9*;p6)OJ?/+&a`9,ieh?E?U`]OA+ZfY8ng<^'aLFdIYGMId]^05i_7+]m-%MI4T-b7d,g+5`Q]0YI\i1cQ$u0`9YWpB
%]q\pX$f9:7)"Kc9YLFf2d''r"BVf&Z_KCK[`H$cpIWZ@W*V:ipYKuhkK]"uk$4_5T^J`/<M129hes1\QO8V\c_M@!@?ST+HdBC%b
%a3h)Td!_Wq0d>cD=&^1<MPm'1=/`OjkZ?!d?g1Y6BHrOdPtJW^?g20dQ%"G.aUS(]:Nc<16kA-@^B46)#5nm9`RD"'9tHU=`Gk=7
%I[.tu>3T,@c/IngfE6,j?SQ3LdBE$s4T,Wa&8oju&g8AJr<g#\V-e3uesUu`41c:)'a.=IJoZKm"aQqOEN>7t?Vri4Y8DG+oIGo:
%Xn4,]juCblnDc\1$@Th>Y7Sgg6,/l,hatT"[2f,P?fD:g9'%T"'gguQIYC8[kuZZ8GG\^j]^+f`XJ+tD=/;F[kZ<T73r0R5nOgP_
%@m8AFcoE*E.^9jDoIGm_BDN?!Fr'ohZ9]N0$M47RIYA1R8&%Y9XfptjYXfc4$;j_l^VURqqA!gW8&'q?UbD?jUdLa;=0Vm(^OfP-
%dBC(3pmQYcLm+T@d9X$(Y>1,B_e8oMkuWhBTBTF9W&shjj6%rkMSbd1Q+64+TjQdS48K]coUY5J:`]Ll_FhSk,Hg94]\5umK&Gio
%&C0pKPe5>H;V=53$KL!2IYArtdBCp]*;p4Y<+l%B-=]Q\65G<N?_M8+kuZ*R=Qig[\6.us&C0nuW[n%*_FhT&Khh7je7<dq.qFL=
%oW*p&*@L[uMcd6GTcHUd]cQgH6WiSGLH=X#XFcJok5\_kid<oGO&+N;jH(C8D,)V[MT(RYkuSR#qA"^LIKe\(^Okb7<uJu?<r,gn
%Q$c$867(cZIYHeT/,eaX^XB<_C@j#U$V.10UL0_'3>_^UI`2BOl7u0Ne]?ug2Ytr<r;AS)kZ:s&4\khgmQ]0W=8EX>aWigcn5lRY
%cM?2QYGboK^@ABT^d8t;/%k''^@JHUL+rF)A.W,LC]#[gSC&AW$4Vc>(unu^YrVdu0a/s('kU"W^Z$fXnuoRVn'&P@m.aXY4TF\/
%Xr]t%aMOY:l,:>o$q)cH.la[Os,'b#M1<L[e&oG"Yk"uBhMH^cFlcuX^UWj<\@q(D^S3)nj^00f_""UiIW4FVTh:!u?ZE-tb.lre
%WY>DilH6l9Yk"ubS8c`f6MP$K?ZGDb_S9Q%j2A]!b^SY\i<_LCe`k1=c=b<+iL,1LrK<b%`<..\$H`hW'kPG#U)22HY9GR+'E8D'
%"jaqUE$[LC($Zaoi*UK=WoIG4@]<H.'s-I8r%#pMJ!F,KGNE0t\\Z&?2J^@Ji[W4CYEIF=pA?EnAKCdX<jLmq_-Fak^Ig$]\alqc
%<Ta'X;fMZ86QIn%DLcs/X&Q"oFQHjU"r^PA'f4S[rft44k$Lj5pfI<U<rNh'YoETkb)Us?`UU.)gu)OZ;<.FQWA`);@^4$2s!k;N
%Xo']N>!;n#;:`+.6T4oY51K2-E4^&XY?4c?nZV.0>5;6Ti:pB/D#>gGh`:[9b#UsdnZQo3k?lX6jS2f5C\JMB.M7ELn?:d1o_^4!
%1N2cdki6d_.kXX<s,):)1]N?<j'P+Br$s0SpfDQ)3rTj/a1p&4:AcWP?p4Msc:cKu3Y.q)e;4b&%K7(TM&lUGL3CPN_JZ+fr%#j[
%Ihc[dXSf+9dk1P6jct>71EHLQ=$Q;[1g7T^Y9N^1YPbFl^<h^dKa"+3?Qg'Lq,_Q&p`0<k8KWtB7E+f#1bn(0^S:)i=&`6"'gM?7
%^I%(>k?m2iGlH6e3<#2c/,q*!M/.&\jHEpAYF#lBn?5s*C?8eGq<eIeMDYARs,%\($i^Ru)e]0#gk7m&MsZCOV90PQC5U$G@T&!A
%?Qj.G#6.:/q,[J0llOKf3Y]WL>3*N7MUh!.)V,6ULH#!0;11(oH=48B?SQul`4r&3pfCE7rsHo:Ihh2J>kqH`T"UD="m#sgMXHdq
%J&N=@Ndml7ji"okXDbcBYAcuos(YD3^s+&6rY>#^*WHJgBK,]fgpu\E="L_fnunqKpfCBOrY7W4nZU<FDt'sW(-MU(#/02,*K&la
%WP%f*O=oJe=-;7I:AcUf7XP,7Zn2!o^LG$t1]N=I'3G/J$R@e4't7>;q,`Y@rsFYH?h'L>s!jmn`P5mY]Am8;=DmZ40^sAe'iUYC
%s(YD3rm`3VIt^O@rY7Wg#60Qf`UU.)GlAGC1]L)/Q%)6AnZVSOT(lBL79EXj'kUt%^KQkeIs&iP^PZ:>YPbFlK#3@o`CJt`='EUe
%j^0/]mKW[uS]:9)=T6e>Y:stOi*UK_kP/+LX76%f6h/(3P`:/-Hb&bG/)<+4ia6E)SX"\Yg4LpU$DHGur%"o;Zgt:NOQuXC0L.f$
%.^<['b.kfJR2c&SPumsM.P(NkPnX0)p9Edf;/uLa.VJ_qK=20f$L^.X$Kh,?Itc)WcbE)K?1G+#%d_ESK'`;7:d"c8Mn0T%MT,<0
%s2leG:!GK?r%#;0*WHINN*#unSCf4g'p_(UIg*g_Y7APAY>ej'=1GMqJ&U+[-iOkP@M\rC9%ig>;#0n1^OkbG="KHGnuo8Ppr'q!
%kkJ3j*<1mdSG60e40nF\&5mQH/#8Z)q,^B5rsFA<?U6[CYGa)O/"X3?YB]">s!i$=]'uo-$-i"D.%L'6o<??O8t>)lg56WJYPD6+
%Y4.-pKqZHVYGU=S=&V!U'pa$'J&T\/-iOhn;&oUnGA6/G9u6A'%X%9Ei6$*<X(5Q9Q%)5Bj^4jg3W9bZd+A1GBT@R2@GtS`rJ?#X
%90<+f^7sdtV6Jk:?d3#)*f%l<Ndio$a1n(CnZVQe%fTI;U;RfH$Fr0WJ#1H?K7=%PoF:d7I(Z&#7>Io'?VSN0Y>eg&=%nlaq,_%!
%h;DX+Fo3`q/,tLq:])`ANdjK+j^0<sriZ&uG_.IG.W*;tYO)51^G=(/<t$[ar2Ts9mDQd!%(l)6R")X8YE&?-s(\RB/LRfBfttM@
%.!Of\Z%]=X.guWBIg&@3R=>CjnZO>lr%"@^ia5Pgq,\+IrsHW2It_f`n?9?eH/W*NmoTLRWXJiaWK7MfMJfm:rsEHG/,tL7=]bT&
%ijQI7rY94DY5Bf;&<;5DYN2+$PtH,q/,Cl"rY75::AcWP[2o8SgZ]aYC'ouNFf9qB`C,lSJ&TaGk$Kj_^%/?L3;sYH'E<sTb.lqi
%(B2k.?ZQ&ppkKmiMMX8Bs6:.rrmd\Pr`-7sOb'XmO?W9>R*`52YMc!rr2[a]JSY6"eJ%ri=*+9i)Mnk%C;+'N=!ejc.WN)=b.kfD
%Z1>)c#YP(2('oqMV8>+iC9#:g@_o^BIt]2fR=>rUp&$<cZT.q!pNE,&=)]oSrY>0G?LtA)fuW]ei)<kU=3,qQo<7*C>kqIRRc4$C
%;t0^c6T4oYb=FVl't-<_i*UIKccX"c-0l<GlKj<jSCIQnr2Z,?A(KVBOAgcqD^'5'\ft8o*bqIsqT?Ne,;!>uYP+)d1W`^HPg&^V
%/$N_Zq_@LR@C<=C%"#r<;KpV@ilp/n]]ruWa$a7]Su_`'nS1R.o<C$(X+"$%M0)OQ'ME=Yn)Xn$<EVGl*l+gS2+?/B=*]JZ4mkp8
%Vko#h78cNe#ODdrIdZldFd8Ehm"r<jbQP8s5Zc%uCaED-Y+We#%a5Z@P1i44_KBmt%W[hiF)Wn;&:T3)B@*\UT)`2XQ#MEl`n'kj
%\126i*IOn:3/Z-`-f#,tXSlO-+V?;4UTH4aUE.U3G'-8JXqe7iCV-<E6,]YQ$+1sA1@GIs$E2#_gD/-Dq'rK,?q@>#FjW+(<bNt^
%L+Aos**%&,cO/5lYn/!\p`Z_$X/R#`.Mgk4E)<Q(V'f'F6G84P(@'Fn:oq++)o#*beRj6Q[VCdQJLbJ8V).aO<[%F;QYU87eEYcn
%ZRT-k11V-JrPCFr$N"O-.0/I0-!dAi\>l?YS?HU+?*eT!X=>.>bSX;.l4,JnWhSr#D;J7A^aLd1;AHVjcdBu+0.lG646';F/kTmm
%;ft6@*oln6_a0o-3H7ioie-270M3')]054HWFEJ+7cB6(U'S6[`)LIBMu/()dZtpF'rD=$JD$S/;l)W'mg#_IOh!'P.ng\eJ&/4U
%QmsA!0Z#\%<NIdZ22qSWQn!h'[o*]2'jGp>mGLqeg;JY'#HFN@.iYFE8e)*($A.+sa/O[7V_^>5:`'2"S15kfjDji;\:Zaq=)=(!
%'j*/ePQOm-I\`%F;hqd#39^dMJu[,^!NP-fG\@;]JtU(m(JY_29/?u<cipb?NH(u.Ki5t.@u#LUJns=E"_P4)ae+/6_]J(s<H+@6
%)hj+S%<GbFJ5e6r+'$B_7MVq&TjY&IW`ZY9pAZ77@9\*94eE'I7Z<[gVkS)KCRmbhU<S<R'Pm)^A:L@$Wj/N7%tgXocr@E@=6+>H
%TI(ZQ-k%dE/%f\<!b1N0_bs3KKR"7UP:(2S4W`(+@oCj[p$>C@4W5"s2Bp\!^At6,)a#VJJ0$%s$CNikeZLU+C@rMNM[JpnY%@$+
%_FaO*N^Qmf5"#K(ePV.?5ZHBIJC2/PW7Z`a(-4-KW#UJB'1S[amoKd[M8l4*.Z(d>#$\+\h,t%`fVO6AM^G/F29\2C:YC)MT/+gX
%;qU]a'\WS[lJ.0Qd8N`2#)m)SVr2Gc]'We\O-R99:;K^D!\D$i6KNY\/AI-*`U]%"XKUD.3o=?u)0^t%+YoFE4,%rN\]-.D$7[."
%'afQngrADM"]hC8*]jOf)eKL?701*TYYu5AJR/^5#("'`S_PZQ*HV9"GNq#X*A\\@171Ys\5N[4YoJ@8ViZ?o?\39q:a1Wu3ZN>N
%C;BOUj%ckd$oa[emM%1uBGm%g4%3/)5i"J]e"R>@/CDHF@n_$t.4ibH-JPb'=:&_?i4r)2>,]`J'g!/@kH.JD'[%)_4Q_=QD.DnH
%UJ>gVLW-8jV^T?mDqlcK\:EU7;4Z&_^1/)TJ5/tW.Vj`5i<OE5B$_uSBAR<S:/,/N:/0-/;coCS[#g4mKtsLe8/u^YO][YCa+4NS
%Cu"bEW)H5VMJt:1l4f9=/leZA&R*>6g0de]h)90.>H(Q;p&Ro+pOZ,qW)HW6e>]DcFc(;u\0H%PU]S_UZAS,1eja@+h'Zol+jcG%
%KML3Ia./UX5Ya$I!G<?E.WA38]15WT/'s>8&)26!Oqh&1I>X[Jd"=;HQ'9`@:6?LN'hlRp8RUqj(d2jG.TcI9S:\O_@DjT#*4m52
%MNpB#U)6Il,3K`$hG@,(1eRJ[.4"_TI6!0)h:a5ql4?u+c(PVS/59H04GK$9kAuiR,>Op=dA31cos#CjLf75k`2T^SEJjGU@6GN%
%MY8aHkH)HJ4EHt(o-c^24>dbLjuZ)'R]6stE"srE1f.(DfO/.W-"W,@?Lo<Ef([7"ntrds$GqZ.E/M&&K'ig\lb>2)64Vof"I^5=
%3(4o*'))eo"b@D:%62<O(j''l>AZ[LU`+1Z[:EACbtq:dFi"up,>PN;/,%?8UP]qnUF=n3<oDK$%cA$*`29"8[&@Nf["b+29grsd
%?nR6F=VR)cc"]PGa21\m_+gn"Eqj%<i[b.^#&[%_)ePNR2hfq=Z]X4D0Q5Bo1#18%XLP7/)K%$F5qIG.H?`RR%U%4$2oVZp^Z:V^
%$AbDR@;GM?qJ`ej<mZCXB='+H"WZV5,6``$YO#q$>UI;8R"qAW>o^7t\9'UEpMs2l2T9JmR(#PS_RbYXQ_R80?Pqp]dA?ugUhW&6
%>3CIXe^cm#MZ*h8NWG;P!K&H48"8KbI.S7;B\V$,DR?BL1lScXVPpm\=]9]Tp5,7'K*gX1;[E4DdUf)NDRTN%9]8.D(9X%(5-AR`
%.@(2*bofq543Ei>_O.W3h@NU:]%Pg`9\$DhFatnmrA3tAF_hsO\eLGrBKltZ<JT[GCoKH8(P\6m8SEg</CfIkfYCCP&$_?VXqV6i
%a[kEq;Z!C$D-/72L?Q]JQ*U,o.V7UM8p+q3L6NlJLFs"UPX6&A!dQPt@#>Zi7r-S=iK0VZ1Sl5[Htc8'enN8O,t]b6-F8aQfV:&U
%A>WWO;i2;&q!A8bMFUeC3i`'2qOa-d4.oKQhc*+f>XG9SV,?4e;^u`"k(8hLTFN;98g,(.7_;/_;,6/'H7qXjooMWmH#Xaj%Om)R
%TgSH;9(dYKUprF&`CM/]?rVF^S<;n3)&\=nW,hD*-rqsW#<iJ>"5F*H'OpMo4DLn9NXFi\&'boj#N4o_R5G516<iaP-u>siimuKP
%AalWcEU]nq*q1Ql@c9^4i)0D,JK"nsGSF_jW$a\7ML,"**X*j.Hb=r#0apCPZGE:m0JYZkiDEQ^%srO8ACr!DNac9qk.2'O<+*#M
%?9LAb%_D6c'XD-MB<\/.i7Ut_D!WSKJ@^i:d,MrJX3YU+m[VC=4V/+C2!TK_miRm?Y'L)\KQ'<hF;2EHaK%+=e.b#+lAu`$V63>:
%GSD1;10'\s4Z\HLS:#4/NaeEVAd@luC?;17KoTUW.NL,G3_E&n[XOmE[,r)^3j%ToN-9;/9lq*@5;h4Rcr#SXcr#R7kU?(]Pk%+n
%66BZ'Q:FI0]S[<?AACQA42=_brIKq`anRL@_8rn#:f)D,%&8,\'H8(QJFc%eO($YjKLW4nWi<a"UEGU$h1.sl.0Ce`f*bC1`bP:!
%7VRX]q1(q#Tu1\5UKD<0)d$iAU[[rrWA^-]43MT/6),3,Kgm)g6).8/8LHQ/61s3_n][rGBo2bemTI_b(bl@jG5AE`0FHQ<)>#al
%<3ph-iM'.]"BM%f7?Qc[09[-)jma,O6%EEqCBfYt;A?1rQ#rs*Tjr,;%Um=E:":Xh#ZnfVT9L`T_g9iB0QW]b!l5jrN=gjY>:`c$
%,-$YY:7`"#Q++m9;5>@OK*Fc&D62n`*f:-sl@,.C-tKD^.<(#&%Uid5*MT:%0YFYf)t\t%)HT4aY>'f=W=h_6ZD#uk`d0HUMU+%E
%n&S>LCYc?VdW\P?fOS6c6WgTi;`-&S4rf22=.a'Y1)&g%m!T:b)Y]U(B$22K.+FqM.+BCZ'FO5_AVDKG$;G?lScoJ?YV]Wq#).ZH
%Lc',u'oE1VQ!1CiTfB>skVan):1[jY:PFDTKSe0A$AI:W>cCHM'CdoU?U:B[X\Or;=;$>mdg.Es`Bg2p3hT=)b^shZ5bV;\(>m5"
%Tt#^cWK@C=_X9H3_AO'Qj?,X(au;(\\Di/&m@d?"Rr?ZH:cpFOX4r.kYsp*r@g@]sj(mF$25!b_;q^1X'FOS=P>WA7MK013'8h.f
%iJ![n-n&>/H6s=J+GW^%6:#$rb*Z"IN=AhJ5XM1+cjlU?-pSe>C^1SFAupog6,>WQL\ml5@8f6t4HfsQl4GP0HQ!T'^Zs<J)AG:g
%F=^0*'`8bh"aM"#ABj?U1ajES&(h!-3[1JfnTm]XU<F5SA)B'_,T<g,0IS>k(4-l4_[.;t%0iZ.=LCm@<8>Jo71Y#[8U\nX7Y?<Y
%Lb%RYKAu#rmNYtN:onr&<bsH<m)<N?V88fKA$2Y8_4\"m=-Fj;#/srG^=kl*_Tc++`8R@3Z[CTi5s_3>HLd_2bF8.9j$D(TL5.j9
%:fK-29HFl_Y!X0>$8R$HP6]'4_DE^$#DIN#".8+7_,[=g(^>Y&H2^;(eGqo:LWEB**XIIjHgL27#fR_]+n#XI$?qjHcP*#1rSgFY
%&tpM977]lh6mt/T`NV<G'W)9"eJJl*%Pk-kieUEm[2uXdU%%GPLN4$$[)U%m?P/u6<e;KC,=57)VqW=\;5s3q#fSJ$JYGVe_Um_]
%AO%Z6W+d.[#_c!)A'>cT.&NANL,:"eLCl-L*"bdJcVtB"'F._\63\(f4>n9K\L#)!Z2Af:-o;=_lPN/@Frd[(%1*cY&V4/K:smF_
%)A3AYSJ?m4U&`f16UFX=Y;.Gh*`gF:6:$-Gb;#\M5bc@='+4K"fe^X$dS-/oGU=-EB9(0TK];V*(V;Dq!XfNQmC8qelDAu/Sf(5#
%_#:J65+,4]&?BqI.-?#e1m(U^ht?#cK]6]b5r^,(C_)i?1*dRJ2pEs"!hGq=j*\H-0(sAjKL26Q`gXK665l&2=D2m9T\uWa=7nDK
%3c\aY$jo<qrEqoG+/n9O'NC".IqL#Tbc'Zo63dU36:9KX#7;Utf\7&AKn;XuXTes/E`65XJj?RBA^:S`$GBghfI!K#nTj;5"B6DL
%*@:doQf%Lhs&;iLZ)9,M;r&0=1?hT:=XtK]-[sfhKml?sE15rZId3\#UOf&qf2@s3"$a%Q1;B];T7TM.-hn!;2rgAKr5AHZ*68Te
%7/%m,:'Q0AX-.p$#C`BLWK&elp9gPqf5Q84i"od2pY[F1$i7RZi$Tr<oeQ"MQ$CQ%imoK'8WEU8Kaq)D54L`n&]]</=Y?*9L4-p5
%;lATi5&l/"90;JR;i1D08?$`m^"6Nf%I=b_0\:S#p5/I03J87D#u<u'gl2+5G8mXnLODLK]bL'L;P3dck8<i**ucjro8,q'dR>mW
%aooTM>0D\2DQf?Z\,r9Vje3+)j?:>BYRF8Rd3:]bYu'p^HeS?f(H0oE+#EeI4Wu2:\V6(:eBJpf:eu=sZ##SpR'kU1kK,J<%J.Mb
%1b_f9?";1+,D5sI;72JSaCIE@W\_@4Sur=9@hOI4"lm8U3tW^,d_n3j09K\sJTjG<f>prR]Qk&sD&V19a^Ia,2RX8W*Pm`scqZ"[
%JDOpL-Pd3Io)q.kCBGNq'hBO`\@%09,2NMAk=TlK[Eq;5:a]f+_M#DS,++5p$Y/G.RW[54,<?upPbej[_dn2EQ7(#cmsE9Mk>YkK
%ltPILY^`OC']KDrEBfG1Y_+rei`8C;/>j6g*-7dCp+(q4$TtaF_gj_k.b4fDimqqAoIQ\R6j2.BN8Xmm.LYDV_hmWtpl[/EM7)i.
%?\d>"gsFV!_+AFG\*+,nN)4LYe0$_*gn[s9)%(t\h6-NIE74)md[MqdTOboi2mJApWopPOVE.Bn6T;DMqpWV\=Co=Hi4r(>@tC;j
%i&5#SKAL1lVL90$G17j`1XMg)g9`4Z@;="5@Xn";O\H)f_@/=7UFRZU"#f+$L,R(fdP<%migQ<:N\jiOWZn0W3*+Kl\2o@Z_QHuf
%<%=mSL"2*m!Y82X5*?Bbe3p,$<[Xf%C_=0;=%j:+Id"%+BgTrk>Z=`H$6*d8<ZInA5.dtr0R?l)HbIFUB\K4V'TUOn[3*,J!LaR/
%io;s_'>m.@o6_n)_Y6%[9K5]*o)m=G<t2u+3YOF%iRo*=M9sC)d7eg:+]gEt[X?I'AhlQ5ELD]53CdX1=l]&WA]">E#;KVFR?/ZG
%MI_;H#X0gb1;T<2JRs9QOsso25c2c*A.uudaEZ&o@5;\SX3SPK:_B@6q:Mi])Wa8_2Gm.>2s345;]9G!j"OmuKrn`"-;57J\OZsZ
%#pQ^4#J27T0Zk.YK.62&D)qe5#BN_E#(d/XNhag?7UY6Q:cs:8-cNbn!#$P@>O7QgKHOeKVg#s1+VSHtnR/1H@=fm8HV&:0*.%tp
%$2cnQ0-MpUl\**J%jd\&WcR)EmW5C>JsVQ1O."Y19:QBaV_4+n9:4ai0!T0P=MJg\gUf@^O'H/4H>A_S6pgr+d"k?%DV-OAiY'.p
%>a$+HM1Hq29p<)_->1$o/h+iA*P<]X::U"=]HtS%)0Idm&j!8NA]@p]@EaIt\)_+dD@:MI`rI^qb;Sq,--Gis)K:N?k=l%2dH"1Q
%q[-T&Ob[g5JP1PS]fdCO,q,32k^Z<n&Qrme!gab_jsn<"9?cCgX3La4.+=SGGY8U8Bk+e%#eX:jDMe"Z3"fIRG)NkE??o1?RdRLb
%GtY@V(tb4g,q/%NYm:\QN4k>SYk"*i!E$<1.W:1&>rKjA>@O^&78GMJ-+!IrDMa)(1c]@0QFP9LA(SeQ>N-9LNa9OS/`-#K>=.n`
%VS+tE;BSCQ[KF!,-&7,]`%t&uJh98g8&8Rb6(gN:X<kMZhhGVm_%3Wj,\&FRpS!LHo7UTiKUV?[CC.:Y`/Pf&JUEWCVP3m@:u+"$
%=A+`7mU7m'P28alXTW_,2"c)TfFlfiQ7<K)3ou_R5%.*jkh?GK@\-i*nUN2GB#*JAK.ShEc8P#s97^F5ck"bAM[K!L%(8Q[#\G4b
%>@L;mX:brM6pLr^'F%cN"\?3m*,LIS@.fQ7?3@5u2do>r#NuJ9X<lG<e5Vk7(s1p7:%sf[kJ&A+/Z^7s)N$JOTdi`0*sJ%eR0RPb
%1Ae/hQ<:jna4UJtJt`8P#?qNdTJMs_)GEoD.[dLeoN/_nK.SfhOb:6]QM<VqGRV$V]81O>Jh>B8X!'Z\/MZp';g,aKV*oI9Xfs)[
%#tua)fFmN(1)"WBQKXIKF*+W4/j?Mc_I-$Q2LZKZ.Bm\g/"X2f+c'b%^b)7lZ2gQfQFM3jaXrO^7%&LBj"3QR$Z-4=e[r6+QFOu.
%O7RH+A&,L-"1CV:Y'h"?J`hnf@"U&I`P[(NK.SgPL*u:p9Bp<LdtB;m%h.SiK.S6sUu=*7>@Qt_:0Rp,)V&*QKIme?bjOM!9*fP%
%L:Fcf71ESW&I)HK\:a2j#?t(+B^#b<M4SZ'[C40Y+0*Le#?tYH2>a)`QFQ[BF.0q2'F<OT'l8_8*'S4l/SSU*gCMpL:ZZG;YU+sB
%as[jp`=MLPd:*Qn'GPGI4DZJ5(:Z-P&pG]WjkF09Le29WKnCuI<;$KJ/[=jj-\_Y+)@k\`B.`)3W9%KiV+>+!on0Zj@&p-[9[j]L
%;04Whe.Mk:ZiplG`$h6iX/rBKAo.3EFWFdc0L.VQ(i'FT,^nm:[1kW%[!]*DE4;592cr`.EhjY'=4WO8[0U8/W'rWqWPq\Gqs/F)
%'t+6J?+()EiXR"%57Z<YQ!rGfX<g>Ykn>u+Op6k%VGAQo[kVhk>Z"/hm;.)<>%2<7EVVn(6A1GdLBB+;\EkWncFn(.R*::AdLs9G
%%eYjh7%$WUNjTR6-E489d,oJ]@B:bm9PZ2tYd0Q+3Md0rW$RaFjVVU.,pKe*.`P=Z#D#i"e/E"WcPM%N""c77!E6gcQF*/nCD4'C
%G<2f>""dq$kIg7^-'8AKI!4>]`%(O9oaS9]3M38[NjOJ)$,-'h6&T^FXaAJ/PAT7P2UW5)"+-W4V81oXTmG&uCQPkj`W.U,0'%d,
%BF+bG#)8DL[*POcF]gO?SH`Y^\?9!tAI5c:@<ic%$2t0!/I,hNg,XPjNIN'\M)"9Tcq+IPM(raL4DITR4rh>W=JF0^REKu7c*\4h
%K]gW6DLa$FKQ&6O7c@J-*;Omb=ON)iI@l$94eahF=Q7jbOW%U6!mO7</-ToVd/E,4?n(GPO#uoTqUjG0KI)S#>l6V!&dDZ;k!iH>
%=/2tC[_s@;M9\X^=MbJ?Iu"]&OOq90DM0<XWM8.,I6UZ^\H8(a^eg<>_mg9]k)h[>&liO=%4<Y0\3UP-`!\$(B`YS/<iX?,Y8$$<
%(c$,0UrTrd%p3;+U_U,0B_;P5F9jDTk>2CkM.O+3^_0;/?NZTJ7'2!9Qq&H!""^^'0"f1S@#6(q70Bb^!HXS.Q69T'FaU%,K&9e"
%HmN1dl&d^7&d0fk*+15$L7)q@f0k0H/F,T(3o7&nV5YAA.5EAo&=--Uqb1+$$14"^KR271YVZO`!),8eP#_iQ#YS$Q;g?.l99l]6
%,ubI@':,T"KI$s5@0uBuKI)K`@>S"P=2GT'1LUSA`t=X,i#%V3F:nu?F+c,HV7Ysc\"gC:IPAPM\$ta7(WTAoM/jL',Qa:)d.Lmr
%V=U(#%*Osb'$S2)ns*lj'4X9%8m(T1l",5gc8<-"Gb'puK-j=*'&PM'3UfX'N@*#0=+[H44N/huRE22D;8[pu6$gmY]TS"1[Aott
%1q%gOU^(3T0PN!(*j:6./lsc^=/)m^\M+,h`(`^70Fk9S(&r)p,mmd(9^66C7ekI&Q+5EK*H_@J\/PV6Xq?s:T#cQ"1a@ENn'[RF
%KI&__[3Z#cl1F<`O/Ip2SYl:fKI$c*]>j7D@>P6[$+3ntC"NT\YQQu=%X;9.ZJ_Mbgp43<[c\C0KU%8&7h)[*RuhgVj<h]?3&1]h
%FX4G0VNo*<KLQ`Z0u+E<A'MH$J0i?[RMfK>$Cf3A/4!\[M[(eQ>;9t)""\G'`g^IgV5T)qitYsYb?(Qt)ISETD[\9:?jTjp9kOu=
%$@N'4-=@-/>/N?X#YTs4&5.pD@b0?*9tSHm8K8-'Idr4?XNk!*#R"ZbMQ(5n)+uHT;'tKLO%e4T96%:<W)8l?B%n1CAVi/uP`;t:
%K`d*-QD!FPE0MY$BOY"fP`FCN:NTF!=OL"dGUm>SZ4iP_;HN<P*P#*<=^%%IM;XJTZ@i`?=BeID&oKZfHoT1[lNhGa167'SLa228
%/00=p/02#^QC-(N7KGDnOg,R2<nj+&,u#K,>*;No5f)L![V@`1Wu9`;jVUXAaR,X]RbL':F<-t-EG%b?6-iZ-Dj-#>``V6SK^McK
%/CCq&@7;_E%0N5uM7_CJ[Z>0V]!2O_ot#9m74cj^\Ee.Gn4s"A[e%R`*D)Ra<6bba+V[=+]71SVLDp2jD0M$H-eN[7C/nRjJE27e
%iPKaTCH5eEN]>0g"t[Rq)."n020Gg05D$*2*^J?,fqVM"iK\_jqua,Z_La<%9#E6410eP'WTn"EYpMK7^PPu0dG1,18pFk@@&qJN
%e'?PD-<Fokm9QG9O_ZR-!U)<GEfXifPsEnS2"*s]b_2q$F/"gYBVMqm\e'M*e\B=,dOpk[8`5gY>Rj=LpcNs&OC:aZl08P?dYQOo
%Ya"d.O+#:t.I#CXRhV]==9NV1PbsNZ8uU>c-n.$Sop='gXpDiqIZhiN'H8lc6@c+1HIDCeoitrRWNi#TBfLY#StZ`BP.Xs4(.dM^
%BJC%f4MpC0\OgGD/ahDi.0__&FVa&#!h4;h;'*::@4?rsF[;4IF:s!-B[Tck1hi-oRe5C_mcGoC>q>4ThiUL>B5+9D;JKB_".40l
%0I-aamYKI!0BmXmN1_JRlV3F+U*U,oBe_&l-)n5h1:5>!;Nu^MAO7^!Ok4\QdX=SGfs+(1&YA)dS0V*:>C,!X8[<CJ<fj0)Vm')r
%QKm]i`G!MTdka^jAJ*`oR?.Q&Z^%@nhM3ui8Q/01Uo=P@l#s7qaZXt*IQ[4a#^P=an28\[<h^[`Uno>#P0([*@,5n'7eNimO(<HB
%$/-D\FBr;pl"\_#:H6c_XV#b8db/I1F>=Jpf'`Ek%iX=#GBD`^-'a$FNRWMJ;C*(8(0%*9`QYSSO\Rk-%4'Bd:3VnXUp`tb<<=?R
%2pI`TB\p*732@ke1o-rL6Q5BY1g*ATBVh7HToemc*\1!_\QRH\iP5a)8HR)qKL%r<c'FPfcA6Re5`kd$MH'p8"qm@(dk2!XZeYu6
%-3.cZHcI4^)"=<ZrC4+B;P$U9Sl>6VDEo$FZ*dLVT\7aQpdf`G*k*/:,cIi^VZAr4qg7*+AY]MJqqN3;`(nO.P:eBKm6qUAJk[Q)
%lq7iLOkuY-.Y)bS4jS#uY_Ye]psT!_*mK;)aZRFpg6PPso>j%+]I2Pok`O07cm,hG];cKs;V_,4ku%s6k'iS_7jciLqrJ'o&[+nF
%-tat&XO/`:Ukq3#TJ/3a7jqCpYTo4MS20Loo8"lF#4u:Ed>?.+9%5(l'ip2X4ef9B;hKCL.?uoim*qe^7t_g=fLu0f8o.CdfOsGE
%hk<Pb^D1[^"F?:HHRa-32nUd*;0dP(&*B"o#Kn,LoS="9bE6rK4ef6SRhsEr.CMSOkg<9@oZ6+>_XEoI&T=9PkRjs/\!9-0kRdtJ
%=r%A9W1;^'):Tl8ggQ,/76QgVY!/dSf^0R\ak$;,k/kd7e0Cr:lP"T_gS__Q5`[li=#`L,0[.m1.%j(aj0*5bO0gWQIRqg1WU.S*
%HA#S48n.pK6m'$A":9C-W\msVO#X>ue)HE!G0dp?SY\pCo=>(rLqO*pYq<Oe&">fso4T1'R7DsFbRIq76.r]0)tZZW[M>2*5q4t/
%9,P;9k^ntj7oKl\O]EF>8qLYC1O;&;o*@\c?+P<G>6"fs./ocn7oONf;8KF+F'f#o<$LVA"-4"SBC_(!R5ger*O2csp"=md'&@NW
%N4unCF9h:@61Mbo4ORm6Xp4C:Ei`nZ+<rJjbU[Dj*N^K1*d:(j?3$%`P(6&$%H*@s5nDfabAFrH$$\jjRc8F_o"Eb?3UfR:@GCE#
%i";J(*hE?Q&`>2]M72MD-jb-/C24K-7'31aaoOW1i6m$di">?C2"*r8].?:,+*O,N"DOY74Mj:VouT;ThjWARG=3CsA)*m!444RK
%^[Jf[>s2NN!$4jC-QYu:O@L(U!tal&T2oNfn*J+?-<R!pEL=lKNHT+o_>O%f4IU#,XXM+Tfi,,6Aqsb\*q>>kb[V]k+p81SN]\e/
%'pj_H`]Q4.n;)QQqeN;o9P<=OYS3'oX7M9@[Spe@]Wr33$md&8b>(1JO0\@dK2:@JM+?mh47UDA[^g2e<&hpO)%d%IF*0to=_HU!
%*Hq>;'[.f(c<8^Fjq7$O.`2_XO``=D2OR'm&[IEibTe.JE9YRk,)K*`/0bL=jI2<p7g_(o46Btjb7t,)1kgTF>,ig.W9EH2od)*4
%pZ^d7bTjF=g8YDLW.I/k1f?+W@)Wi#SXE!H\lQX0ie-k(!Blm*6j\0-_gJj#'Pfs+?o368oOnOmoOt364fXXe$(@"9_b'>4eSTqZ
%W/?q*Ae4*fg:FEFCkj(*lKT_[OZlJaAh]9J+p+-Pkg:#dlHrQ5H_dbUX,#eZWM`Y[O(1nmI.+mTci]&0\q=s/R<pd@i#^kM7V?n$
%`TLa_,&rZW'2Tr*\4::TVdDPu]u-kE'(tJQ2@p,ck]',M"?k2/TY3oNO)?Ug%@Y[W%;F[Z47YpnAsQ7GWdE6(8*l(UbRkZ/!Cq!q
%O?)3sHdQuU)lYEd]'iS,>KN$YfLE%en;7bVDpUtEdOV/c1k/60O^r-,;jR!"JhI4"dAj..i1g'<k/Xu^Wf^6F]jB[3>onX/#s?92
%fUF\SS'ijOEn$Rn@q!XtRq5Fm@g]bN4%9cCQ"rR'@PLul7+t3nFWn47``1j#aLLT3(@7u8X!7sSNK&CBs.IdAQ29;6kuruCeU),>
%UTWZU2s)ee_oBJ#WUOBIh:)QXns=$[Mg*[8JQM)eE1AIe"cVI_(mkin;=RNqEM5;O&WI7/ai6H+)p^4dTi7#0iPhVZfV;n\/Wbe.
%4jqsh<cA3:8-P4%^3/udnV:,>W`hOnhZ,Z(+@g:?r]oQdqB5[ESL0#J*f`3NlYqEi7=QS$Z'8EM%*p8E8$4>ahpmZh:TMVP#dDrg
%I;TH=EW&?[S#i4dpT.dpU]8\9:P;g.%[X(<Z65QuM:nU[!HZbnTk@=s(!mV*g1s;]Jjh.\0*s>n>'+jC[Y:%k65L)&^CEdtFBW26
%Fb<rA`"F'<'ZQ/#$<8YhEf\[VhO5:WPfSbW8J.pQW^H<WX8H]agOY7D*6]:]2d%d[h3]W5Wn-t#^E2j@F$+Qj:G/@K5:7jNAE,-t
%1N/l5AITIU@OSmG8jY+g';r*u;!_1EXYTs9[(t4WWg%elK.^F]+8p.d"aWb\]#Fs)6QM59lY9C8.f*l/TKLdrg.2:%N2"]+AeNVW
%Z336f6uk$RVVJ0N((aab;7Aj_=@6V\8s%#oA1X"ROqdd.Ca1!"o"_o8!jAoog7[2Q2E#kZ<uF.[7]f1<=n`.W'mgd.#2-7*Z3rc,
%B@;GaDX8XfYIkla081F*Pio2m#8]M%hksb/agUJtgMe$R.QMDr9a!^VSa`HS'P"E=A89fQZ/L9TlJA^M%L\&:S'`Wl,;B*a-fZVh
%8mUQ>UY.ncVd'JXDBnX=-R#'<PST2JTeLG!Ib3?3$-MKIe(?h:8WoRiQD2nBLQhkp'?)T4P&P^MFm@3EoS5!nc&ZB-of;/!\qIYA
%TTe7,o:L<O].-MIL1@);fh%>k1Q`K=."9!`G8-<Us!\-,kql?82bksNjV9C?8pC-cYMtH7/6M:&Id5-"G'WjE%h^7Q/o.j6V>L*p
%lXsP[;!cCMb9Vrhi]o;W^)U^XL\-^?dUbH%C[l,(rHfSA2oR0K"cfeG@aHKU4FD&4/mN8>NTKeDOXqIQV(`4Ncn[,Je]5jlk4#%r
%NLi9J9%`-m;Vqj4*%uCb7RYf'Hj557N).T1Pse#/4"Ro%FR+=?)H41)aO66Z3)T1Ob9_Yr'\KP?M;^aad8^$JASS2"b&s@@j0B2*
%:gT"r/p4>OVE2eXn7V!j_)>"JkcS4CK=+lWUR<Ti`Lg2GRIX3'mBctP!-0Q=J?%qtIT&!5:gEh(4ml9YfuDJVI'h\bp?<NPSi9Mh
%:\o2M2c(H-'oNke#@0s()i/3l+"I?=G>Ol8.1+D)R>(XF.DB!8Y$^9`o0A#d[2uGH``*X3Q#^e>VG/+dAa9%]45YTK6s%^'F]_lf
%Rn9N,%Q7NJ]1Rt/k[@cK9kN.3F(7Ho#u+_(2?I:Pa0;9*WdR\gV%.%:guZu6*T=4F9p/Z1;+di#Ve[Ula]m@1J#=pbK;Y,Gjl/*g
%VF"<=V*@jACJh,V[n$;5$=K5V=\Y(J__!Pk01'*gW6Q&Fd11e/E7eZBMW@cg<P5_=_pj)qjo`!4HPBbLlED%;.ns6dVP1+Hj4!&6
%fjguYb'O>kGSnq:T;J]%509W8QhA3+Q7q(:#DlOm!ufhm^:6nY1%;L>iRI/12,7n6HuD2R:Fin?I\5uRl'NA5P2P7Nhh$nub\3/8
%1CLA#m.9Ld1Bl9%Ti6LPcS92`DE3:f1(d9E5?gkJ)mF?`.FnDlHqaPmhCc8S:<:J\=Y-;Sk-+LJO#dHd`7+8/0!FY!0gbFmo,5(h
%UE=?>9;1,'>(<HL_gD?;8k`?t.0W8X9-uHR@A2>Q9\+&F;!#Nd;_J[FWp]R[D>Uh%RZid//:qaTFOX$Di`tuQ5&+hO[E#im-4Rr.
%<'HCYcrp\JAt.$Phc80uWO-FC3\=J=$P22bjaAS=FP;oWVU$WVV:_aPX7Ksc:^M_+;b7_"epCItJj#ZqQE6XQ[etb5=UdbKJYR$R
%6`at`;jeHse>0f!W&fRc7LD8@#F:g>\Qgc&'=,lGc/M#;4?1mG/#?>bUUH0P1pFm1baHt`Yh#71&Pjj5bXo'"5p%uo?hEr9^&=X'
%2:BhepMMkqPJjo-Air`V;mGI'qgfZD0:T6q`7pO4OC?82C=do`W!i8Po25cSrJ]&Xls>R?=fYumf7DX.CEKR[^kQQ%G(]3/2`LK]
%G<B%VfC"R<TmjsQgWA*P:O43edY+V`8adR8eKVU';fhU75:p#4\(j5oh::78knHi#+EP\>K]533CW0$!CX`l=qSa1`#X-lm)F!sm
%K4`W^Ci3B18NFD,%GTdBL-*sK3bE\(8\W5TYDg55O0o$lJG?EKD`V0aZE1;8mGQfVDYAiDX<p\CSd%2#jF8i!hsfC/`7o9mh-i)E
%f!@)rJC2W@_I[@iBM<!bVq!Bj[(c14`N1-t%uT6G[obE'Sg(rE2rM:"&3>a>qqRQ8-<IP:Ac^/EZ9spe/I_QRr30tS6>>._%Aeu9
%M5b*"eke'RkieIm9)0hPC6OS+Hk&(6QW[0*0MP?$NJ+NRbc)G)*7h(Tlu$=8#)lS7DH9"T`Vsu#[/03FbVQ>j+G(-4MSo-)6a8sA
%4d:HZcG%lDAF7<kkNIK'h>($u^p%?<U@H'`gQdAI[C\"Z=$bH;WE;#`P7c=[fOG)<[Cpb?<;huB$]?lb<j<W_D8Sbar51ABaOXI/
%1u^1USAKbm3I:J$'o/4O_o"aW9WY)XB/+1MK+f#SarlVBL^=F;LVIT$oMEDA>r(5<<M<nXB@K?6Jk4j(<Z3&$PQd*4@er3/,M'pT
%.?/Q(LXB`_.k@ca8tk\KS]tY=HANR[MWU+XI/18YL[XqP]/POFLI=O;f597Z.9E4Nc3s'mjlq>[Z<1"fD%3@Y7)/(fhQ2UH;)RG\
%d%j:7kmGnYGO!(8D3d%bo<=t%Pr5W=$'jLY8#mG;Ei$,jWgYr5&]B%>&96ufF+VT4gmcLbP,Y%9eQ9G4G.tYhXgd'I%8)'3GIDBT
%"3'it9IrQV8s%FAHg"<^f/h3:/g\&3*oODG>q(cKf+D3s9ag"Qn8df9glX]5+0eTm*2b6p$*0km211DD7T`\\>q<4`=L\cB:SK'`
%9@YVBh"::2q_T1XZKP2L5MN3sEjGl$0Lu3te\r).@?#^/1[Qli)P"ll/]$f]>-0B0rpp'`W`R'U9Bjc1aKLYI_fpLOZpqfY<O*=H
%.*l#jP,$O@1]Q:^!fMV4a2^H7ge`CqG$%Ff*I'n4)*BblgR?:\CuhQA?XC.>^#5a]6hP3";Wqk-8W$k"D+4*RY6/o%[2,(7Ze:(.
%V/PFo-&^$L?!pa?.>pp!.,'.l[f=fF=tNmu[l1Un/Z,-V:7eI/UsQ`S*!2Id2NPG?C?+L=c?Ug+^9;!X$RdR\<TQ(U;Nblg*f`kh
%]f1S8gc'AKDN/MI6h,pc`q"BtNh_9.:ZlgqKr[%_b#?$FKl5eAfYHO--JH`]<j&.o)e!Qk\*H;5BaL8-OQI]cgRcP0@G31ZeiN.0
%]1B7@V7j88B()Sijf)KpK2=.&5pGtchmQH/<idZAKe/[\)\)DDW0)H@h3NFf47MjcqLRGN;*C,?E78E'>@UX3#,+Ao8R=;J\T+Y#
%6RXIR.R-/B\kR#bJl(]8=q\-N$d)B4]t)'6=VVUmO6@<mRWt(#!A;p1o[<dY_S7i!ek;$Yo/NgXQ([GLXhL$Cc'7-5(<a'5-el3:
%D=LBjk#MFb,@Pe6#qql8ASKbI8t]tDee]#23.J)OnNU\^Cs_*qaZ.nG&D@Zp.o%Blfuo,E6Iq'je-'Q7.Ap3gQ:;heXk1I_?8iQu
%+%MiIR$UWNb*$jU3t4Wd'_Mpc26MU;:,BfO10rD*W5LHM.0]SS<DCFcY\ZVJIUJkLrZPp0)m;R<,Uk=b*:">V"YD*M=[oY4:Lts]
%BOO6@!Eq<00ft4k*AlS.3"mVRTi4jJL\n,&`;^]oqGKEcgZ.O@\^B/0RcRtrV:q/TF!4Y+o`Ck"Bg0^dPLIoCnMr1D>#plW[BcXF
%/^nb\IaRGbF:F,Y>@aDijqjFYVn\j,k+M\D6ocjOY-^R&9`>)m.8fWV+@%]:8'3abn#2Q@gQZ4DEA+_%'jr8]`T<cf<`/_lhu6Qd
%NU5D.-e/S#E/WM7Q-_mp7)=OUFdePA?h45T&%#;KKO@oZ<b8J'j.A9,D:#"'%l\UsMB;B#I3oIT\PSW&=$AC(3NlY\_*%4IlAto]
%,%rD[W;,EcZK`AX\.\UfJK#T7-;%_+\4XfJ:fU+G>)btMN^B'7Q(BibVNk.\Uueq=p%?]X<@P`(pg2KO,>sfPI'ep8Wqi$XW^0Xt
%@KP9LX*K%/;qRs4;TY]U02?;O:ja5:@o4$IL=J`+*(mo/0fE(_P3Jt]#//bJUHAh0ZHn<`r%>qqkMS$J-.4PSF,HjN5ln'ak//(S
%n)4!KXT'\R@KWVE9I%8.B'.gbT9AG5j$:T;V,/]fKa]0Jg.SAH>g^JZRS273G#u-O^Wd0hf:Da^?+`V-6>!XpoS@6^:\-^*+sNju
%J@*;:ME#(Frg8'G?PHe?gC7&A1GM(o=Qg^19$\%P4@ckU[\;IdZX\!^Xl@E.LXA&"Q/[e"()qBE2&j[BFa;0>C>c*8<ol]#^Mi$[
%7Ceo$U07s&.<Itn<<'BTZ;tUjFSse,<<FIG')ViN'usHk^gJB?_29T9fYCM.#LsX.C>Xm,h#:04X/$:D8"'/mOt$mXh/,W;S/mqr
%.!0JAqKqnJ7%s+/0WD^\WBX/.'uSbG239r/##arGJ8CE&<L^bs[-1Ri!_\6$6^>TIjf@HskRX)!c"1P@aAl_p\m)qfl@\b2W>5[W
%23JfcX]Vq8T%kfp9fG]#D8K<_XF^:/RVrBM2jGYJH`OCum\emTA?*XGl=11R.MPJq[()UX.`i3&>hK4RHs3bY#Z]?G`R1-X<jf<*
%fW%5A?D5(=C=P#69r%OiC=P<6/&&!s>1BRu`n92EE4+,n(I]OW>Ij%aW].'%iF#Q5'UWD1To'fU08?2&MIJF?3_kE&&s9bt$X0B_
%mo(ZYX6)=AkZq%0Z@T@hBU**XEZ/eJ:Z\F!'J)]cZq?3-3csY?<_9a=(n[bC64.jWg5g"?L2rjfAH`c=`TU=3gabr\_[79h:SA0%
%5$f>+#B*M@7[7nf*\ZLt$Mjh<WjY;R3e]KXXPiLU>%Q`,8$sZ0?%)@lE@U^/O3VMppX1;0>S,4G2JAAqVMfDbec=Kla=UKf9cr1i
%O36obDUlO8G.=PPYEVPB/LUrhU9quMD>DId`FRLd%X+A1I$se\(A`^6Us'r3K;>)D1=0P>M+TNJ%^QDf0KlSnIb3R\Bs8pL<3+J\
%Qu,A+#k!LqcdAlYC*pb[&^n?l9sSmS1oh:TJls6h<DHD_CFaG.V:=$H&OqBib2_AO,8mBld86uXF!FLUfJ#XgJ[Qsfi%OCs&Gj,=
%s306#A`om0McMS@B@UZee;UEeC)*_Q537]ETX$1J5(!+[@P!^VKrcS3V4C/h>q(Yb9-O&VU/J&K]8ZoN=lP0["LN/0p7N8WFA8L@
%JqWD)m=j>^C.]5Hf,q-N$>Zp/a9<=V<+U50^b<'[jMFkFR2UF881\8/f,R,E3tW7`W`bU;ajf]:CDn-?n?&KC-$W96i(A,@T6L0A
%,kXC/Gc@pKM_9N7LX0+,?VeaCa4XbaHP5r(L#K[h=m;hB(gT4#V*nKL!WPWJhL;Ys>:FNKb^C`&WZ!g"mA_``(?S6$iPrsBf3+Ik
%!hJ\pe8]n]N:`nUY)hrNe].VL]jQp;:&R1YrC^"R:6C=742TufQJiL=GTL(I@-H>/("=.ajbeMk'Inh<rnQ8-#6A&mbgd4$%0-#_
%Zp!KF%P(agS?!..7iPFSJ1<-*PDY:qTU2&8JUR7*JZ]^0l-J>-Xmds_l.\bGc@T,>o97XpAqI1-,)+.mng`e*gZ$2.mK]ESX)560
%Z/Jq%/tcB=CL]n:4<87JWd=h7k[\aaDQKn!S\6'VV5(Tm_>m_YW=RMTFPG`QmV:aaoXK<e;(!3s&?-20"h7N(GC8.%`o#*3][Dk?
%e2#jHjY$o\Bfs>U6`!<T'<*NY>m:ZmJS_U;a$;g$(lkc>kp#NaNRd^'I<LB(TS`g$ip4GBRVCuJ@&^0P+5FQ7@<L/ca')s8p1?)q
%l`kJ,_Z9B.YJG;)Vcr==92NDa!Ea(C?jD;4J3&t&Ed6BH(B[h]d\E=OKbKT\VOc_Z!@\`Z=8EIbdd!Q(Al?c03_C`TM&bD]o1Qlp
%V9C.'AS0KN%,J?:Un:0"6hQ"H`3kW:X64YdYo-D:786[39Y,rcoj)5_=tLIYSS'<S,-orSD36q79maO!?=l23R7Xq,UMlbRNb8`K
%9"qIKAN^c+XN9bte0bS<+igqBk:,7S)6ZZ.R(g0Mq*.ncV(YbRMiAZf_39&<+cabtSUO6rT/Bod!%+:LKW(WWcXpU)$YFBD5C9K+
%]\cqUhn'o;aJ!.>>;P]?1i]e,1q9b;?l;E3h]6i`c#]<lJ#F5bg%"lS\Ii:RqFdA'_sb$#=7TWP=hfR"]#oYdiFOTrS,YB,O4]eB
%HPes@R/LM(2_Mj"Yp@f&$@e$r@GMc;6YJ.egk5oJ*#hb57NMnG[A0HcZ?m<]G6Wt;InG*R)IH`$SS<^GF5'rZ9:(s_X>Gbd.rMAh
%9#^+8LAg@BQ:H,>h-AY3<*K<tYcMPQ:r`=EfP8t[GFYZoVrfl<qKO&5P_n,Bie@o9A9Pt`=Rg6O\=@ei-'W"po`UR/,h3'+\l1gI
%5p>cV:B)&Aj6&TFF\@@UV5Til1/`\IokeUEUc3iuE9dnF74aU?+R:Y+*IPlM9!Bj<=ACNL'7+-u%3;5Qn6^D+<0l,WS*CRN%_PA/
%Q?Ieb.#UEEgO6hR;q%HJK%ZF=r=Q$NHUDdqYQq`>V]11FGm,mN&)Y'7e@&2G(-9cX#an-!eI$".h5Re\3#10&*PWCeoW1lUbf5K!
%2t4W;q`be4<C'HV5b9ahF2N&j4p^35+jf8MheQXj.4Tn2U.c#/Y1e%":^MO67Y'`d56_uu8*nXX77^6PVhs\JR;1X+Xfe<o)pBR+
%*S7.D4W/+Uf@F;TH@2L)7+Ebo74-.Yks2"e!ISZ@,&Q*fa_Xe2>7jH+$JsCoE!@bmUeqo@97S&o@2cjQi$p5IoN;1,:o[C<(Vu"C
%Bdg]diH9GU09nN>\C)iboH4<ugJ5^:dL@>,l=r9^S9@=lEB!H77_i+_01BGga/#$Sa1q4F4:a5b]p&X4Lh5-n0tkZjn_P5795^Eh
%6=iVu=Kc1o_Kle0fo%Nh,o,%nAMQm$n;"#m8T1HV3qgRle8/?3`TVag9!g+_`+LM4:-YVsHM4LI)rF;PQ47e<<)Nb7QS3ke1qsqP
%EtI89J1jr>4E.d=T4t9Ba`2/:-fI_]PL?:"K0"17*-Dk0)aXMr3P:Wk&\bPEs*'NqUMbUc*^sS9bhaVeC_r">hGFR#Jeq:I<+.AA
%RSm1o^RD8]Age4,i&s]Ion_n\4=K!p4<L>rG65K8AbR6ON"!hkb^s-_[*q<`T9_Lnb/PQ==3K6"Sof3OPS=nK+LTb?f/AMJe7">k
%QUPi78p<Kn0t.WlS)!27Qc5n]OWBYN[:lFh^JVH+PL`)\Yg:Tdqa36L=H_enFe_nJc^+cHrsO=Tb-#7f^1`2+ma(1;9$cN(ISh^)
%Odom'QW9%&'Cho(:6/!m?HOjjE0qNR$G%;eFc;:iU$?"]dNm9QMSdG]%ssEu<KTL(%4aaN-bQu`a@FPoCD//pe*=L9cWSSj.bosI
%AbejS7WC8ge@d)DTN3$*.G)71^*HY7.+ns"`Q1-S-AG?V'H4b49Zi^O6R+!F=Tuuk.>_P?dl!nF3UClAaO_POWh#jK3U!03M;Y8C
%RSA>_+t9CbflFO*O`\?/bs@iGo3s$=O1Q?/ej,LYN.WJ<WtV_h.!Rh#<N"QZK+^\UnYN2AjZGKE=4dG4a;JlDe5Hj8do>N;1g#X"
%Um`iWg!*^VY*mrqH1\&j,EdcnOh-IiMX.s&!-A61WAd_O.klUVXt;,P33)V`=HZs<HUDB@bMG^sAR#n5NaTErrPXEc6=qZ7;%L?n
%H9/)W)N:Lp>D&/sq<@r3W!>AsHgH\;N\%4KF_/q;LYZHmj\U&6,J.G]q&NF=MqpbM9+*Gsd$5(37AhQudG&J5BLK)qW&"d1e4"I^
%1"532Bje/OXR?)_)N28Vo5ZVg2:aHa.2t0B?gNt+<O9SP@6IeK=@+gE.IX(o#9gPo0#OI'[V!cN`\M:E<cVoRBD?,1a(W<'OGTZ<
%c*!.mc[KQ#=T1eU'h/Z^P@$Wmb2]BTV-2OKEJ85JEI3N@gAR/`Ec>HPE/pl0`iS2W!WjekV'<IlUM\(*Mp^E_=\P/%9iSJ=Na]Vj
%9"nHqr-<3mm6e4:_N>`k0GP\VMM`.*)X6td@7L(b$2mbFcrpPoGN`&FhtC;Y1M_!(l>EYU<WIJI*iPh1_NOe:UD\(Xlo`csVJq("
%osAtjYu/97TXVE$E.0M=cHFD^X;1$+H3]]!<CXEWAZo!CmBiDB_$D;7KTb/]b5Urm2X8lo&$&d#R1YM+a.M7>_G[8V4/9ao"FlDW
%`4-U8(:<"5X!I^Q@g.)XbOi_TVt-t@NN'"IieZ+4G+]5<hEKsd;$c`ZIZ#dl[)g2&R:Y5l&UX?_aB%U5VOV@p^Qd3JP_d^",4eRg
%ibX`RXlsUe))]`te`K@f5++GXUD,--cX6mMH3?0D/Ut"F+PSj0=(&@Z16#\KXuN85qMo;2=l*/m1CL;mY+jnV,,*a(17geb`plVu
%Ao4PY$Xuc;'<+%O$X0f94GY.Y(AWli3+;CKR$jZ0ghq1T+E1*U$>o,*ob.if2Bu(9>u:UTg,2eo<\5#f6n8WXIJADD%Eou[2(9#D
%ctD>!63_:/qMq78b$ojgCuQ^i.>(F*=JL64[ccKSPCW$,6Tr(@6$Ia>^Qa.YBr)'[Z>%qP_jMi_TteS^;)Z\WdoB$9BT+F6!RZ4j
%RuE7nF3FN5NN2$Vp*JR4jp?oXiSHG:(9:.;C^`/3gR96"X&<87r<_8U5?4nM5?B\[gp-Jmdd;C"'JNND?2Q[!hrQiL)8V6m%2T7C
%$PmIm[*9jTW=5s6$PeSn;a:@r4`(Np0(b$edFNH?"Uf_p,lZ=)7&F7j%fL9KJM\<?+4?0fb&+$p`Vf51$NLDHkuqjdL6Ph?Y_Fsl
%0P`HqoE]k1E[eGrItu9M8H&RE#,;g(b*l"NLPZ51&qF8+aQ3:+Jd_?p=\bRY7`%'kdc!pjHSa9"4V^q#lD_#XnVF;q9?-TjL>2pf
%WnEZ3W+UXR,Vp"P>i*N,OR>Nc[CXg>MRQmM=10'mPHk8nUm;Tj-73OC[rKcj>.r1[2KrKXfLR'f1;1skeopm>5hg/SN+&BYBD#aF
%Hqp_b0eQLo->r`iBK]Gk]W+Qi*dh9p]4C*oR+-,(]p^j'@BS\!,;e(_)qn#kEd%7VXaX0i<3I`<J,?2\L,l!'>9CkCIpCaW1et`6
%`/'<Bl-AEEiaWJD6_,atC+XDWk9\L<D":uq:QYPIVX^LI%:-APXje1ZY`4C/GiD(NB\s_>$?i-pVajmiI[eCG%KhOO&;uZ$YWRir
%Uf,qOkOYniZOWmn)?fK>C`9LnH(V!\7'<"pjhN4<=S"EjZ,+SpgR5C"GA-;^R*UCbD-X>f0BT1C"Ls`'#\(p+)UO4RoM>)01IQu?
%K[0I8A[\O9)aITHjV&&<[7jLX+5fuD9j)LR"r&#^!U7iA!pYoq:&/$^>Kos>fV#"e?9EQl'ItU(Mk(ecC`$pmeIYRg(8VeH#K6.?
%[qdR,P:D;jCm0Hrb$\""lnG^S;N=tFSWjErdo5oWW&jCP'jo'2O0VfG9esI^ad,q[K]5XFY>SO/[dGYI6#Rgq;/4K,#&%4!AB;4#
%IgdtW`PR`UD\Yln&'Sg*&*G/@]'LlX2S`EBe(uZhBE!bY89eTudH62ZlbN`Z9ls""d4MHf<I2#c2SH5beWXmiRW8Db:<o5;_MQ?h
%[C?dH7j)`DSu3O9qmiE?L]ElbN:YLu02\h"\6&`4V&&k%(]h-a`ZB$LEZ/hS2E!?`EV:f/B-albEBSk_aK/(r2PA\*$Fu;a/sMT1
%1cob%a-:B`^f(OO=`^1O*r7h's6V`5-BscPmI$@8T-b3lh%j5+W2uP)M:WdHBARaYT<rcTI6+WCl8a9kUhK09c%-^#2(qC[;RA>J
%RFj7TL[r"!"1qq]4DJRrOu$k0@4KMaj5l#H.NpR&*=uI4#5H3G_q_oY;LH3,/G(W-9r;M;fA6F/$Ze(rb.K:n(buS-B/T+E'V6=M
%jOb7fh5$FDC`LrhaN>BdEOW)po4c[)&E5+\\a@9MJ:JXs<PB[b00?hIa5,6YTm+8+f#H;%VO)O(\l:>@[&UX]aq:[_a/2+RCCVsq
%ol:%+#H1F_ZbYfGfY4822X8p;kL#n"^kgP\p!NbU-.Z:;gf,p_[^87j%o%$ZK#T`b<Dg0S2O\bA0s?A#q4hVod]hKa2gE!$_Xr[)
%@in^_a_#R&`DrfbM@q`V)dD"@$o%/`l5#U<%#0M:)C>>f7nq-4V6ORml`'^/,*)'7j7!(TDJQ+sFrUOS(>,>)!uYUJYO=0cQ;IFt
%*8BQ/9`?J(]S:8Z4fI0f3K(0(KT>:r.gi=pSPA1'#Ba?2_?JJ5SdRTV0OMN[P#teH@Z6Q0(?_hLU<4+<ihd#&,LB$pQ(CXM:ULM'
%dSK0o2Io;R[*ZacNZkb#QGFZfURM.!2[-T1ZLdT-17_TLHfefECLis3c7l)Y)&0W!N]GC((nH"1eRg8>XDB=OA^/ujA?':shF$Lq
%;j@PND(n(1nsE%M9c^[DC3MYiBp:!aqm[Z4Pf4]-C`S+jn]''6KkGoB_HX^@93Y@+bZ!\tX(;fSSj$$S+QLptUnLi;Pf.mQfg(Pl
%N>?Qj`tg#apP90t[Mad401kN>JNgUqiI=8K)]UW`X4UW]Sde(W)%0N?35?TSU(WLjaK<sgR![fGnf^B+Q-mfEY8b2@p0MNjk=[8k
%PVR5h.]-XHfgo^RCXoPI80]4-MlEWtFq&R@PM<X,ZdNYAI*o3)Xch6n>4ul]_J8THVB8bZ?[QNk7WABK7BLp+G1o!*&8j<#ePa[j
%'RGtNk7k>1Fn6Ink;O.Qb3<.BZJ#J!RsA;Z.5U)XG4p.j>\mNg.Dr'`Pej)e)W!`%5[NE\n"d(IZ!/.VS,f[CbSd(bYLcZ_VEGM0
%90Sm*elrun$>4M@D/b7"5heur]*3KJmD)%QW&7D'/#+/BOnRIIAZ55jBp^0h?ESN\*"OM&UJD1PDVGI\&kkCB"+cg`8a!uIYDQVI
%M_2te@n@rUfqTm/)4#O.aFTQsjqE=5g/Rt\mFGO&XDkhTM!&F^UB>=)h.T9II%('nor@_kgciS(fVu0\WVGr4jODV/LRC&6k:%@Q
%.1f'R796;F(/$j(\6%#t9?-6.n#=NDU!h(;%ofAYkoU)0<!bZ%k3(9cg-%ZO-*pVDSl$8/XV7AVhfb?_ps1PNhAQVg-\.2eh-*Kh
%L!e&oAr/Srdr@1U#HTVsJJD[?g/.%CBk?=l8Z!Z'&+&_YC$s4q?)B=>\Y;9\Ca_*i;-KlU3n.p9o)FU`Usl37-JU0H%OLuEg?jVI
%;l2g<Z%"b4B2crB1g@8)$<EL,/%pC#nYt790s!PtW#7gR2bPoL_G=J"\8]\h=F[A7Xfc-^l93ehM)E"<0am?sct<!<(+T`!CpSis
%Y?lV,gWL:!P;3Vr.Om)Pa:ntqZ.Pp)R2uGfr35-m+5kt^m;]`6=5,<0q_S(iYK(L=p&9f@_Remn(,</,rW&MRV4kJ[bH>F[$t!_;
%)OKhB1jR`oL[sohdc6WW%huY2l9c'=$Vr&Z%j>Er4n-7cX1eYhRC1S/8\6n7RJ@WG9%&ZA-IYN)g7H2aB1cAMfVC$_4BZ=ZQ/pL(
%0[(`14,*^S3n.K=O9_WmqBJrTVE%bl6dJoZXF@G"9Pu$Jb7>T;Pq/(LP^=1H\0mYD[2bJB5'0fpbu]8p`JQ%c#!4&JX;OBJ(<$b.
%V]Z#kR9&F)?&qE8;]U`WE"=1aNU"JF\s0ohMEUsfpT6lBHLIaNX$_cpVfUefTNHkJefOR/-81N]:hN@6B"-@.=Jp)=1WAjgSkpoH
%P.?fA`']\Y<m_87>><.d:"5SS6/4Ob/suK-0i)&T$;!kI:hM+^k(.'tTYo"ljJPDe*VU/C%b\9cg)5T*c(+@[FjZ[q'inkXPP$dd
%[sYOumnC$r\6W]^Le"m61WDUGZ[tAHLJ32'WSTFT)%]>reVIU'gJ"l1Xj"g8'o#tk=&!QtfPBaFR![Fr'H@k)\.-urOj>:W#p8`B
%"$6ZRZ3d<@qn>1uW"5@4T#beD#lKW;b<;.7-D)=pRG6_\*A)!?nG>:nFO5@Z4:4ZkF0ADH#HBt?Wb<_ElY:J_FK7I2J,=ufEe@1Q
%82Zi[%>Q)KFA+^l`^!b6Wqs!=;1/MBV[>a+/DEQ2<;@*J3@g/Z?cRGb/f4a9U\jPlP^>?fRBg(_FMAR\\hN_T0a%lQR6rt"k(,,7
%r0jWC:\DocVl@Dhk;ir87naTSb6La@KuHlG*CeBtJKUg>Pb2N%Iedc-SjD^'N/+*Y$$^+]NqS-&r%[\US9^VU(<Br6V9Hqf.U8Y.
%$6QQ'KSU?6'r9D%lURbFUY*=oBMK:2"s40),-d2S10LFFG-;2eW(]7@ikuV;]fc<d/=&W.\^d-@ps@;//uT.h((Aom8l%@'2)[XM
%;pgc^Ni`@RZ8kCQM\L(j2.Vt3OJf+*cA\'C"W-C]C3LLA%0\P%,lmG6^O$YT*ucV&\(#_KZjDp6'(n-u4!s,IKqg;!>)8u5*t$O>
%S&bu^U^W^B.\ETt06M>?q2hSQ4E6e%l,m.\FpA\I2W`W81iS?$8?FQ\`%&1=%LbYL/Zm"@LYL?A:p-4AB<d8h/$)FnU&@\qeuku[
%olQTRc=7mA&uZ`/9IPHfft_=Cg@5qZK'LF(M?W->aR4QWK<,X,g:#jNS6GsQ:#t6Z*_JthJC4DNNZn/A[['feh/o0=Q2[Jh[ld=R
%q9r!ukAf.T+4`ouYV^$*m-\@F&S`0>daXrX#;V#heA+VV'[I*/D4K^]Q>)PW2QA^!dYL."q_XT?mF<DV;7Ar'%*Gu3c>=:M&+!.+
%8s2VC<Dt@0##j:;_g6@%OeJfJE6f33os#"-RNgGAf+t3p!e+PNHas);$=+pt]dMIeks[A=!2H!<89he;&P]b&puC4uC5PNNmH3B0
%MA-l_`=gLgd[NkbY\KXigm;NJXIp(g<e6JM5IL?l^(*9<0L=8>(sl1JE*GQbJu^%bBA]GaknC=,YCp1lI]eChC"Zq'_'+?TSU@iE
%hN#&`FHD_u)68=C1f&sT9JL?@TargCO:*_l&uIeG39"/<OA#+=6eNA5:'YN))]H=@[.a`9XnSc\Q&2Cr:)0tg<&G'J67phEe"^>(
%=DJ7bfSH[OBpk^B6Aq=Gfl1`leq1;/[A0X<]QfjL_SEDUjD\b>.ef6)<WL^:DQ^!R`GHkRB<P#u[H3=^2J!=mE7h=-`91B=oprse
%d&(fFfP#`6DKuGD:"X.5)lgBI^B<LHB`>c?Z)LL^#E=`6TgWCcbUh/o.b;2g1cF149Oh!CAYu_H=ndQgVSHuEZ(WE]RiV)hA)m.n
%ND3$BZ.W%G7:XeE1t1+L0P)/lSrsnL%DNJ^`1=oFa$7u(._2>kNNFhr4/]>$Tk((+Z*&?#fHb)J)fo<P)i]j6fkYuafT6c+%;#0k
%`l<f,RV?Rq4N8_-9iJoAa#%LH!$f3lCurADND2c?VQh^!6,,>2Bl'g*qohkUN=BjQS&WIb+OSiG>u*;cU3ch1qPLM@Qb(Ss:_Ja^
%aq#D[j@!LAOD/N/5',C9N=B2lU9UthfkG7qfP,/#%2t`8nk<QBaSph3<e+BA1cCgXFrK,4U`2+$UTm[,R:pEJk<EWr6EXr>>>\&n
%r<6[u9JAAh"Cm(%IpeeT_q:'SB7mH\aY:/D+2;3".Z_\*[R/npLTq`ArYrjXbOYmIX.YV7(`TU>D\sF6K!CaDc+UsGhW+0q$+qNT
%j2VZI)g<mMfZ7Xm0K'ui0,RoOHK#6@Z\N[YZ.Z2IK!FR2aY5W"\TSf/WQ7#WNOHG%@oK3rL9Y/?onK`645F=]]F>1eVR5%b`eKjg
%Ca]V0-KPJk9lbun8]`YEMKI]/2W_n6N32%I[)(DOp[b#&b=Tpk@;M)_N/[oQN(qG*(`V&d$-$Ss76?Hfrm`rdXhpR^?u2*[^E(=k
%7FMba)kio-A(*9'@;M4KM";S*-Fl85#%L"l0K.\mhCpk0T?YXcA#mQBG8M:A)oa56XlHo,N"*h/"Ck@fiu?"8prZm^#%M-tRp^'%
%ZGY=\*&+f^#tVm7@sE79fJEY@(n5t[^!@/-[ZhfP[]'I@j3L=O2@*i3(`Vlb$-%_J`Wfr5e2N=\Ee^i!THkJ89u7DX)g.e[`eMrG
%K!?mR_:U[!@;Pe#$tIa)n-=o3(:+-RX0Oob0Xdf'(u$B!N(oQH)9.Ea_]-TrWGUO$Cr@S4N(pXs%iCeQ],AUX05#mA@3k](Z'!=&
%0K*P%"Cop)pB/D^3Q'LFA/JOg"Si42PFQ&t-jdnJnq+,HOpX:09uBqbZ+WZT26!VJjTg`=)9WFu;jC.5Z,q7S#E2AtL9]]?P[J<p
%)nfZra9fl+W<pSaa1l&!g3dKLRl7kr`hp]@%iANG]5`V2iJO%2D!Y!U0K/X5$-$Shh$%<Khes>NEe:Qi,T%KXq1>m9n'<[GrVd48
%>KRFc>ACt+ZkLb>2W]UA^t=kScS.6pcQsEtWkj/"fQ:AQYlP8.0K(?.D\u]b#1*h!VCRg<CeI>R[Nu0;%E"G6@r(''RUL%'L<D8/
%'sV<egJSZCD92fgUEUu"fTaDU!FsT>aY:.]aqp!G&!Jr2%6;8W:_J_hNVX%&-98urUgt=3PTMS;ChXQA%Jk0uZ.W(IK!D9X42]^0
%E4s0A2J$MR/NKQZ/CJ_ZRsr?f(n7,%$tFoRSR?9'ZGY=\*&':$$jjqn3rTRudh@jOChui^N,AML_:Y%n0K+>UL9XTXo7jO/;4M$1
%%;V=O`b&75?SFBCGnQ'18qsTBq#OtM'UW9E;DO2j@pUiIKbZD&9cc_@`[8Hj2iJ1niril@%$4n691^hG9m.AC`mbE,e!L&aZ12$2
%N(lorZ!m+mL9[/Z_q6q)_:\*-IDOPmD.OQRB'0S4>=sLPD6h(3)B8\c`eFNR$c^2GfjS^L:*g`]UEoL9A&G&j_:USrA/LeD*C!qJ
%li[u\9foTg@p;PH(oA9,2MrRiN3/B8$cYXVG_33.UOBu2g12EU(`Q><*QEiSaU?+C]>G+ge"iC?C]Jrk0K.D`@l%\OZ'k07Z&u.a
%0K,-u@mbOZfVlGR0K(?d`[9XRA$^<s%V#TKQ=+OaT/V_2:@G04Z-g"H?u53#hCpjnlNtRCapqqA<!#c#`^]iNK!D;W0#Q>c]^#`2
%e".u(fG*c"0Xa^/@;JRH(gFt;G_`OiSU/-)o[m[kRoVur`[2de+##Up)9.Db=G!eXg)F?P2TZ9FL/l7uA)i(uN/dCg"Co>N/A]u;
%bB_"X,\Is`PRM&#@Fu)-)fgP8EU"$Dj3um>2Z4L"`hpnE$tEL6K!?mf?u2,(DhkT+T([oDiNn_UC`7%DN,:!M`jXrYZ"YkYctiJN
%I_aV.Qt7,(?-F>/[OF:sD92fgX&7Oh0K/p+2iJ2+_:YPo(n6a30K([a$-$R;WZB*6nqOD@c7h-rO;!SThYe7LD2mZK5WLME(u%q$
%N,?Z;A$bXV@;L6?I_aTL[n8>4_R'WhL6]h!`hljRK!>oa9ea#P,T,:!%E<!7g^V8Xc.X,V7aZ.+Z!ju)?u.]J[k`mO(UXBU1DApl
%`b(fZ0,U/_`=-7O@Q;3VQBGWl9+Df.?BGY+e*HX\Z.YAT_q5ZqatU9#CbW:lFDd7>Z5LZZ48T-"`Y4_ICfJ=?0K.e>2iLIOL9[Et
%(`TBe@;Ih'lnC=H)9.Cue/QE)?^G2;Wqjmn[\Y5dgQDZY-6KK$A(+BS"3.494i>qE=sOrS-M&<52TZiVVE$iXfG"sH_q8]g^L1l2
%:(rSg:65/QA#o;!K!C`EbRS.;PT@cPjFFKaQCD8uqU.<]NMLuSZ!gj_*#jhGjUG]e:,"RNNpJGXrmE`aN<O$JYu/bJNXa":.3"4_
%W=EF=A@*+`%82q((`OWk"CnM"aY5V)#_0YBn77!cfW7!Be-0>lR@7N"S$KraQ5hS:D)sG2%;Wg>N(jC`L9]-0Rp^&*8MIS!#E2B<
%</.[BZ$XC@-lki42T<KFN"&P")ofn5P@/2fo*:4K@@ms<;\N#_Z%7OR_q:FFRC<:CcY/*=/LA6cQL$:`g8&m/)j\`e(`Q2D$-&hP
%c4"30#L?IZrC>[AM[mr>@r#Y'_:U_$_:UH;IDa]^$knRo6Z7^al+6nFYotJ3)qG9$`[9dPN/]oe?u/^RN/\\3)oeaf.)FO=:!#(I
%VRAFB:%?43A!;O3L9V%Gp&i=3./+3];s5XIfG%ci!Fq=`?u-gl_q674J?^7F(`P3""CmYd"3*f.-,J68cu+K@2/T,F0K-EU4,cmR
%Xpeg8;u6`.K,KbYD!Lpn0XaHJqZUJ..sQfRnQ5*32I5Z.N(n&=Yt<"j2E]jR0K.p>$-%^_?u.60(n9RpA"t21_:Wj`I_aSM7nYNo
%GS^\+-6h[b(n6s]1Q2bi7Y7o0lFp\C$I!&u>@U%._:WkII_aSmEF]oUU3Ah0Cm$T59g:hZfZ_S#"_5Hb,f/,0&r[:]%:^UtZbtGf
%1GXn`BE!FdW=Ll(fI6,Y0K',u(Q?VYcOIn6&=['Dn'QCik#$Fmk2HPSdo2B:Ci*TKmVp#25@A<PI"F9oS!4=k6[?T%OEVP2*Oil;
%,lE1t0h<W.S$$acYur[.$c]'[3lBU;D%_f0iJ.#WZ'e\3%V'92>jj@)PW+P\P._!.6V/si:4:%4Zo6#[2Z3q"`qI-Es304m\FU/>
%PC-\HK<_[Fm<sVl&Nd\0D\sEK5%4P&6_U54?u15CGs,Lg2AWV*`ho\GK!>>tH,J8a\Z[$nVVOjrZ0@9X;O1a-gh6k6-B*r,TEJc2
%LLGSHfME6?NNY>0%E9`kQ00++VCIc<A$\n^%V*EPnI8u,!%u1A'YI!k2?hKW^t>k%:GB3qRJR;#dt7N'N"(R8"Ci\'R:'jL9]%N^
%JlN,s<[Wbb?u1]_r.)$aO@V&`.2g-[nqOEsAsZnA-l\,i53`;]_b2VufQ>dZN/d>C)ob>ZH%N:52r%hX4Ou/&)ij#AN(pc-_q57^
%]jY^a(M"@%:WErT;o7N!N30CmfO8S'ia`lF+gj7f9oiM5Z-e8q?u4bchCpkdQjdILFL8s<W2G']fT::o)a].]=ip%iN6TO`cO"*f
%CUV.5V#5bJl,RBQRu6kON9rcQY5&cMc8U]A\usF=(`SH/4,f/6]/PZX3Pj@Hef0$iYsH'#A1tjQ0ZM%I048U.Q+=fbkb^D4lO1^5
%iKN^a2QD.N?SFAVY+G1nA#"oB_:Y.2L)OeI`hr7I%i?6nRN9D&RrO%bTfi#DK!@m*j33%YiDOGdVOmWP\^,12RqBi!b-PJlRZ0(]
%9mNi_0K/:H'9(1@icc4YmK5*ZS'i/l`hpgqL9XTrre@\/T\*[hodO6%2Idf@?u2Xs&r_g/g(%UkK'rr'N?D,NZ)O\^3mIn=1UlQa
%N/]5lK!AJUrXNF:`:4(kNBWpS`hmE_L9XT+onKa9bRA"1-YF88ERQk*NSJ3!Z0BkO(`UU:``C!%B>W<fe/cQ+O8f5jX$Pp?0K-MX
%2]*LXK/\aK/!aRZ>c\'<X0@+\0K'ATNNjX7CfDP7Fb?sH;GM6)#%JknR:'hG8A_pRf^s67^t=15,oE+lD&L>_Id@MRUX1."fQ:k_
%Z"`=l"3-'7Fb6kuGdhgJYu*U[K!A1VQsa`"6ec$cP]XZKCrcq&L2rRh`[7OdfM4+YlFIXfNUU5*Yt;LdbZ3DH4C9d#%:M]ak('^6
%Ienf(Bjf+<2EJj=^;8GY8Gn"C;,!?bC^fnA`l9"Ml8OY2R4b+^Yt:o%hG4uX'NWX"`b';;#%Nkdq/I@4c'3,`)^j3LK<`sZh<+uP
%UJku6h_6s'QZa48qOm772AfXAYP/K9;]/GeZ0=>+N(qdi%iCdYn80j;=u6kNbpKS0N30r55;j?_%2[V&A(+WE#E4XgJK;bM3[_br
%=NS6bCh/55N/d1/K!F!,qZUK1PPu@P2FpAW(`Tja$-&jY+iDstp&'EHAXT7MMOl&JZ.16@b:kj8"Cjej0K)stD\sEDg&todP^`'T
%2CUjuCmqXcN/]lM"Cn3gjpbff:,"RT$-"=N%:b#bQ=+N>V0<cGKHDm+X_KVM9hL/FBg)(j`^\;A%V$`-^;JTB0R^diI(Q`$fJ$W*
%0K(i"D\sF_ZNOdmdKpCn;aL-g(g@*AZbtEl&r_fKh_6t1)9+"7K<a[55@A;bR:d?UJY<3VP=b!L(n9Rp@quX6Fr21<b:a^%e-':A
%;C35"apZ3YUg]%`Bc!4HCmGP1K!A2=Qsa_U=V?[QZA(;sXV.kq@;OSD,o@RdTf7o>S'M4I".,3ZCm_QC@;K%&-Q&>"6uF\:N<VUT
%D"t(Y(n:O$$tE55lO@?fRUL$0CbW;>ie"EY-Q!egEXB`4jTgaH:%tZ<Z-fbI?u1.'J&'\b3__:dIRf!p=mPtn`^]<ALU#6_OC2ni
%)L]NU1b`GW)lD'j`^ZWl%:`n?P[J;b>)"A_X\Cmb*QH*4[):Pgeg;4Q]d7S6)fgP88]`YE.6h3VFJ0rsS#*62(`UU:`hj;RL9W2W
%Q!nL),2Y(4Mp^uI2O^QWN(qF'+##V.0b]L_g+EVh%IX*4`hr*1L9W2eT4)Pj#(FD@$m`L'fZ53](n884#E4WLq?1<':FX-4$rm7Y
%Z&o5`0K)R_m4^FnIDa^%#KneZH57-PX\GH_K!D`2^0kd.K!WAIPh5^3A)l&AA&BC2LTu,Dr#<YQhi_DaNFgrV@j>4VL9W2*QXO^+
%=;-XQ9^)r)7R;KTZ0>n3(n4EC5@A;eiF@YJl&+p`2S.Jr0K/6KgL+h115nrM%iCes*QCPr=+[]N]O>Ve`=n3TEc*stNW,1ZN(neL
%L9Zj^hdL=n[/PT\9g\N+Z0AS-N(lOr#E6pg^C4Uf<lhnhf_!s3(`Qb?D]"tLcPa`WX`B#uoqVP=Ypgcc@;O`["Ci\To7jN\q.s1f
%2A-H*`hq/^#E4Z5U)h5X^*:DGZm9n6fX-"I0X_0UrWQf,Ot"6"fJXul>GI>U"_30.OC2m.5%YY$0&dBY)ma(,Z0BtQ(`U`U0,U1a
%@2['Sk[TCQ]u/t_V#GjsYu(hsL9XS^OC2ncrHB(t_AgMGkj[G;CjIQdN/b]D2iJ2\6%ZA8,T*!ko7F7;M$_0K-,\@R*@<EV>O0Ug
%Yu*9>?u-`#J&'\n:1kE5?Himg;`32<(n2l?$tE3n8VXM7*W,qJUWR,&Yu*TG?u/_i^t=_^N"%)Lf_D[0N(q%c)917!1W.j+&agHo
%%3%'oOEhs!s)WgtD9C0&>&qF20[r&"PYp#i(S$uQhg)^rB,jC)mLEaE/,KK[6VT6mPQYK[ncQn_bOGaGl`-dT0K(@u(gG$]n6@ZU
%I`0[j@;JS-0Xa[c?WPTYA\m#0RnmE8_q6Zhf;(05=l!<S4()ktaZ!eR!FmoL5[?(PDOrFe0K)`2h%NJ:WilnBbqq=h//&**L2pT.
%a!SVMM@IU\>--0]q\3ucg*of;RhXE[)98W;ao[-FA(0hh3&[-@D]G8/hMbrS!K_8:oLZc:Crcq'-7.^)hF$lQh7WfF:tHZ,`\Ka:
%fX0DW3&YBQ2ic-FRs#bj9#@iQl5Rbj3T8VHCF1#?;9ChXc*GMSN_NBrN+8oQS%WcWg2CUD)r]D%A#&Y^NFP=N3&["SA"t1,Kk$n$
%BZ%+&LU?*oaN(r5Cta=c*1Lh=`j*5GkWe[9P5p$kfMkD'EGQV^E,8F$i7O,)NfA!g_Qc].JRd0[-KEac-I"M."YbGafOt7[3&W6a
%'95d[o,fqMjFh$,P&Y;9Ic/jlBMUTG2MVUZf##s!j4N!O-QF'?N![P%4i.^L>Jh4ua0DVV0&bH[ODo#/on!0[#83&V!TK)Ke(-55
%fVn>pE,>7:D]IM0*QMcAdZ.gQkOf5'L7E4!-jdp@jTgg*SQ*J2[I_O#2S;N:34?h"\Du5K<R*S4:"ehhQ5hkBI;-^+l#Qg>Z/KG[
%E,:3.Fr]6L&rpgmSO5[4@D]98.XC(,XS."]Yn?k*3&YWHIc/kcJPS6`p<<oaf%Br6E,:22'98&h:r9K"E-UEqO;!Y6p:l8jPO\gr
%7Pls\fME3@c&R).fY@b=*#lR@$-2`\6J%a-amo[s9l$DT@l(<N*QM2rqh8Ot1F;#4n4ZD52X4)p3&^AGfl1btR;ctiqA[IeWV$_@
%7bL&DYuNbb0-$I,B'hQ9--S0*X\L3R_QgAp:,k.rKO_@Ep^>,sS8`9m4-#:RIH/uL84bd!h3j43RnC]*RCqS482>*C[b;s"\Dc)=
%o\"2"<ZA=(fG#/#JRcSa+lV'%R+lUs=u$#lYq>ErH!h*HGMq+I3AZ[I`//!!/g]K/k_siJfW:<Wa0?5L9fTSX,TPR%"38F-:,k/7
%h&FCH0T7$mVU.oSYu-YU_Qfd]*#hMeYt96$f^oUja!N+mfVJG\Yn>U@EGQEUhf3K+[(L?ob5GrmS$#<%Z#.Y/>M<W.Yu.cpE,;Nc
%qgi7P[l*-sE)YP3Cf<ka[SS?39ja!$CjNU@i7J=m-QJVAq&.42Q&K3/H,m2C(21an@B8q<Z)KQBj4J,=!_aRQ"_2Hj)uc3dNX[eg
%KOZh9`XBfkK-T@--rio"2NE(CfP9_Z3&VZT&roZuV&qZTgMQ::2G1=hNbq^<*8?Vca/4p?34=^nndELX:J!N(C=!TR%HWRZ1O7$G
%Td1VIrM;.e)`tT`@j<[iE,80=34:+<NifVGhf3I7QG%9SgmWn+1F(p#`s22"NFUF1PAtD@^*Xg=TU@a!N=B:4YpoRBEGS:i_aDKY
%a/0Y)j4LH<re4i<kFs!;7eokd3&]"Eh`*N89A4B%OjD932A/Rfa/2anN+5f\cjq+caZGO-PT@eVapZ7eATGeqTd1TsarAAjk'4eK
%dEI_lCmZ5jj4JU-&rqrXaFn'@JaJG,CKQbd3&W3'a2[!(Kk&"<1#^cJ6GGNn^2[uCkU%:=L5m:p7Z[@(NfEIeKO^4/EGV,Mj4I&^
%EGRU2,TId&,B"P@V)g\uXgS.^@q/bmj4GVi*#gN`$-/pPl]#D<RW3/VKaGf>0lJ$N7P+qeei70[Z"\R_"32`Kj4Nk@:H16P'&GT+
%j;l:\R0gpRVn[4fqD0meND3<fZ(\gMD!SmPYr*lD&u7Bho7,`O2!OHg2Wtn_a0q4c@p=!3fX,843&[9:hDdD51_PhnSL2@nZ#.XD
%@p=!3fG`nU4-$Gf/AdEW6VTNu>DI)U2V,%g3&ZU2a+gn[fFZn!2LU%oYuq9Wa0B>)p]JPplZ)',l@2Mf[\Y5hgQDZZAm_h%fN?qD
%E,;mB-6/LD@Q,9r6J=YCCf&asNf@.W_Qb[=iRgi\EGX-N-6/M/_Ho2[>0R\?9hN:-+hVf2(mlQg)bRuPd6[KGZ0@Q$*1O*B_QcgD
%a0C=XEGQCegi7.,2;U;N-Kp+mURlMHYq7-XfVUdCR1u473&^4g]tSH%4FIOV7f>fnYr/j^r5PuZ.:pQ)U$O`sc@"[)O;!W`GFO7q
%1FUKUa/34QiRhf^hf3I2a>c)AG8qR@Si_slJDM6cAmM&'G2+KQ3&^./Ic/k_]M1@Dl_`QZCl3Q<^p3.>KOZ5fRW*(B0"l7@$CtfL
%>J$I[*8=@(Nbst#a$u=f_QiX50,tqaq1N7AP&Y:dD]B^:_QiW>4-"1/BOr/&L(4O17X7kJZ#.XDA(tP7Z*g"*$Heg3i'20se8?QP
%S$E)5a!U\7+#l1>2i^V)QuQpn9QqI\#T:Z@e\JG(DjG?Y!0n1WNA\3*fX(_)3&X]A34:+<NX]L9KOY+ao>\&_ZB9*BR`mRJNL%+6
%N_M$qN+8W>p4[!dQ:X%oL%Z.>9a*aGE,>/+m5R!M5;S=:.1+&'jM8%N@p8C_Nf=gH2i`mkV]EgTgR`D$n%e]*Rf@;FCfg3Hi^@9T
%,p^V!:alWm3"QrX<U/!sZ_Q0[1,'A:-aBYrRP(Q>Ys!!nSN1L9\j(p$9.>:Di69Kt.;Vf0/oD6/LCT'RM-pGKm#,'RCbk+j+$BYW
%[(5JY[6k3dQ"KZb7]kq:qpint47U*L(Op9q4G;\FVJT/(YF3jFqj[)_W7mj02/O*WP"Y#HG1d6fa_Lk[qVnYlGJ_KF@Fq=+X"EV*
%K[Hq+?"4CDcGWuREuK8`RN+?5@U2IA1+\Hm"4q8f)P"8p]I.+Hej@GSYGk:LRS%muKht^:XaZJbo](;O%_=5I1,3R=GFXsMg$D?H
%pSaA_Yn6M@Oo:,=$Pl8[XPo(X=IlK1#Fr56S:EK)N46-p2Ba.p^#("&C0GqD83>N=*l<q=Rqgm3lL9gq#u/%UOXn?"AH+B$=em)H
%Wcibqpu="]C.Gp@dDpF?;bi(GSX.'_#W9<3,\[oZXd[`86E&FZR=_*/o#C7F:X_5XSJ_j.jqNJ;:MXjoS`+:DeItZ#)F;eh5,@=N
%=0;EQUXM]J%734Q2qYr\=7^UN`(djI(jJ,#:!GP[T`d7?212Rsg'`[.J)!(K6.:^[^psmT9e57G+IPUGb4+E4SXP:HEB(--66Xtm
%e?hOgD!bTZ[%_#kq^@Ak-AAk_Uo$^t8%lX8Bgo(#<e3P2.qc,ggSC^3nQ:E/VP]WbL@:=9e&pod72).k['ZjY6^ujfeC+L.KF:Yg
%ohcV`&]_:fb/1#Ik4VJbRM7Li':U>fHHQpZXdm*=SCk2(U1GseC%#:&carGeS%1:59et]"a\Ce\l[a4s>4J/1`hl<R76Ihh;HTYf
%Cg(ORjHQWXA_ILp2Q]fCf,"jt.-&V=R]'pM0>j_H<8!_";AV.V'RF<F?c]V'4dRNN%DOXn9a!.EIUg_&KhG>[<+G-fV.j4`?#@F+
%,dc:?=D97EQa:P%dY9]79N'U/l*(:_P;?EOJ*`[^5q=c*:#sY6G"UIf"-RhQ,P4BrBe[>/4!E%ta%-D5Q$j2ZecA=2_TkYUU>aMl
%[ldtgX8KFVL7[@A.s&WiD^uBkBJ^%C!`%'C1co8&Rb[6eT2**:G`^m9<ab\<?4Kr(6!IYP.Q*`RVY[FsXi[8M;b0ThV)f5`HS149
%46Z%BJg\#0dDXDIm3P`6g$%-"*82)>%;i'S6W4Bo+9,`B4bm2,-PG.n4.6IBPMK;]Nr]nhMZdQ!>+sB!gZ=p_U6ZZ0Rt3jUp%"W&
%_OqXZ']$6dGTp+jl(/a!cYOWI?98?cZLRG$!NogiHW`oG%rK.3q"i/J1oW;R9aVdG@mEl;;!9H+(plU`^KGN7#*jcZ"\&l[6$j-"
%CRW1;J.e6&6.=S?0?(l&WOdg,`l+OTm;?S6_OsIQV6kqB__"EgIq$c\$>>=@(c5bF8?G`rB3$+&n`/ZY2*,@WRN=#=dO,3X&BiJ)
%77#t)cupg9d--X42[;O7W6oZMCIDW=BQ*8J6"<EamI5e%TjSuV(c7Je#Rc9>r&5L,r)7fb1=/kAHXpWZfuH->P$(Gmh?m87J[Uf6
%J[X'9TP=:MZNprGRE.s9H85S>6A3p@_@0m+&J-eD%/#9o\3nV81^Qq`)PCDO'7t(5PM1/-6-t/O<a[L3l]U`e9F0?M&d3'n!C=We
%"D<s,Rh^<P<RI$RBLT>8TLJ$p@U/Q6(hci=#dgQ8!DVJqMspu(XB\g\/p@AcIL.13FWe1XM^7;rNGh@-k4f"N+km^p!43AV!Y^)b
%DK"CV!&Ve5@L)rP6mZ00!2((\Zl_AAH0shIR9`Yici?8Y;]f7#HXoVGb5a@BPfCBY#?1K+l%q"/VX0\F,tAeTY\;%WaYhPnT[,4m
%d.D]'H?L>XK*j*B"+[g/3rj->!C//W6KhhdYSi+2XZ@*p9TOf<"6OSJb4Yk/Xa_Ytg6)PgVGH2l:Tg,&N]J?TcP3M5e@Z:?.!P<l
%n7U4,/b..@_C=>Mj#b[tVP03'``+]58%&/:.J>Zk^A)>=Y_/PF1QJa?fIbCUYLU!;q.GSq@[8s`Af?-?*G5?jK;L!bFklKJFR[VB
%P5&[Zm//ZZF)U+n$ds'_j']m!0bZ[q\aX5i2o):Lr#(5M)B0@gbZ%HZK7:gsC`J(VAq)0mCT!eem:+WTqO(Y/<_\d,[Zj0EgLR4S
%<OV>dEq9Po.k$[M-i+^i75<:g8OZq:JtHa/cgE4!cgX?6\Xt2Ii";0,1X4E&C*0&*B5Hb<Sll<,gVPNUI^YJ'.SMk\B19cj&;UF;
%<`Et:EA,5U8jBu\2rJ<P]3RA>B?O+Z&RT.N[btePWo7A=?Q/VFi=gu&:\\'QgpM>IVYV1)r;f-0L1RJ"q[E!%nZrBb)#)o5T-:QQ
%_RElf-4KKtHc@8pZ!K&_1*fs(kY=8S=b'R4TP)TH>8Zs*Kf/#c]-5Mga&`j=4HnZbOfI6Lp@MX:k+.pPe)-sl.Ha*c<l!"f?Xjh:
%=D)9JZiYB)E0ro18`p[)8t[uB=>9=PcC$"`&E\O('>/nd-W/0,?boO\RAO0Eqgb1g@:u*)2%XEM.;AVf_HG8APF3R;cLc([a.J0o
%ceE0)@hWkU3R(miN&[#;+OWNF8[3$85b+)a-j'cq-CNle5b(DR<Xm%d7g+<\R5l"p3Zk+W&Zm^YooZjI3TI1h4@<]9N]8P*W5g*P
%8RPsh$"p*)^2Z\s1Z[[?B\0PC`Kq7`pi+fkM/ZMJ#p%VCS3>2-Rm#(6ea.Psc`Agm;5iiKZ;N=0W@"-<WMd9,cbj:f6uDQ:!@JZr
%bA=201+Qn,S@sY=7&fUbQW[oheH357BA8!K5)SMtQJ&/%/@-W-bH,@hnp#SDCp3Y]$It>%b7#6uHEbVh&@%`V1F\kfQ<7`F9["m-
%$mhQrYfopGI4(>KACf=_1=OR_Xf9)BAVK-,i(:(-kK#ar<"b_,Jj>_U-)&PK*%3W?Nq6M/1@<3,A?*t+RY&_kPFMk-En]=$AVN'Z
%PF:2L'`T.8?'_62E-dMX87kLd,dSd9afKS+Vh/HV#`*Wh-^'nYRtu-IbbUb1*69.[9);4:PO*pWPKZkkbIM1VA9"X#2OS)VlEKd2
%,ammp*`5FZWQS0Pa_]'b1=HWZn2,)L=XdZ@S4R<Ns/Ja8A5R1.[5_dgmu:d7--$Iog4d,"+HpLb]W?!_8!ri-!@!s;WZVft8heI'
%rcO%fc7kGu('hZ06Q&WV,:pd4LZ?Gl_[P5.1ql^<,qNGU@4&tO08X,7TBE+5_lP7$8@gDjAkP](ZR#joX;m:*7Ko7InM!m2Qp!st
%DI'rfqnG,+m%1%_424J6`0SnqI+dWWUe*5gE(Y]K%PNGbo))4(RJ,Z2Z,mO&I/MJc'COeao8%&0eT&2#8moi.YZ&`B)UL79@^&<0
%BGlHi=Yd<WM=+9q6C+UT0oATEPapU`Sq1INH`BbGg$+XEM(<*2F9^BlQ(?_<F=+(_[(1.I-]PHc%95;T-^AD!UKTSnAEWV3fRiIo
%OaF+4[Wb^((%gQT._CRTL,,]$Sm1Tl(8jjL9.QBQ9\C&%9%d/G;MIKiF0ET>&e=-9<C6:7\X[eMO4oCtPV"19b*F$+16']V;GTcM
%,.2T>G".ltHWH(:N&$*d$lotB15/)UW"<-o1'QU;#q@'/3n64n4/>Oh4GqW9UeJBt2L(EK-<jX\B+gtuhFUq;`GsQ.:l#`mK;g+c
%fohn'AjrP_,pmU(<hD66.l#31S33;.oW9$4`osLeJl26%Cp0f3O('1(M</ur(hKOjFE0.Z307mh@$F5+@@%jC7:#3q4ljm:__K7K
%nBNH2AN/=`@[&&1Z4LRnS2Vgib]`&Kqa-Ne+#1,57%"`%D1O)[$Km>574?UeA46)UPUXCGWe6#t`0BT_Js-d;d/n@*aU%*S8$2h>
%,D`-aI"mh^FD#M=E&*,ibT\4gA6;9ZVglP)/CAIe#q+cCgCYZ`+Vbup/0VjOOH41^ab[0'7c)g/`,opQj/aL6R1?PqoHGN\3]k[0
%-IZHpLI#O9)3s.t$VlH61em*5-_kSt&CV+:_a>NWPdAK1HF3fR$\27*alE2+P@:Id[mmUDpoCWV$9/pc4T)9K-c>t>P)$i:OaYS!
%1%Adb.-T#LGVZ"6+Huq'L/OYPn74?2OmutLMK@/I:M+5'=@'=hf'il<GVVT9e=-T5$s0ip^Y\cs$<poISG?\&);4m.HnmAfP[aig
%%/V,c:C0ie%[OQ"!0iU-K#cr&1(BLT;RutQ'U'h&3rroc+96^65ac/73"o+XmZ)&W!0g@(^]G_]b,@X7W>0rh=j\o(ALQa;`?um'
%_WF&_Abm9t+G*BYnrHD-`$Z5X_Q\d2-S(Dtf<Y0^"`t79Q91b`#1#1CTo9#<+X@>)n$.-Ij\b2.C>gRJKJF!5GbkP:X?;X=%78b?
%RnA>hW?1mHnBGrU(h43$:b9Pm'?ZCS?NO):#7a\VRGbS+%[IZ;%$eVi!`>h.^:B"(U.jT(G%V[iVSV!5-@mRTZ6>)ILb^:@W#j*;
%1<GRDE(!h8+/XlC6W&"e,K^?/H0.`FjrWLO0836BRD^NeThGh-9Ze]U9Rd)$Z:QHkhp[);D3s_Ue%YTf1+*&\&pQ/=QJ/\/A/^0t
%_$Nj`[2mk.P=[agZd<746='PJ9W#3JdCoUEBr[.hQJO_-_p+f`a-,7"&=lcU?;u;G%8*MWY#1fE-CLr8qpQ@E9`KH$7>rucrU8.K
%M.C8h3BD\$qL=QQiQ.g]VgZt6cJ)_b'1Sk8K?DkTOcfGf?R.D;`j:%'&6[La"c'0-KgZ_QifGToDEfp:A0k.:P=)39\U!Ng%Trfa
%iSMRna9Y8@ZO.0[JP@qbg&3Wt'TGlu=YU8'=WB39%=$qiLQ$0RI?MDiP@>Pu_')1Fh\\,Jeg;7O1)+N3"[g:T4<b)!VV_T+2(3"H
%BEVjt6:Lsj5'j,g'rl6nCW>XH+Z.po3eaX`(Wnp\Vi^.2"!.Z$9R"I6q]%u#rb7ZAM*e(#%#g#F6Db!?%@&`jmP(5+#dVJi*@?@(
%BjNG3!4'Y#M9I'j>hFeA"S78rpCn@D'G2iWbj_1]@re6?J10&[O&,S84f3hcj1<"PA'^*5)L5$VAiL1fQn!-sPHeWDl0rVhNcC&K
%C.88qnlr<U?i=\_UfIOWVLgl2U.u^**XpZeW;]3M72'PIhQ\-STT'7dAr0roNHO^ScEK%&/4G1K7WQ+D>88[#mWI'J1tFg40L92s
%pad#hC_l;sJ)@W:lFqA-PVF:Q'Oqtj9^ferl5*r(ji1g7U7#W7_M89(&]S>`Ho`Tj!QIlYYag4uN,Gi5pgOl-g;!,dC6H9u[ch18
%2]>BeSm%riM!s6S@R:NadMH*REd,5h(;%>L@N)E%I8-T+C.e"sR7o>8Yh9qEbI9"(i6*03MCA\o:.L<Y.r:";?RCYETU6.7<V%#>
%"\kX,6OE(P";E@'-e2u5`Q2Chc_(<X"<bInEFOgtgi^HOZmdt09<RQO.lDBX[(N0Pc<*(18PDcZ1)0g&du-e>,&tQNN^D-lA&OtS
%6NfhO%A8q*-A\$u,J="QjEnKDn3i(`ZgJ%j=TgIQ>q!Yt<<b/<#D4*FiH.k]24Bt0N3,6g@l_kq,$QVQ9:j[e%_FmS1<Et6f1cH0
%$jss^bMra9];+dL\7&47%nk'nTEqoZ?b'+Q7&]00%qq>&Ep45CcS'P\?AILO-8UV[CPUXV`l6("ZlLe!cX"3c/HNc=ljD8oG[X44
%g9VC(0P+H[r$>SbWVO.Y>$*eZC`mD"pDJ7k*>YOG7;ckE_L`sNUp0iOkKjD?la)o.3FNhkNRR!VYi3>P6,H)J#6lDH_Wci<ZW<[>
%=Go6a9GqSSBE8APpl)=@nA0j"8_'JEX1P-.90EG!XG&B.]^QLV9PcCC4Uh'%[PXg1".Ibb\p8h&JJ/j$H!Fce_,Pi6HWO%[<85e?
%d']NS;QUMb/)@QF["9&`K!j?6Z^D*M]_?O]_=T#)DUh+_b.N/t:I$V)=79qp^m':/lEbG;PjD`LM[$'/$4t()JZ7hMlF@o=B!k>N
%"X_iL(nO"pe#r@`ZZsJd4gDp5'*jJnZI<8'QMKg[dgHRd_u06:!X@4Zf.InJ3/@?ZM>?dmr&%"J0_4Ii[1!%9FRLYb#QRu+e)5!H
%J8'nG@4D7bUp_,n!WZhjh#>:mHGW9'n6]?C><Y(+^BumHNm"^(mDB<<-iU.\T4g%[/'Bb%PhA1Zr3$`E;jmZ>9^jh4?RS<*KE"rM
%gcqp?Dt1Rf)^6U'?\P6;a,",*Y"Gr'Wl4oeiA`gm?f^&qUZCjPRcZ'Cc296U;&B4)!l[HVs,taPZsd4;%;UW<qA5RT^>lu(=;WXK
%^In)sbJ\m%nYhK2FL6/#+h&`p=4%:_q%(Am.1=&B(&0F^F#C:*g[JRWF?p@WqNmB+Q4sl+Qg3?7"J+a`8s7j'2s=UQT\ep?Wan$G
%DPDUqJqs#&oIlG8(As(Ha7[FNP%pZsYK)l8CC8EqqBll?N;fPdNk4%3Ih?[o7Q&P"@Q3eG1\sbM\N7?J!/u]^.nBr!8?jM=K`7-^
%0N\PVb:Y'J1j9(b/h[Cafj?%?3.h+*jHe?A#Q(Pe2f7D(3;]pt>9?T5=2DVLQc8ru&:h'J`;V7:^"=_09;cg:-i9skVgI3+m'"`j
%=d!7"^XV&ZH@3$5e?`ej.Z++(^lA&rfO$\iF)`8q.AFB;B-d+N;)4+$S3VSgO.R@[qKGs&80^GfJ!DDmR-62%^d>R6=#tE-^Q;UP
%"T(h!p0X$^-,ln['Dnh<Q/n<''&9<X?\9TW:ksO&@Xh6rBu@M8SG4*M/V<q$JD9ek`VuUhOgLmi^SnrWEhY?^AN\&#fO#O3XS4-q
%?Q+a5imHFdW["iq.^?b@dSu)n]o0NkT?Lhq'th.\@die>`ZeW448hf*XuW0\ren4B$Q/#ds$A%t*V_9:Fb>2.hgd["qhsTpa3V*f
%N,7u^(AeIc5(!,)W8*sYojiQOnD0%8KDe69O.2Zl?P`USgL>Z_BLn]\0BKXDDEP2=Y[XE7.+hnpnQRC<M_5p&RDf)6F`t?ST37/R
%-Ack6YeTDcTFa)f^PlAYT#L[a.S.5hql9cA+tg4.^Si3_fCF`g8Fp<b@"0%1rMa/j02c5cW!*"@h#<@]Z+i8`]jYB"i<;QH.G/"W
%lgt#Yql;i1AP_YG?j&CU7<a:ij=1!7p/ef<*[J),30eE1At.sno`N&0.ccrb0D(T[MQLIlrDd"Y?-bieOUI3/TLo,\FNPS[K)A'D
%J?9?Pr+1PSF*s[r-qAca++LVYK:*S]qFaZjDL=p'6'AHU,"I-6K:u\qcsO.l=_%)ar\AtcicrOcGaO:\Fd^S6iuaQ=?]m![D!Wen
%R#$=uq[:@Z4:D*Vd^b$R'S?n;XF$)EkhMj&H7+4,Dn".U#Cl""+B0*60-r=@bIec0pWI!dDW+ACU`r\a:bi9*kpJ/;AFLBj2O"OH
%V19YAY7pl2a50F:!rYP<+"?f7rh:IIQUUnj_3[)?aC!L"f=o%-2/I2`qo'SQ`N7=M`pWdpM>O-9KC\WUrR/:(Q7p)Qd^X2\JR$m-
%]opq/)u!"%SnnKUpIi[1C[4OL09lj+9pjkB!jhfLr\F8L:ujg!=(E2`ITo>r\6h:M-S9DS[!oGIbM[h`VoDN"gb48BbZd1&lgA)K
%*gu(>Q=g6s!\&>R0Bea-'hRWmo1Q=s(<=8hHA/M'<;Z]Or$!CiS`I2??f]c?23#g]nE`1+$fUY4[i&15io5AphaA,in@mCj@iP3]
%qiYd*Pi-t`@*'A#00A=grf'oN]N6KMMG(4aC@Js5:pHL8?f_b"!j19"n*HIX09(e=a.%TdQ1Ek^d]g/*Q5Krsp!J%Y'%m1n#Cbo'
%[Zl(<^Becrir+o4BX&saidL>l0OHj/Mcu(gBi(V:ptJp+-f,[1)/9$':F-`4H!brd_o+G5:rTrk/=%;<pVcqF/`.Hiif.-S079o8
%n#NbJhg&RuZD47^*5!pEgNVKj#5Kq/QNjq;qpKESGb"B>0OlGs^%8s7.230H(Q*M:3:DbZd:q]+/!!#APSJ?!^(_<k5Yp=PUt>kr
%n\4WbG^$"e^FW:L%<0l"'LDkMD6c6Qb$HV"^D,,r!W9g+4TW=MhBh+3;Y"+]EWEkuJUR]M!P3RX^KC@[i"t_>2t.28!P_HSi"qs;
%0AmZ3%f?C,OFU]*_nL\/HE]0o9/k@:jFZE'QCpbDbJ5dT&&u!tVhq$=)S@^a")i*k=U&!L_c^=8^8rQo0&5'*=C*5!<:aeR@F*Ve
%q^QPsROs;^pCnLOXB4>oR(2AU::Ms?>J2WB(P3FQPP2t`>%D3uQXo*262Mj^H&[0u^?>kIFI-ZJ7/XoTe&!Pha&OJR9-k%C+>`CX
%%MlKc$JH:Z?02.H.h6m0G`i^,$^h`$d(W>fA&0_CF%!l(iP(O.Z*98[^1^OlYT1G3&h6&+?o+-P%X3[6i0S>?/Qr5NotI@(XP9oE
%(S)*Dpf5Cu\Jm?T]c:^_lCRrE+VBfd?R=-5'DOurEXI&2*$/*S]J"sp/5@.sYL3Mn)]14G10LkMidJ)oBfd0563;YVidGN,:8Tf<
%^6#Ul$Jq*`St=($P2\oa47A(3DPLDtmu%Vu8WM_W<O7[f?bA&cc/a2&pJh;@13m5Q<6^"On\,iNW=K?mQYP'`^s@R=91d(*9s.p$
%<1O74,d6c`lo#HjnDV"]7RH:g0gkSfr%atV44F>j/GY1a^MeNJoLjh,Fa>=s(G]"F!W>@4BJQ8g;X=obcnBQ>[F[jNWeVO$"nW0m
%9C'aQTjO'dEHl<W_@hF)$L$*=lr=]l%d97nFKh5@Q5@a4@h\e9p$L'd%_$.%erBL5KZ*fBABtldc?F-H0,6+JBs]j^?TQXcYQFVh
%]SgD[/t2K/erl>\?NkB;@^hfO(kl'"m6Z7.'ME#.SWR94=K,F1j;0m#MWk3<7?W33f:D\j>+F_Dabpi7Wg!3XRb*C-iYO>r].W"X
%Jq"KpM]Hf%0A`&4^\"$"mRpte9>^o#lTKd$3OO4!@]"SH*r'-@I>r2P$eX'MZ_u%D)Q,OA"mV#.j1H/lCO#kl#(8qm0K<E#%9r>;
%Hjt9^9TUn?j/#Mj(U<](/Ar@g,cV5r_H26B-p.K:UNo*Npg1rWXFD,VV-J\!l9!fp_WAuo@c14X*9$K2)n]i#SnKb`=@reO9AfJ'
%?uU_2'G(/3:p8iObK9A`+X=ZsY6FRH1h*UITXq:^r,"Es3uCtp.<*Ja,%+a'A'N1'jn3k>fsI)Ia\gqe?4%P_Kh*>ifpNrIH2&^2
%0OC[SD'k3CL_JgF;NYtTMrJm:;'<GgO=BYaFYUP9[]rMS0YE^7(g]iFL=^K:6_KXRB[K%'<**="j0XS6WF3CT^[$n:I,]A+*\O&Z
%Y.OKsiH+GSVGS5fV2Vn&_joP:HV$(!"*mha+\8CUEYj;^qFkk[*M!C#l/Jt@X`qg/WT'FiGu2*U$OChh=k=td:nFLEZKq4kg]VUG
%:Pq_W!d6kaD.T^A](hJ>B@IV.Y:J,Elak!i-88]iDkblJiOX-cc0HZdXja7+R(0;uA6bJCV(Z)?apl"4fI:(rH(f7'dCR7=lFRs7
%nWVLG]!5($Fe-c(;3+i=Gj_`,f\*53PJ366l&prSbp,O=P(BW]RmXd4(4#hKd<3$sEtGpIr41+gEIH+SmK9*W>f3+&VQ'V6UNY"p
%QE\9;VJ9qM&J[H[jr/+DP0$u*%8U,3/f?3ns!h,'$*9:'Pmd9Q$d(?^96`5&pu>!F6?6N'H<uNNeLf`@H!Kn.7,nV/=Bo[]gU#U'
%L\j6qp/9]Hg4KIF,n!s)ZJ]]DJWn,kVf7L$HsDTG"eYY$(KjDE6[WbqE3UY*1-9#H>'Q0a\'QcS^$J[h"KkYk=lfX6bIYRHgL:2n
%bWUa:YQMCG=D4RWJ`&!\/Gf$ni%iV"G7CdiHXp,4K1cTiUoG]WE&<.(;A:&XZAd]s\VAlm5L?O"/V]:+L2tV/&SoRZ">5?3$cX43
%;65R^-ZG3^A__J4QNZ=F'>[]<PBk.aKM+0G(82*AQhFH<.0kM6+#%c%fcaU`/Jf68/h**H$O@R'XaXme(WLjA4%s(%-&&7K'>5]:
%+h5bIEEj0nV&!QVmrJ]"6Io1CYq`bq/$XQ(?uS[lpXNYjD9C/^10H??0t/Is0JFAL3+q#QZagoXeBD#9rsIdND_%@i/m0W-LLl'V
%8bP%pLN)4_lr5TAqJ3UM#3R#D-2DEZp!R=3FMl5Bi8P;#G%,FL0LE-1(gP3:\WN+4\5\W#'h!np-.sd4K#&aeU=[NFP%)hQ`8Eso
%.2NOJ:+c3\AE;4WUN'LcC$&=33=oGLN;7HG";_C_Z\77?#6od\0YP#0Nr*Qq2=JQC.LLKc;=K3;,'fOE`plpHPf2K`E\P#1+![..
%d9:Y_Qh(U$V90ObN:T#70-3V2E%PK'E(r4b>DbZXn<s3V18F\-Igbpo(4N<+mh$'-Q?L!nS@J1"Uf(M2paq0YL[dMUKG>/M94))q
%FRZaHcKJnH>V5?c\QfHU[45YJETc:8o\aX>-1SI1*;hDc$;2kqo%L`#3qKg[f44H0OGSs#]\:&3'o+Y3jNcX\jORe=_;?Fp>!0$+
%79NP\r%4+:qj[L8MCmN7"b3SO.=mN&`8?_oIL*dIP%'HlcJLr2NKs9COtFl:palVH<Is$W!"'b.[I@D3UXmuZpaocEHc^oT[?M]I
%2:Y:V+sBZK,f!SPCV')$0*2s]1J[''^rn\36/Yp5,&g8%2Z"n)A=d]?f$`47ENl"L`<1ojdl^Gt@57gKi)657MSTGRP5:Dan[D+I
%rD*D0-h<WM!#KYb\/+0-j76Nm!,tLQ99TB]qJgta!*nZ%Lfq"a\>G>g>UHr93L+9s3>PbUpmO&EmfY8n2HZ+<4Aan<O*_DiaE0ps
%1*O.]?,]#Z&6rD+(sO38>l$NuJX@!R3mblN7rT'@F@-Sb$!6`"aoj?.`6=Q&%P1JG)$I+=,QcRE4+W<1Q0sKDZfflJ=tXV]E02fO
%q^rFbpl,EWX-kQHig7Pf,.=TI0e:Q;BU,UcrY>pF=Y,gU>VmC!c\/RWUsK?=Ah^_QAS5t!Z89#U9I'dFbM6<G`><K;=D>B@g5Q+j
%(gIo45@/E:(gP.H2^ASDSRB`P@T$W;C,`pG>Z8`UXsF=,9=8TuXVU&qlJ9iCB2Z5f9Vl2r6YZ4NMi$CJjk^1T4);uiiPLe>iAucO
%g=FoQ8JnUN7.G#"\E#k>bu%<IZs^rB,XJrI-tcKi#+,0X=YM0,QV(]f#6]YENdBSJCRqs1F(PK?9M]N]jsk(UB5c1FYuA+;NAtjW
%9tr[F(Nj@,AD3?<M5jd%_&%F]pm\4a=&=4^X8b,SX\SiJBBRl(,>QaSA6<YHQL]=.0,-01;T@nNTM4'?<t8Ck"'l9UR_LCRoD+I;
%fH]'L'l\P$_-K/"$/Fg'<GGsp<Ca7'$K\U^66WmUa*]LuPc-=to)qqZ<:ne^2o+WEd3I>L0tHYG(3cg[PZG0(*YF/;I>"cW_^[g]
%;N@A6I+/V<eWoLdqT<5^d)JWUR?kEbcFU"?7i%>l?h]<3P)Te`'E.W^0nBi%*mj$YI&g@L9,F==UMnQMELUe>XWfaF5]Hd*1%:`u
%S\S56o-W-&>Ul*Z'u_%qW\J;_Xclj:J>;>->uOqc)cY2\)3d0&*99jZ"'U\6gM%i<nSn7hS^lZ]Q4fJ%+(-Sm7YFsNR!o7d<ccpd
%\X-*VV@JRD`_u^r+!lq*=[*?2T74Fu+.]p0I#a>UmBkh?((=5!_./_URd6^WHUai2_.uoF0</P/I&)pYP5s^K8#qQ4nTc*JR:%Yj
%<tEE>RfJs!!hb"FOh!g*?!CjBWSV7ZVn`-cA=S-:Eu$c]2.V*#o1SVSX3jmD`He,.8jWc+RG*1[Sk?^O;nc406EJGgc-(qu]&tFW
%nN&R?QV86rR,tu+9&F'dn/:T)iiSEuKrQc.%aNC;*rK#SehBB$<'YXVMqg1hl]M^AgkdbqU4B1RmN;>We_V`rOWjjNa8&]<!D09<
%D0-sW%o'_g_9T\NpXDq*Y]_ZWnln,HL<*j6Ohnq$(3c%K<;'BklrUDGGtc<^o9p$!*(U1Q@h2c!+C<h]DN"o0'Kjus'VT&[fB(c/
%F8..XfG8="RZQ?XP3&J7e,"@8V6D8OGN&/A86H?S]eiuCaXkX%m2C-t3HuuI5Y=eB$no<U5_d><KrlAr2#YM9rHe,tJ$s%85';#b
%G!)Ko`_jCPGTAsm).O0MIpK+KC*W3nGTeggd,;lE`k\;D?#P3?3iL(hA+rB9FfP?sVl:f+8Pmt46IMU\`Ra2Ko*BC%9KVnPKZVK"
%@m-]U>aM\D`m(.MI6[b"\%E)tWAe(7`ZfY!rldc:jJ#0O#Mr>=U(+4==M5EZ9SAbncgoO8DNlE5EXYFAC'_#'/)oTec<R5Q'q-=(
%/'AX(%ncGJ9d*^$GF[Z?5$AAuXuZjaZE=;SiS.i;<:VndYr#BXJ@%kj8jbe'q9YRC%>dYf6CRc]["g3D[9]r$n]!'UZ@"[pNDc-s
%;+OAPC%_#%V`?k)lVVh'Ag"2-"PEm.h!E/H.U'H(!#dBMeE&tpeC1(f8VLfhRC/Ks(qnHm;)32J]f,\p(i0ur@H]W8F\r;I_h0;2
%WVEs&(Q(Fi*lsAq5)_dQ;u.\bD/(@g_k4nX,J+*?_n.g=%lS9#)U7>oUGSFnn<=bWBr;tBaH9Es"'Fm-hR(``hG#?^eYrs59!g2F
%%[F'Lp?=(QgoTDqZ<rA#-)HWjVf2<Lh3;QIHnALh]3<JF4/b%!B53X47:>pBka1;07>6Ek]cF%jZdtl\b+7DXW<?_N:RuM`fN6*6
%9KDsmUE<boOrB+_`*0gW:6>?0lT2XMWkRS'S_$RT"p*rLag[@=?,?Di+2G*T[oTb6*MtlZ]l]TLQKAR(a$bAJAm)#6)0)$tKrWbt
%`+hq$hrf\A]G1hM-(1c>acmu@q5d$Pos%$``--0g17;L4n)Nq6KM3nM+ldR#CD9c2YR1m/OY4]2L=8Gth@pDt2p[9g.VcF)/ru`B
%;B6Sm1EJ_!nnVpJbkNHq)QfCH:c[0F""0o]6]2DFGHEgeK-n,7\;mX,I^"4a[Upj#3`l_h)o*9\$TSDt<^*$WICR;TNfVe4S`+nk
%lj`fE2(Gn"qOB9rE=Q2ZZ5XnN\NQME^!cHIb<E+YB65I)W)I,5cS92`%a(8g*ujifi+o3;Zhh*&TV5?^\&)nX>AKp%L\T)V9@gB]
%HV$s+.,%5^C(L?C;nQ-[PPV,jT:KShd)>CsBB64SIPdcoV(;BY&(sj]"'p];]ihmgGE3]KpL(0>MOb)lZgA!tGZdZDq6k#+5#_o;
%C/J'Q#5utiT*<H`X%EE5.#tY&i!qs>jA9^aV2%5Kqbh]^W_71LfUHe;nO#I39i:D*\i3?oaiR3)ctH$:ZTu#PfWW&hT(3@!`D/QM
%o6RhIQ$;ZKAp=FQ;A92'-<j-o:/Y<q6.rCFU58FM%C)6h[8>uh5+0pPJI;802H!pq4g7*2_i>3(Kl"*V@8S0^*h::*9Vi<?OKuZ/
%P)4B*F+mW#2Djqs;8@'G[!((Vb;DdSYLhMN3gE,C_5?[5P;([3HYUR,'L,Uf<HSVN"#Uj$2J#`&\1,$g`?oee?aE:9d84Y`e'Ie?
%_sXARR?]buZQ6![YkFde$9YMXo'B]J;sodrd<@^SPD_(<=iXV2ejGj$"H2qLfpm-f,h+3RrlJD._-]i9JsmW,gHdIdn>_QNR#kVC
%[1tb5khNeOfBDgC4s$c#B?911X,Z^RZmU^&cSR.]<_QCd/a42X'Df=T(LnS;2S1Q_pNZ%in[Inj`[3,ccoL7$9USXdKDp,??8<bf
%&#I7.JfVmCI_P88e>7iVDtn0RipF7rmk=skH8_(0Dre)J%kgQ&QthPniUaFjoW#l83#DFLhnkj?4>/$m*;C7-9V*MO(?9/t>*BB#
%hEX(V2?/PR*>UnJV.kE.5HJei025ZZLAG.#/7pb$gDYr\c+PWB/XYn.,qDlo)"1kmc_eK-<&EbN)[Ts/Qr?;$3/mh2AcCF8DMAQm
%R>>9c`VssUeUTr_6XM^&*"Orleb0hI;,oeCP^hlA^=L#/mDOhDZm[2*8fAPDXK@#`&SeNsQrr.G6i5&Ql8)Cn52fiU>d>U@:^FH"
%<Y"uS1A>`oE5rkbrtj=LfV9'j@;G?H14u.mMd@tOrbK^)_dBN*bUbIi"r_)_/T!^.A7]sDl!LAIaL[)).;*^uLXJNr;gc^ZO(ld&
%WXWMn.m-iHJl8rdH(KurpA%1+oSH7J8]kagJCOWkBQf)iK`SN&"]:e-H%rJ^/DEu`IM7aom>"KRgqhf@JRusW`^mX4l_^25h-(39
%*b1sr8S/DYRCZ!h%TCGtE@QMdQ$c<<S1\$^5&A_\=jo)8;j8*&i+MIUW4Zh7bMP(C@+l8o4W25@aqX;/+"gU!eaTGpN<HKHmbYFa
%R[.J$:;$$TB3Xe3@DP"U\&Gd$Fs]s6B-kW4O1c+dbp+D?$RV;*!q?fO%81CBI%de+_#1Tc6tBI58KNbMfI%Gpe!*Lm6p'`.r.!GW
%Xn@u+bO0^qW:-r4jbIS+mMV)67LqE3Z7m+6KFsri/[aQ%9tOuqDsoR']Yp<jo2PC@TW(-TYqpI_2.FS<rUb9.O1G"0l:Cd9Gg3*$
%qfasBa!6:F"X`[#r%K"EEj/r55Kg(#Eg$sC@":Qr=<Ekj)0%@nJl/D3GUeW@].OL==@1rgqc9a6JoebI)'&33`WPgJ41i+5^":da
%3=:Wtg_YEM<8\u?WH8'NnI@*anHRl!(V-^4o'K>I^2Gt;VAXbs`4+h8nlS$?o#SM&To-89C3%;[-\3f$8^Vm<0bX#-ZQXD/$QW@/
%I6:+.['1c6D9pYNPUR2gTl^0Xanh&OZ'U8D^8np$>kp^[Dj1UAg/'hK)p:ukfTkJEO#Zek#!Ll-"9i]R'q"B5m1(]V1/2eZSQK8B
%nR0`(^kiNjBXmh\7:/A%bKkpaf4J\(SKWLk4%_.Lhr`"a0Xguc4sIKWi1e+j;>;#sngAKgF*W*jKUZ#tk3KNR\NGRQnMHM]Y>tM2
%lpIRTg4fRbg5D(<;gJncYTkC1E2X:K4ik^QJGY!U1L@Z1$\Niu#suA+D"r9gF[J>k.#atHS[o&-*E?2JN1#7Y4?EErjMkJ6%oG@D
%e?Qt9LFJh-0\f<("l@r?jsYS0m^t/^=iuD;Hm0"5%rHW'BB+&:Wug4q2YP_0n$!g:lb`-BRPoX0eEbeJ-GiR)85!S>5#)aXV&.b'
%nA6sWf0[92D]kg^^*,8L\,boZ!R1"TE05GOC)H$XeVVM9IT3O^J\nj'g_Bo>PX>nD&R\4EJi8'jVfPu5=QI7d"D)FVkRQ)rS=T)Z
%Uo@7IG8oL/KO@=[F/?2Xr#&R07XjgNhe5&"@LY/4#mo!Zjbho&Ub%kB@:=K^B$:`*?SIo"ash-3E):2f8&h@:6kk!Q:tD`t2fOV2
%dC@ANLNT<oEW=Dg#,T[Pn6[qDZIM*3UX+J>O.q*UDJu`$NC>b0ck(uC\1ffE8^?0_+imlGNn>R]UY^so>jQ)SU!n%pg]Z_2(gJ7J
%f;1EC<sdJTTtRj,=Su(ZXi'gQQGLBsE$=17SF,f91l:98Q5C'/oJD(L?(^i=o=1o@r))$ZN?2%j.;XrVnTHV@(LHt5\"7?dOo9)S
%-!LCm3:u!46XM;G$CiKp=Z"t3Oal$b-.HW](n.FhlZcuk]7Ldo!D=FN%0JSJ,J0/3>AK[JJZ?nRGbccPY;=SaCj9ah#M/gk34\%$
%MG>3>,>Ss"7_DWi"#o2jQmc%b]7`Q]UP^dMJ:9_U_r,Ee+,nBtF\,OESsGELX7hZC`Am@+Hq/SqTOQPpduHhC#`";RmF*O9H`Zm;
%9`>oN1dM+%h3c5Pj30B@U<D2,7\+C04ZY9ZYp[jpi(\<V`0&_0lZ3Tq%E:6R8@-<n\7<f\?_Iu?K,p@V_M1&Se*]JO*nD&'J6Y<&
%S`e%urfXe0"__?*[0N]KA9!*:D:HW9iG44cA=:_B=MBYUXsNQU_OK0qk/'8ML8*?#6Wtkt^2&0p#uiY%Zke/p&[,6c0Fphf?=.-T
%[jo5SLnnsJYCqt`^W:)\4<W-Ye&NgR$RKc2n.$Um#K[W1W>hd>jQm-R03UkeC6Ql#'&[6g2jRWXe7#B1?nW8uBZO'1G;LUHar/mk
%@dnCsq*\X!r.+*h%TE9W?=[/NE+%Y3%pTMu,Ee.n^u9I")BeAU#Y^\;E8Y2i07%(b_4Ei\>7X06(_f$NWH^O\6']l/C1UEh4_HGh
%RC9n5"En2OEt>)Yn/`ad"F_5#=2</$769iED'1ffk`?g<RJYZ4nUC#o6[I]V)DZ^9n=%i'_al^-FM.c^C^^bsj%PhAbc>J;?2Ep/
%Lmq+s"`%LYMa;3):i$XN-RILel#s-0)J&5@?1pAqGjtT=[80<U^?'?`Af"=#(8J`N=%>N66/K97[E<]J3"M"qJK>?]7r'lK_.e&=
%@Y=?)ifkfnC^==FE=='pC`ki!MnGC3/2l'*hu$m2nKPRt-Acj3EJqGe+utCKSAYQN*7l9bjYh5%hNBKIfKWp;JM@^mkBXjPKB;Q@
%JE#*Fp]96`Jj:SfOolJPb`!Nf-\:'ga_s.sW;nKhbCS'W>obI#R7!Sd&VC6$XB_E;nO@)iA+MYo(lH/-d'V=::4nC^p^\,q@Sb+,
%6#>2q@\[BR`p7b]93.q`csMDZ.ABQW8797WKu(T714DiaNL6pe@V,0K;K)LRS^1]HWCIT3TOG),<t'#d>')r7CuNR`L9]jB]iR\4
%cm)"r010=Jh4Z="?7;;2/Mo/c%"ZhX1)/`=KjQoR0tJ?8].)]g2FBa=?`\(B\<E21jJ'DnBs\Fc\BHg\/Vmh6EhRA2YCdS-?qgl'
%j'>&%04l/X#e"mk_XPgG.h@5I+J_Z5']l#+HH[%6C'dR6.MYO2]>a7j9W?Pf&B<-T.U.Cf2/M(@m\7Yf#fm;kOs*2qfT>5D@R3`q
%+FQK'TDmL-mR3!;QHUM12:b6+7V1np+tcmp&3"->/UXHTVJu<4*%j^K-7+S8Ggj.s_P&[Wcob7-a0lU;B'D5ok0V,LCJHT:duhS0
%4"**`:>B:E$]>mm3%c,M(#!+:pbpS0ci_#*#_+O<I+"N8+iAtFC(S&R:aG:eDo8Ai5\!bJ@7->M7=3+M#msgF:`:Oj<#dfN1m?8+
%/]3*FBp#bfCe3>`kD:!X[iaO1B@$Idpn219#,iRY0R-*l_WYgTggT0-J/j3*?Hs@f).kj2kT1[8OrGqKWlB0%3JQX7j3Wk;2NVG@
%FRCSt9M'5ZdhIXXZmGVZV712S`ZWGmEI)*nQR4:s47O_)CkmW_UISd3H%Xf$[^.ru(:@4__GK/sUqu&-D'<7CBUEj@A])jh0B]$;
%I6-eA(=!o;aaNNI_9ah5?+=a1lesk^/#N>3N]dGcN+qAMP2o7;8E`%'bheoMQR-O'lc&`da06diX@.`X(.F?/ZOq-C9L.JV=5*BU
%QlPl/QnCe!)Jjo;*E[;92&*)3@T9nLDh1"$Bj4uEF)T;LX\7,lD]PhA;r^DhpOF=&lh5TlS_aX4OZ8_@i%e<DZaUnoH146`I1.K%
%$b_;;5c*oTf?VAoQXnAOk(NGai1Nd,B,?jC"W<Ac"=Z@?oGGiZd+5ka8JNat\Run/VR4C!nem@^ZJcM^iFF7?1UL&^ZQfaA%s6lH
%YUGL&B0o%1PtVjt"r8'i]11DD#@t@h_3C@-<I4-ih9PQtO$AbI`rVO8*+ui(1Ar."&N#hlY$2V_*[0!j8_JP[-5[_].I,nPdU2\8
%>)`fc>F'rj":T!.9KtdDoe+EX$2btld]IYh;'RP6U%Bci,E5P#=&H(+s%,_j"=4e<9EodHDII;V4SjC\b7"_D^/3J@B[,K6KY66\
%CrQ^6,$AMNA"Q_f'!c+_l%eMdH+_4\ir"f#LaFFsX#MaUcHD`T=TYH/6_$P\fg?+Momj6$n4IQMLfNGI[4q@]4?K33c*_2c[qe+m
%AgSHHTTHM-V:J^G-kE6b?PXF][%iugG['1`V*Rh75>2tahXTAE3'q6n.n,,s6bJju\h`1IRsu:opZ)Qd6h=KIFur/oL]45/SY_a-
%"_>+9@/=9\-K>5("<J2b(bNQbjCT[:8R;cp%nDqjP)&-:6qN=.T4p9UhHD7A<lslc;sI3&Ybra-D=-G<,;7]f1c=N(L>rt`'qF4`
%QSCIWYbTBIg=,Ajn-Ds$N.7`kR4[odR'VA`jK;0u>10/GLR2(XYJ;g/'llaaHtO?gln3D'9?S?RXR,264E"WT9N'^I:3X3N>Do"R
%3/Fo.F?m/]aS%-l(tGHON_Da)q`?&6'*#mHn5Tt<N6Xtkl*2TC4<.mC0$1qm-t/O,<JMj]Z]OX/mD*,8QD+Ynn[3q%c>6/Ya=_'7
%Q]RKO9EVqZh7?-c=%S%Cg@Mi_NG3BA3]&Wt"dc(0Z=U(.2!!Ti?$5t_jB;?U@-DF1#Uu&_[O%-'UH=\,i(mqUQ!;S$M7P''*AS9O
%kig$*#R-M8']uPaOc2:Y,eV.MoqEN=5=XiJr-)D;nE64)M'Q9X,h0Q0.<.+,#^-SbO,"p)*2LGIoi32epu'EL_+/sJ87FkpEq#.s
%63(Y#hBSg*,p:L13]Jh1$0)H34Mj@RQ3]Lg*%+mI2,_^BF7"XD#sJU$6\G+SMK$jA'hb"<!M+5U;3a:0!VKno*f`\;)3mf;ONt?\
%Sgi*$fW8h6'(;-HXfN6VjIDP:4(Igo'8j""+lN;3PDD"MnZ<5dh1A==ViYc:OpRb><$rf<R`,f)o@Q22NUE0O[9GthTnZ>e&^kG(
%2&`\Pn0'4OX@NG(8a*C=aonY!VZK$h3kURT8gcZ)=847Rlc9lp>dIg\l0-DlMC$G3aj4A;*G:p\hc^QO1PUT<^sVL\9n^km2ikpX
%^6mV[ZR-Z?7Z37;LI:CRE"%S`K;R_r1F<J`VRn\L)hWb[U'*[q1%OBfmLn/b=iO8\b#ACrZ"8oOil+KN3<5iHR%o"0T.C]m8\q]C
%<"mDGpP21q0nVb#L/XN;XmlpFT7nJiB=tp<5/WW@]9P*k8=gk,ldGB[R5B#"Z6=h_NNie!Q&r*N8r"`^6(n<A?uWtAGQkYke01*3
%?/2mt96]2#:,`I<kdu/bMj[l5J^4$-Qg``m:E"\64iEr_?90MO9#qCk/Yn=7$(gbe\om^:#mG**O<?Wup<1TC@G#V&KcDd9pd&F=
%FQF3.]S(ENi+H;b=Xk%KaqIQ9hdc9]5t:UGY6/J?cH!^%:^Y[5-;`oS)&dSS!5N_kf,EdK"9&]aI6Nn[o0KIDr]2J*;\HZ2%K&"A
%c.=(rGXrJUHA7fe4"P9"=rXVCY\\O_).Y'R6C,i.oUMPB'LQ4:PgX-&Hh_5M0AK0GAM8$Sd#l:7M6j6R4tM34ZUl#nh6I`t6fO&K
%AVKo@7=g-0]2i-^%3,3i381rsYJDUpF6_G'B1S,EY;%V;a.IL#lnJk@V<b`r1_Bg1>L3heZU>^=4b/aQKXa[%/ZE73KZYHe)@f&c
%'p]]IZ(CAb^n5&_/5*lu74Pds=*J^Wh*mjQa<ET<!"bukKVP4l7pN_\;;#[hTrphJXI&F1U,NTMB&[BeOI0R''FjKN*=r..1//p(
%orsep%Y:Ve#%K&Zf3fRTh6ff--)M"u+.I$)i/Z!ZM[=K@;:7`71$_e.p*k%dcXX3Es,mhfGb/^;45eHKr+:=u8=(#k,1*;\:rJGV
%kDQUr\e"cK!sA.I`Lp`;=]\rRF'(7j9P+BKF*IO"f1@Nq8!":rY\l<c1ncq1Tc"K_ARp:8JIk>H>F&kqI)]h;-YXJ;HR;Cbo//Sq
%1WiXe::rqjlJOL/!?=!ID5oRsKk2Z:GNG&9EU0_6_\I!oU>)3H95riAc<%,O68NC6-4L'6l+gon6`sM+T8Ab<(Fgu"@hmP-A5UA+
%9gmkUHXoU:GE3i59rb)TYfliM:WXe`U;@4C3m8_>meASk#?`9"bA9Rs_3CU4J]<g+/f679h[:KA:H^u,E:IFk\!!GQXqAu4`Aijl
%3p@/A3h#*TQpT-&&q/fE`aYVSk;d?,[89L/*iO<r1rdA!X4<MX*1+_`8"_/bakTnmE3+RS6Qf)#>ch2=dB2l@;0//'c>NpS9c\]f
%caSp]<b&ra*+k-Z@1e&2a^DBN(hZqL._J`bjTka?[uR"\2<Xbm2gkC53#=;`OSm"fdPUQ5ES7\FJDk7W_8p80!88QTMKp.Hg86XF
%8g=AC3jRTZ.dbZkimdcY,G06[Ldo3XN73k#BNoh%A>&J7,G*tVikaS@UM4g>j,Qe#i@TI]i?[Si4L#m&$r0FXf`VG0fFbU+K4n%.
%7iEO2'scnW6C&W<m0#Z#MU^XJE!#.jcPRF1,6d#:RG#Drrg&i[FI][fL%?S8hV$VB9sY%('$qI;B84;UY%U4,`?9`hmQO?\]-Z5h
%l0*b0d5\]j+e[d>A7ttKeHon5Ms1)F+dp!,1A`EW]pH\D2C-%a=E+CCSBa>dpfU9@/D(e7>>'`-N77j#NMTr>cJ[Q)$3=l*<.T.9
%et2Q.D'U_;&i0C&DBr:Z-Jg?1'A+[f3>dG><LFW40Ylm)2F5JdAU`$Dm`R&i/e"C_A^A=$9EMYL5tS<pd'.h!f9i!QGKIn$V9LS'
%d$Vstdt9>#36>`a'^SUueTOt+A$HC(]XPSo2^W+60N_G%J]%chCDgm-'*4tf[6U+=]H\n=8ZlMSk`'p6^9LPS0?EGH/`)+I5smJf
%VCGbhYULZ"*sfcY;-q#eZ]X&*a//bgjIe4BTOQEdXPb'TV?66U1RWfDIKLF]Q:0bD]E-7?9W]l9B(iiG0CW"5\g@2%EI>EHBqIHJ
%K4/d2amW`_<%9:7TMq"0&@YeGaQ!15*jJ^b@E[74<urBk>GJKV,plW_g5\Ke(*0OP9@?N[qKci\=H&6&BS<4=PL)!YM\Ucl6_"?E
%:$.=Z62"]MeLG-hLP1D=Rgiij5"#-.dRj3Bi*DIL2M_.)<r`"Q3Hn?/j:NqQ.Bpa4%a!mdE_pG6RD&m(l`Ie!)obL]EA2e8<;^SO
%'@$UQLlhS[$KKh36_)RtHI0R3T@Q<%%7ufmnt>)?-[X=BEE<-5F::j)LQ3Xu/(.;Gf\CMOIVTW6A4Hc57QKaAPqIH.6k&"M>1PP4
%Sk@=<K?@dCUn(gI@TGCD6F2ik&Tc&N%cmh3+KJ#88/'3uA4kFr1X?[i#/S2_p@K'UJZ!K^NA)ON\^Y_6?jUH%&UMZJEZ&F1W'D:1
%CK1ig_X,'4TD)7&CX`r>h[I],4:qm4d!mLY4=K`n*-kmX65rJHkY2*[.$>Hag7m02PL/eU9:$/b4q0nc$4FjW!20jQs%!nW4NA/u
%/ZsD_5rK\[8kk^pd&7^_Up,3gi0n,rArJW5\Sb)a:n3/m\*C:Fn,/1lq[0M5$k/.jBRbf-XWbe941*,IbY)<^fs#V,>X@?%[%l!F
%\4Dq%ksIpCN;P+I1aq@D`-;YknoJ2&A%T-4)GRh!+S>%H1`Gnt9?`Ff+4cn/2.e>mRI_5QqF6q;fWqJJ[46f:<7q%Y1^gl0WQKd4
%:hYsT:8FtR?ua[,D8nj`-%5D^*/,`EAN%;#!ZHHV77rPXESu"PRl1!W%gicHD=,s'"GK>./$kSpM6+joiLUHZm!qEt>cZ@Xdl0R(
%BUk)-!7NZkm!2-8/2ErXI+*AY1*e]Pa59Si-b#eLEe:1E>%YQU2oGkBV@1C%AkP7XkYH]l%"Cld7h6RrU_.ET;I%qVRN(7KM/O'.
%2$>aDRo")7)Wf6A\ZUru3$Xo=/]C::2<g[S@2LQ](l4$:=oZ:JZ_V=$_R1%-]%U#'^>8(#0UW6H:%N4i6Nk<>83Z,F+>h5WiIt5t
%U3"tf\VN*elXIL,9S.q<qDb,tO\,.<@-gebc?YcrJt,+1&I]`;;$^Dm1X3C4k%,ojCX_`C=#<q`;`]0R;!!FmGgIbF]6IMA?,q=\
%X=]6!EhNXFR]B*1!SDOF%aR#_Xk;Ee3s,Zr$U`$"4<(<0IL3,Srg!u5O<!FuQd1n;8XD7cP;0FIXU7CG@5R;=@np]2PIu<HA$b%s
%cb]OepDk)a>Y!<sZ?/*8;(K9Yh=Oh01pin.*>iIB+5r;.CLS0umcIChf>[H4Y,!V.+CCT0#DXUl1K-"6\D:'11F!`f9eGRKpC0]`
%A:f4Q"RQJNBCt6>Fa470J@UH:C1UnP+XpaB)dYQ/9iA`]['Gmb"OG]0j)$$mXiefX:scFoB.WnfZ5s3(iJ3*VamYO2T1c2?%L%iP
%<_9$#gA;SB+>2GW#BE+bE5TE/2/t<`Pe$A)*ipDOp"ulW6)BAG'bYV!A(Pbd1UdRiQT!Em+q*'V95</BRatrtf4Z_uPuM(Qcrd<b
%-3.8FD9jBtbc-s\-(g>`cjYU4$V6#n.V=sQ)QAmA/3Q,)p;>nDUomOc,pe/=Eu+/XJp2aWG-1Gs>WOE_^j#H;Q^kV2:@5LoSYWk*
%=6U?ant7E6lU>CfK%Ak3B<"-.@V1f@[Uqd2Ti6cSb^s=.fdE.3)KA37p-p_SdqRnoSq2j?F`t;Ai'oX@'m_1a+!E1lC[iV9$dXus
%1,CTO.<IBr6hVcGNBbSL()5r,YsjO,kcDWl_info!1VuX36I1IS]IjIOLIjAb)f@b#eeSh+Tn,0/T2KsI-ADrNL1Tg`"PgF)SDeB
%^<LuXlAZ?mmI]-a7"KG?X?!PsCg@qg8BfBoq+5L1?ntqS8<9W#`&(>gf!F+X?m9sD%<97kP7L$/K5!ueZ:ui`8S%0+'C>#$Q.>q>
%)g`S/rO&3NEFbAAZ>jom1<<,BeaqWhkCG-?Yj]H>^Vbe[V5dEZ8T5U>OZ:e7!)B:]:G^R,N3X7:hh#9DZ<k>7j]Jtn3t8qI4q9.0
%fE;4T71;4EiG8eW"eQ0G4aemG$#]=6'kS%k70WX,XNK\[JqKMd(YZ:.Hn"4ZG=5oIa=bCi)jDAQ8k3J-YXuVrHfkkZiBG6ro*o!Q
%o-MF)D0TdHL+Rh`N_fgKbuHClq%0?)&5jCaA?8BKGK&Hnb#@m@dER[0+#p<_$%.uF!_H*s`$`oq=Yb<$VF@7u8El;O`(Wg*oQ6#"
%DtORA'L9[n/iBM8@I-)*=gC1;VrKB-*nUkL>-P<e4NdpGA_qVRW^2r.HlTA+)bk2,I*8&&D.G91"&uC0g9[7pC4r`5s*q9XWQ?t"
%IhJBE-s!Q"X,UDGbQKMXrDa_'7q!ooDdn*)I#M=-d*`l0>Oj6.p0jC7%rRtaWEPU9PBqLdTNQJD'%X#.r^MWO4isR$gkR_,@"2*`
%Y^r>4hXjEu,_[>_)HUsL2G4Y+)Vl$A8W9N;,*OIK3VY?UaLCs/)]/ES#?Wu<4-iH<<3!QAe:(SPmb6C8(mP0$h5+D02%_3Ek4K[6
%%3J<0HG<[WC[Ci=Wi=]`AV%rj%WBL^Hq?PH%3*T$q&rD__QMtY_.=mcN@O<n4MTmI)B(0NC?ds$f;*C`PD0/"Xtb4#11n%l3<qli
%g9L3Ff;)Q4p0Jk9c(_a$r4cj!b/\'K&i!#;75UEb;*;3uO`'iI\gDGR\M)cX1f]hjbEUbF<Gq,dI7nT0'tLBS1ngV[jGA-ell+p(
%Qna\8;.MK&'HiLK`a/mj57Vao+-<kfY/4FR.3s*W^,XOu5-pd.\kP7o'S1Np@=Ge(LrEq@o"HhOispEnq1X2a5hD1IUu,@^c8m7J
%f<EVeh@k\l1NJ?#Jk\`<H:>0YS-rHGFtHfrQ9ID&T4!;\Z?0Z6WW;`\4A#q,23F4^6'>g+A_e6N&fWHI[NCV9HZt"C0i=i?X#t72
%W7A=q.rr;_\BK\L@*:QO%C4QpFm3\_-J?h9dFK2&'q3cVVnjub/Xku,(?/CDD%2c9_JNg(ci\BLI9IJp7e-`[CN5EiZFQ;Y,1&MQ
%4[@UA9*ud&+WGSO%&$H>;mF^mJ^Z(Yjr'bT[5T7sCYZ8Oj)i6#dB,oN0]%WYk(_IV%l]rcH-o6/.SOKS0gkbQM#7Zn7<8NpZ8QQQ
%/dknZ>8M*K4+ulgaO.Z$[2@=X7sbB(!*q[,D;#X.N$>E[1!UPhcOm+08PWiCk#'V)kSm-hM=Eqacn_=N@YYkgajAs\#Iu'`qETm'
%@ke*=%BarLd_\RIP@B<akc3'bJ@=bq/VcG4d?b<2:o?3*@13(7:4ETZYMqq+VlTXAcPiFhXL^"f@_g*rX&stZe2Ba&"!,.)4-[K8
%7?$0LEX.:Wkd6%&R/s_=IY+9$.0YP^m[L)p]5*FlNY4u`=ZirnRPK_to[]ieI+o-;__Ojj+^O-#oYiSJba2M9=<h!niX4uQ9.]d_
%6`)6S:i9M4ckXQfoElI$/2WQV&PJVBU%`H0%<$6\8^*,>$\p@]D)bZb?DGATdYO6o;*F3b,ft<8nerRKeF6iXen+g0e9B-(P7,1'
%\;StWED(pVE@;:tlft-G[?%C<qGB3=.rR2L.4<kD18d8@=<0AE/]d(e6j=J9DirQO_bNj#f29iJa!Qt`+gO$ZNFL;%hPG#IctaPk
%]7u!hWA9f">>(WOLperKk_"D+\8.>6ie>V='PqZ.l"uXJ5+sgGp,am2mqKE%^XXfS7L\NOY<c8:0#oC7d'o=?Sm.._NdZ$58`=b#
%fJTZ(]YepSQ9n2'KK(Mk4i"Ea2R7Jj)EZf]W8Uc<U_M8o$,&r)\5"ahg![g<CY2Ih,&V+_8+.iFUr#%mRMtd`=>WNZ"kU:AbP)IX
%VM%R'"]:/P[")FD1'2Kpa^L2<Z?6ukAJuD7F\@Eg9qH1'CU;OH2RSb6dK]2?(n<p?q#o@)e@L%_J5N/"Lc'IGk"V35GQd=Q]#K1/
%JpPdA74&g*XG(f1K_/O&!P3Gbgg2o$3$G=LAOc0@B17$H19?6?01ei&jWV=EkWYZiM_dWM-sL9?JZdsfdW:ss([X:@VF63M%!DZn
%`Qh_0[4C,ACGT-Beh`UW-+5Gql7^fF<J3OeZ""KiQ4RV_EC?-a-@]?+WAI"M6]TX8)Br+8pP%^W7U0H>#4j51>FilLboj+tVM5Ie
%Y\u,?3m9H`4<2b\ESahbb<![*5hA!=&@R6,4mU+GVA[8\]X9S9ZY[GlGJK+#VCI1ig./G!I*EDeQ6-7!b8?`T@U%E?%k6I9lV7bS
%^]\UQCb1%8g@L7S2?9gm05`@AIlbT1e,6rkNpU>+^Z!ffB,k,e5&eHF<VG#B`j#Q:QZ6gV\^h)-#+k5jNiaMu52k.m,TN:io7^]7
%nIgik9#e+B_tS^l!s(CAfRWJ73&\SJ*]Q(ISL;`NEGPUb-6-6$/Eq^qX/GW]in,a0\0I#n4P(s@%<BInOYL&:3&ifET3JS7E,:aP
%NfD3Fp#+JIY[0u>YuP]tAiM]13'So?W?MC&*j$^%EGX_p<hF9J]"3]-$VI4D*SGCJ"f?-l"`KV_:eb;9C]q$j*#hX)j4F\e+*1#,
%j7G@.>cQ@0'jao;_Qahr6QS4q_Bpb,1)^EAj4L#Pk-B8IMKI27Kju>p2WE@o83"&Q.ZOs>SoJS#J=d(,%@H"2@hVCG`3C=/58]^j
%a&\N!AM>*.@:/L/NXbLPN+4B*POBT]`^V]1fVg&6>=$[:7DE*'Yu+h3FqnogI=9Mqb'gtNfEq^dOiCGcG`=O<+ASOc[T]c)N6.@C
%jZm=n#l-esURZ"6:d-h@*ZEdS>WsrpVBe%7?_90`L>qbl@r&J`)I$^<c:h_`Q;?j(2CaR'esKkBTWp@bR3W[iPY>S>nj6ggLG[K4
%>.q[aCotuA)I$^H.]Lm+]<DM:,15%HX%sWQ`C+42P%\ZkNSGR32TV<+"sqaNTY/Y(>$YJl[`6l`RMcPQg[f^ioLIc@q*nkHS7ufp
%0[\P,2;`(`O>Dk*8uAl$CV8'I._?H!)I$di?_jrX>Pg`s"#MscfJ&:s)VaG;J84XL@tS%[*GB7g&rd>#obSMcjNh9_d+G"%)B4qh
%NNFE#r`Y)s#,ZO?Z.7E4BP[\'hdlp/)[XB<`cdS7@gfSs^8`E>%'mn3iCROs#aB%>34jL_5[t0oTWnZ#BPb>_6t<8g;L6dD+D2T3
%Pr8]'X\+/p2iS8eVQj-!8HOmRZ<cIB``?=BU9T:0S7ue*M);Xc)iY<AO_JX9!FKMV'a0RcA#lgG'92B-M8g<AV6O%10bTHTi9(mp
%>@h]!Up3oV*D85tb%/s+NNFtr-dpWs$?m,BX_qqIP%\ZsI#LU+X(\DnBPd(IhIp_e1QANA6Z8d*20M97d+BIR)B4r0A#&UfYuLuC
%,)r_1-Uso:4\*mUWNrS@PK&=f.FZq2jcaCp>lHs%ClgH4NBN14NK)eO-]O++U9S^i6t>99T/8I=?^\o'?VdE$nIp2rfN>5=BPd<J
%,oR_(W)"<Nf=$OU-EGrE:1N>A:Dt266t<!TBPdUk#E;H<*,04Ks%HpD-.1A*C,@iM`&!A^%&Xm[S)TCdL&`8a)B1#b(E-NDjbq,J
%@W8'HaW1)KZ&o6\BPb1'RDsE76t:;kBl%UqP%\[V)Sfr'>=00EU9QSk2A2#:.#GreA>?C1Js9tcW6opbZ/K4KNNJ327:Tg<P:)?L
%Eh]g98Mmk6l5P]lEi-)Rn!%L%:gRgO35&!q,CV]$f]9/[d+H-Tatu"B>Xo]::a1!1aQh:[\iS6kE#LAd2S<Of`^]lJU9P^bdF_]I
%)I$]W7\m;Op\gnmiJgAb2QTIONQqLI1q"VJN=?-81c@<Z?YF6]*b60.#J3B6P?'bP1cBO=8Mi=RRE!5aj[isW.koB'TO\r[[s??Q
%n40@\_$-?CC`%es1cCA`M8mPq6]&euPXo:GZI.;aW$`K&Ie8?6`cF^.2OP]iNK*=RShr?f,E7\0-5r@Yl%@!qn6;WliPWbo[\G)d
%gQ@K8f!t2[1cF&c%iQB/9VepJ2O8#mYkqd@D!]Q6BP]4d9f+cXYJ/B9\.VIl2QXhPNU8->?ng8JC^oVdM8n,hGb_OOCOOU_g=<oN
%CsCnZRDr9q`uJc/Q2[+g)I$e;IA!iFAFq,c)bf!6NK%\IZ&'*-Cna%*ClgH4NCoqM;0gUB.Zaml`Wda:fH<:jCj!rT)I#W`VF4q3
%;XK1X<k\6ldFb+&)B2b':Dt259Oe_^db)&[*DMC1<aj5u)I(0CS7la.PeYStYU2t!2RrW?N@cQ@`cbmfYuN,N72fB9jb:^/f-\u!
%55*/9NU:d^D_sAnRDoFWe(?.n)]ggoaGIn@+k##Q_3;l>fki@if]pM+au$O6Qd:l8<k0'.1c?bM`qD,EhIp_i'9/!`7N*5,rhQf!
%/scX!m:4CidFaJBBP^0s)I)>$(MR^YmVaqj]%\$\%7<jeYoP.<fT'c)[`[f:@'<QI=AKi>7D_EdZ,t7L1q'&F)V^C6``=[tf4]!5
%UaM.]Eh]g)aYYn(0/U,KgD>j/8trRfH.(=fB,V`72q-FED>EaZ`o^e,far`46t8;NU9P`lBPd5YOiE.;r!SJnDX:&,URO0hf\f)E
%Ts;GcRV6O0dO#me;%elUa?jBPJ0%3!)r)eo1cEFC`Wda<fW+]%8i/HIRDq]BdFbtpPK$XIrM$RU?=k,1;%el5AZ)fl'?N)>]%.7K
%9r@8J@tT7\e(BZnBP]:^3!gb]9Okt:q*JTO)jk;Tq"tba%1_P;)B7a2A##3#Cu"\TA##Q-CmDOmOi@UeKuSkRb;?YbLh3<c\WUZC
%7lD8i?1Wuo#%ug$N=G<n9Oi^e4jhn3>RjOJ)rs\&X5-*F7Uq'DoLWPnI=BSrkW2Ep[d$$8'90-FogN@X"?k5dNfn'l5unmCS@XQs
%<]LG8e(>ME:GasXlad.WNQRI)7QJlKGd'SGj-;fBC^=!N)B5C[ZWr($(6h'o$`_S+.O/+]*4#i&rI`*jOj]J-CpiY(@m`l+$]PVd
%$]PT#ltlN+/f:%VM8n[MVQh/pBP\ESck;>?Y4Y7o_n;RTCfn2X)Oi7F`cbmfZ!ep(1c@=GT/8G/)`*H_I]u4MK;[gb`WcZTVQjRU
%(E+5.Ng[nAAT"BMU&FBeNK%MDM8gn@N$=8K.#GreA>QP&rbS74Z"<Nj`l94M6t9^3pdAV=3mWjsr?ZB]Gm.fSZ*c@$BPcHXdFb,)
%d+B6DoFm4DXe?Ae%JTgT`^Vu9fUDFL%5]tGlT]'!I$0?+"sq[Lki7$<f^K@s)B6=JRE!gH-Y>ab)gsT#`l?@kU9W*Aoq\iIbqRMs
%i&]";2E&U#db#h@&nl+:0%/D9K7D>%-mooPI5m)'7b@0o`l=ZDU9R:a?(eI]om<C;$&0YNf[sOmdF_R#rLgEX)3ANJ9_=<$[`1l4
%K>tn`nqkB+X,8_l2C!Opf\#U?db#Dr82N5]E'@rOo_TpQ)jNg$e!S9:NK#O>'9,^i_abUama)?$NK0K!@q,nW6t:isjFtSXIoN;M
%Obo36D!Z<:TWp6BRqQVs:IQ0@L<CAO)a(j&`^]=6PK!eee(>K\9JeZ)=?L;69T;S"2T`:]1c?gZ)B2$uOiE.)a>>fp(nWWCn2rIc
%XYH;+db#Hu6/OLW)*\4_NC.NVYrtV?1RMD3&L/)&)B6\n6t:"m&MY2n[at;LYsHVk2CP!57cd3OUE!uaZ<a-.0m<&^Z#Pk!1c@`/
%15ua\oF$WfK6=&rEOJFq2@SIr1cCBZM8n+KE#iY/<1YqT`b'a``^V9%fXU72`Wk0Ce(AUGRE"rJVEb$a_sDcEYsFss"<&6He(t1d
%%Ec`Xr2-_rVFbJY2CcqL2&[DE2V7r&Z-eq51cAmg,T7W7QS12(b1KdkYuQ7[OiE-7+*K*V1cEFOmm(AmC/CY0ELU`kdFbBE)B41c
%\c[p$8h9e.`eMEr9Oj8d=JW4PdGAPQa=bRk[`X9-5\$jN>s2n<E7/A;>IDhke(A'5^X1U_!?70@7SdZkZ-d:^Up3oHcUSmXFVqI4
%f\h(#Ts;uiO_AQ-16%:9PK!eee(CT%)Oh`36"@gSAJuM*>GACMJ+08=<Mfpg)B0]POiCE6LOIP%Y[aE4iNZo3)uQlm1cG+:16%93
%8#3C5@ducpWsGFH)B6=KRDr9?H_[k)FiuU"*%]Rk.RMW\)B2Eue(EkGMDR6hkR3BPcB`0\'G?B7b*0gL2::(;SjaQ%AL?r"`eK]%
%1cAn1,oYNZoK3e%702S8``<D!DLof._0Ckp2JhqNA##Q-Cm?aL*b]@dk$$Y![`WN`"r\GG6t<:)n+Z[@Bl'&fnjm8kUeUMLA#oB&
%G58#?0o\6AfT9Q&``,VB?>K1,IaZjk-Q63#>Mr%^UU$pMmeqeiSMQ8F#";aaC@%,kP=?4F%1\^[G^G^qL?U,8fFZ\]Ts8$^b;;-<
%c"7k5ZL4;@2T.C,N=E&J9Ok,.=?U>6(gI]5XmYaKA)m@UUp3qnSVf6^L=@E,%3`P()B6@\M8iT$d(&53Z/HS8d+IR%9/JQ:Shc97
%0#nbH)[gp8N=G=&9Ol!4s$C55SsdTQE@KAhkW""=fH=fF)pU(bfVgoHCt1T83/pXUNANO5re8?mNR-uK[L+6/d+Bhq*Y0/.a4j!l
%X/(;:)I"KrkWr^rT[np&0cD!0ORF*$D"nX=pN3(5d2A?cCmC6<)/*hGh%ptK-B(W.6^Tg]fFT0STs6?$+OSiGCSnAQEdFFai@6UB
%Xbps4BP\NnT/8H*G%DR28,#D]X0oUffI/*c)jOP-N=AL2[@M#JO>Dk*kF61%:i>%Z,e%.XMoJf-fX_QPNO<%f)I#LSNC78,9FgKA
%``Dg37Uu>nr"k?p,0M7ZfIE%d>5b>';-l?2fUu2gn"%H&KpHhXYuUKK%l?0MT9BX>2Gq2&Ctu;`5\$i#SR!hofN9U]ei/Qtj\UfR
%L-hiNNBgu(%.&DkfMLFjBl*Rh9Oi]8n3UWK'#$V@_sP`+2JhqNA#gl6?\-3tXc9C1fO4$Xd+F^>&8>qqDagD*<V@8Zd+C$dAJuN*
%F,@m`VY5Y^<Xo)l1cC`d0/U,[Y2,5[L;>%^f]k6=:85")R7"frU*HM><Qc<(1cEL5`^V9%f]q1/1cEFC``AN)*GK=d?>+.T3^<lf
%)\WMjN=D2k$]U-dU9R!U1c>V8)I&KHEIl-LY]Q\G6$T*.<Aruq1c?bM`WgeRKuR.J[R;#Q@RZ-nL1I_?NK'3BM8k:+J#9IodI2e/
%L1!cRZ(6,kdFaQ.rBb"0oP[2;)jNg$j/u/r)rs\&K+_j6q"'3Z`l,\]A#!ZbdF`uuGbMB.c87G"2\M)Zb*0gL2::'$.hdo%b(I^b
%(cMm\2FQLZNNJ=%qaG")Z=BW6<OS-L1cFJR4DAVs*rAK<_lfEIelX*oTWtn&^M%G^Mp+"9PWQV+fNPu&BPc<Ye(>T6H;>G`6eF$=
%fPpMO`eII=-]P66pD8f`PX&_O4!#:Zj[<U2P%e`/?>+0"gK,8PX^+EV0cCupg(tYHZVD0nNTZF;ClPs`#E=_>U63I88q]TB6eU[e
%`eK$fe(?>iAJuN9j^)V:>ULg9>IBnCVm/,JV\Wu_*/u/%%:<tHZ*Ch"8RnNcBP^L#N=F#<NK%KtM8gl^lUYN\nt`Oajri.*OT(kd
%ClCeHBl)e)O#49l[Ch(1L?RA"NK*<['9196/fTe0'h(n:)_JKd@tVadBl(WjIaH`#,TLN7_J+i`[RMgtK>tnFqF"h'Ti.Vi$*!ni
%@q3#$dFa,f&8>t9ogrY'J!NK4A'mW;Yr*c[A/ZBf&W+LS2)p`<ejaq[Z#SA`@r(]]"r^]U*;i*4_ms:r>GIT&Bl"2Z5A=s'Lh.JD
%CF0[R9rLeD1cAt,-Q3q!,Lb<'a`sMa&atiqCaAWU)B6lNShr>SK*sLo\ssCmND4tq1cEF;`l:oZ6t<"_Up2X*SnMpQFGht6(9fo7
%Cq076A&J&'BP`L3^<kLP;=-1u*%TFhE"Xf\2N`K")B53)RDt!U51A.df(c&G0bHXtf[s7cdFb65n3LQ"dZ$65f_COANK#R(-]JQW
%8>`Z.3m9E=N:&>U2WbfE)B7++1Q;hj_3;lnPbq,aCBVaDBP`Z"rK5*S&9"GN@@J&O)pIM>A&FH]e(Bc%q*JRYnmSE#_./^DCom&R
%d+Am=b;;,g4sH!Rkr(aYom\-ENBYrANK'n;M8mQ-Lbq!s:E!GIM0Gc#Z+X24Z(_*ZKuO<We(CTE)OkR7TX"$CM8f`Ge(C>+d+DOZ
%:1Ieo^-lJKf_@dCCJ9,91cB`MRE!7VoomCMpGp^TkS?fJ2EEgh1cBe%OiGE%O[N^>[685?PS9%98trT\?r%[[MNT`SNTdK8A)g,M
%Up708RImtq%;GXa5[ulJ!e1AVBl*.708q?rX:\hoK:ou).8n8G6fD+@Z*@I*K>pA<dFbBC)B6@[:Dt1cX,4h#B7$M\6$^o2n3nT@
%S%+piN@bEu`cbmfZ(_'L29V\u+]Qga`%ocnfKJ,TJ1,K88)L]$fRf8-MT\J!'0nfG1cBBqGS_TaNFjk[!tE:?;jm6,_QcsEWuN0"
%("up8@q2qCXW<@ka%!J$_daq[Jh(EmZ*AL+m=`Df_g<\i5i]-.EFp8]FDQBpf[pi]n^qLT,T[m4-(d:Xb)+.cN=$kjm5["qd9SPi
%kj!KbfIB0POiIZ-=luu/#(,pn(dL_V2CaR(`a,3!2TU`q7_`QpZ*EZ[a^_(V0_*dFmGu>u6aFZ=Nt&cc167E[Cl-3Pd^(<^NH4$`
%;+Wl.-=f5`C^@L<*ZOG:,*.`RQm[rsY*jQOGV#9'p3`T!rLl"IqW+n]7bo8LN>j2c)jD-[>ErT$i3CZMR<WOE??g:*D.F\l,A/1j
%f[/78KuZ[#-h5h-3UMsL#1NL(a$r)ZfUuar)jD-[)_9VUO,](8`+*T6eiWKU\;!a@[O.Z6^gk9?qSHb&.%>HtaKJ6![Ne0]S#aP=
%A)DjU@r'Ql\<4hO/ua]J`[&=7A!=[BH#,uN*h-D4jKW-@Hf;5,:-:EaM8oh^Ku_2u<8t0j\MB5*bsn<f[`4@^o%;U33Uta^P4CG]
%X?8E=B]cSIl@/<Vf[_8:f]]Jq4LQI[*a=^@7)80,`+*T=g=@Vm)g9Ig2Yt-#NsuJq(EQdjj7^8uK<$m$f\f\ViN^e\RWrXR"sk<0
%!tJ*J)s,"JK9CLrNQn4>4>qLQ'9A,Fij$T`%iuZP_3r=J+)9rC4bqB?V]l]M_INIFWL:e-bPL5'Tb?[F`s+QqfIFq&aCBkn_IK>\
%H#27ln^r*Y-]^tgl[d*2e=t/sWru]kG\gJVAf_lmk*a7j*=A3ZCeSA24>n[Ga!Sn\%iu\O`+,PTH#3E+-]\`$1muC=-^/gl7nGg$
%OX#nr3B*)@L1K!CO,]PkJ]Gb?A;S?]gqspL)g`tY*ZGdT,**0n-nd]ke%EITXQteb-H[-cbsgZt0eXjCfT6F3_IJd/`lMYB'pNu[
%7nGhO,9)[QSVf4aXg3f"K?&^nRsAh8Bo\=r`f-\uO,[o6Yu+(T2CM?B)h&t%fID6`6lm;3(EOOo3g%J&Y'>fD-?%([a+fPSb[\O2
%aZR#)7,ZLUNQ9%te\krbg>*-tNQ&#Va2W:[OiMWuaCB;AG\m/+`+-^.rPE'^]9%;S0_7)]m3mh3-?A1P+akO*fPl%AG\fn[cTJXN
%`;n1n@tVuQO,XT(,EIi?0GBM,Q)IJ")s#4QK9CLrguc^gX0$mAfN809G\jdJ2]`pX^W^1tMH8`A*@:7.JkR4)%[D<UprsTr)c%dM
%fUuar)jMe3:#sB*UQTk<Ehs9f>@e?%aCE,`S9\p@8NaF(/!$fQ_&mr=[IuO#)]qf6Yt6>'aC@SDh[>JS+&1n&Z0,o^Z!m3JiN[A'
%R!<F<o>j&&UZCCMA`L&G4oRA2fVGhP_./\[7?PWF^6+Puf'"0#nCXOB;WP)c4?)la@#&>8)cACGNt%]P(ET'eOiJe@jKXR4i3C*l
%c9+!7M8r*Ia^\iA3:PSiGNQ0H.Y$s?OGT-GCfnbi*ZJ=f4aCk*1QMu;k-8oCpY`<]2.GRM-%uNch"/WtPLc1Ra+c)1aCBjLr4um\
%.Oao@TO]*J:a1rpjN(iKS]s8T2B[;9fU/ZPH#0VU0-2(D?bc*_+D2`7gLMZQ)iCPc4>s.+`s*j]fXT1ia2Uk+M8t@<<p$Y1($:4j
%#!);-TO])_PSYA[jiCrlSr(M-UHa$?\;\XACCJ``*ZL@lO6pas4LW69cr"RpI/_B#CN-K_*ZKj$b[W_,iisNWG\gLZAKDdp*B\U`
%8=@R^2Vt[V@gboiYoVMBD")[\*a>s!6K57I9g#jbY0:CnCAYhWK:$q#<$IB__NW#pj(BE;/+&88##E#BO3P^`hla+8*nsO)O6t$.
%A!<Mj4>s:^T0,$m'P/>TG[^c9%5.#a*ZP$qRE%d(CuV]?-1TVUN]]5^H6s\;6ZL)/`s+QqfUsK2)hfZ#%<CU9;+WmY7UkJ3a+d*Q
%G\jmVM9"aFjKZ7/4>t3q'9B93epHu?3'eo5)tPL'O6m40`ti3,?6YFjn^oNV^@9eMp*Cb!L5sJfK3S/*`s+QqfVh1Z)u"aNfI/*g
%)jJQVKCZlh_q>27)lpt'O6m40a!PifYqaofo%<0QHh,gN;3?*>CqZ<_Coj^ao%;Ud2Y#F-RUdHYY2Y/UL(+fWNS`($@q4ZLPK1[8
%\AVleg4/+e"XW`lNbgg9B#u;>)h7Os@q0UEn^uKV-1TWd4F(b-'9A+XM``oDdE4R0Q9?K7)q0]XO"DcBa*)"RZ*b7N;TtT:c@,37
%R(JW.ClIj0*ZLTW5C%(0T0,#t[3Zk5%F`C.F!:)+>W!QA1?]@3%0K>eYq[8"H#-TOA0.3g%j'JfNQ9&aL5Es*"jIF9XfhK=@mf*J
%k-;1%m`AskRj7OW=@E&EZ(YJSo@W!T90>*Xr4MOOi.+Na2O(=S*nsO)O6t$.@me41k-:WNoS(?*nu'Q=X!hgX4LV.tr&Dt$qs`7(
%p7fVf2S>+F%-hSjJa5!JjEr*!33h+D+u$LC:i%]B6KGsRCa^EZh_9]8J<d^c4rcI)S@PLp$lcZh4&OWg.i8bKNBCj-%26R4HW]G/
%7:<`i/tl9,F?s<U+RId%9bC:CH8PfW-C`r="(3'HP,=5R`mBigIL^g$>2?SR?gHF^^u9(5rfAClfkYHH#Ogk6'W/b,1[l;R12GAm
%mMaTdg;0qS9[hRdY2M@RbQM5;3b(3l%93P;'VhY$?,Y8p,-G?g_`'i3CI=N&c<G?5;8#XdZo+ZOm__jgl<X?XXeFnhdB^4./Y3R;
%XFY7Mf,&!-,&32[Z:5%5^COf`d=kcU(LjN3[,QnLO2*':'@ou8Np\kEYQg-K4mM",iU[p&G/P?f6K5$d<V^B3YdZ,\e!@B%b&fKF
%Bh+i#?&,G'IGO\A3GOn0>D?"m_RQuH9i9@r,A3sKQu.n&Lg$'El\D07m:.o))U]SJ2aFL=Yd+C\>#T[Xj3s6WnO67.P#(0.1ce2_
%dM`e$<@NF@lngcOn]mUb\)s)-3=V"R1Ro=tM!hRs%QBA1SC]gS[)_Z]`bS9g.[[!mh20XgJg,.t#,A&\0ni/1e?m)1RWB`j)TBGA
%_5:)?l[?!OKpf0QIppf`A\gDc%16r4a/2.:=']1cZnf!.^p.Tb(5]U_2Q_oi"TfR2<nL8aN5J@?YQI@#LRV=P>#ba#3B3#`<8]jo
%KiE@Ygb];LH't-+R?,D!Bi#Y/E,HR.-9u-[>+$<'GA^Sm';$uh3:6N4J"EQultR;W-#ac5]$h[i`XV/W12n.re'H4-"Afs[G&A34
%=m?k`mIO%kl(5.oKk.^79e03NK:R`t&94UX/Rd+i?A8Lp=4,W9P^9!:'8-4m^R/a!08?@IN_Es#Z/#pFD+\POk+sd7I&qrnK3c`%
%PL7gUL0ZPc%B8l2D/640`9a9J6r@YhKV;Bc8SRDRa!qQ$V#_T,O..kZ>Y(6hUM<%da@,u^Zd4r#V(s94)ToipGd21q#uj7F&HX*B
%Lr)["[;=*`7JqMtJipruaS9EMl='c7"=jLcbnp*6=XPsCg=]9ak:>J+C'h>$dGWS'C,'_Upn=sdT463F2?RqKg(>MCbuJ8J@Eg)>
%B-j)l.ZD!)M.i9t7rLmdCGH[5(_=lFKL7i$da2A2d?A&o[*:@d*uTdP]^d4;BY5pD81.3J:MB8f:I*p4'uXho+."U39@:PPF3mNb
%lM=*m1s!&3S:al#De-D4ER7=aojZpR6'eNBCB7M*0j9Ng<nMnHrQ#g4W%:,Q$lTk@!JWn8_Sp]XTG9NZRlJGjTRq0=Y"IlM4U8q^
%9d8\0b4l`4BU,^L90F7OAClVN_`2=Cq4gA6Ob6]f3NKO)6"@AH.DJdk)VYT24d7p>P]\+66@J3'FnB644s$8rZ@kN]RZF#f*J9)(
%VY3tg$l\-!g358\cu<F&G&uT(Z"FfmQB<,iX^>q>TQ*EB^4Aa>UV`CPER:X$%.8)]-sOU7/mH_]Ae6dKHV:BP6dTfFde1s0BK1@q
%H\\9)Os"F.2$b+d^Gh-+A"+5.e[Xg7&@?In_#A.`4hdG<<g_'^-%2M\@7(e:3sCV>?<RC72^@.(dAi*=1fAQK@CdrKQH4s0-tl+B
%'Ju/IK#U8-X@"kT=^g>jUf/WJ>$4mtl5KeFdG#1eTXg.$BW`6TX^E#>N1,mR$HLY9s2YI&S;FcNHpdK$`08:9g[#lrnLP:!.*E='
%">mEj\"_:f$S"%EB*&u^\eprf#"A<<7R/K*Ctu>@l*Z/MA%Np4TTT#n[_N)*P?2AgUZgNF+=:npW:Z>=M+`Mp7*\YkeVsu@1rh*O
%Rh[9iO*24#hcm1\Zf1UA\4T"J8g9q=lia]48dJP37Q)K#)qK*4T](#)ZeMr.;ptAnJED>n!nrcrJ;,;jm5D0dOQkC@"4.DQ)*Oqn
%J>>nnn^"!]c57FL`^VpV*S\.L*SNC#!,.YY+luRTra#$,NSP*F%1;tu3rk8p86e?e3()"?:0Rof6X(ZkbB'm*>1?+03"aMP;'5,W
%DWh0\!*W2C!:@i35f7iX[#dY$OHrO#%VG]CAYmVBLOVdI/d:@/Z(VY!OqE0jC97_j`Z5pA2uK(K-Vl8PcS/X]d:E#.9Zgg%)?/tN
%$%I,/_k0p]h=81ZLRK4g04k=Ypb$6d/5t6b8Xl?.8V>/JcG,3b`h#`&1cG1J7LpeW.b(ONm5:<rB3``eN6jKdgnn8u,qcK/aeOI0
%:-U7"At_00k[t(`VM"P@Oa^@--0mUiT,!Z=C<(]S)%+!0YPgmSK0`UQq^^7!d!a=Pk=g7Zf@9932WIZ'UhjuWhHKK:i+EajM4Z("
%KlR-3oGN?pJi2sdlRi>:*.53&c&6Yh+;!V)Y\+gCR+Plt1Sg,UYV4?ZS?:S5^cZ+pcohp1Ci*B1B^aYhX7QNWPO;0NGD;J`WVb&f
%@#!\>b-84OQBnl&m*0M!)>9hD.$;f@2Y1n7)(+*@bMeuIg6*UhcBt>#C6`8R0\&d8SPman&0Y\h)WM7*1\BHAiiHN;iQRB#B6ZGH
%`coF*6,B[Kf]D3ak'WZaMfDdbSNlS\3.o(a0k[!kQ4.GanS(Q)RE=j93.o"LeKAM[Ji>_Vc3dgJnD67fXBaK0aWY;n8F/Gpc3e>u
%"6'^j%:_nuQ(i\+1?+75df[b+`3*4g(ugJZVbNWlB=J5-l@q:QqnUHYRi&DBHQSn`iI$BaJT8h)+gq3*B3+:3\%-G.`96*I2(g/A
%RB+=_.g4<OI#Zr*$=`mW__]N<+C!dTrn4S#mLT5@%PnJbKUEk6?tQ6M(Fk'*nTkOjY7YA9)=)a,R6dOedU?`a3cA/QR6ftSkV+eB
%pJh^IN!cZT$o<Mee[imY_s+I1f+DSJaX).]QKa\"aF#nY1cj_LZ_Je3fo_8*-GM8;\I<7oet$B<=lIS2j+d&n2Jqg?DG;`=F*@ob
%5NuWWPSkL>MiD$WATj;k1-;e7bR3Vu\DC/K)*B$>Odo6[ODd<I6^^6.b;SDp/Xg:7;.bo$n1^(EQ$_nN1?5OAD)088e04698"&=:
%b#6M]Ak,E@1RB+nL(=DqFXNE=U>6A:b"Ur)2@`f6Ml5GuB(gGaR&T/Z+nffjTPS9sN._TSB8.;]4N9C0_kLFo*F]6I0Akq$0n[^E
%clm"#L18Ek(?2LK^:te&PiqB<@KqN-5)5LkiT`Ejb]%m>X$Y#;6@k-8?4&E.,t#n:C_3pnD4UBZ9t&TsPSn*1&rY)d]1`/?,FH;O
%;!7`XR)'.T6!`T=/W1to^'kH^B_4`>fof#tB:!$iI[,27AF-5>erc)"2D9DY<CQY&2L-uoR0s=*G#Y<(_/T[3hl10hg?i#uZj_M'
%NkE@_6gi'=eUoE*5as27bFnE,)6aMSio"@[18\>-"RP'hAsWW@Vj.9AB:\3'`]6@nPoW^uAJjCK*X>$Op7+tkKC%$KgJl%u,HGVq
%I<?1&N;]U,rZ[W$O$gP1!L7)DWiY)U:72D+;s()Waq+s=k@B8Y(dj[%PY3;V?Se!h2XHkOiK,fr18O9X"t@G,c+_[;.>+O!DGPqM
%+g`VG3J3R49dS&EN)Bk(a<bs<O\uAgS.+4C.Dr=L&7eBN>Vf&OG=ibLflDZ,n1h;HAZe:MPd,C0bVIq5D17k.U6)[U,Y6UN'iN'*
%TmK@=JmH(;adBX1#u\dc8LB]@Uo[TKl#fPMe$FJ8hClu5>URB.c]GH\br]X$Z=7+f*)Zup!P8ah.gW"*(8r[X$nL6b#/!:FE8*8E
%-:5j'pMq*^&1$gUN3^=KjOLs]AUKLX6&e_GKn2-lPgKl:7a")^i<>r]lAW$cK"lF>AS#.SF>EUmV7V`7aj<>BnL:B"<O<'_&YJ;u
%E'H;W1.`jG>DLKtVj"pt6LRgLP>t9'2`_hc]+m';et,E(7Tr-UP>NZ`6VG_h@?HAY_TAIt?_-.dN-&IGFZ>e"S^$D<ZANoEbOu>l
%,K>:u^<t%Pqpg=uATT]Y/]1_[k[a%RO#/5:PG&DRH)1]mWsgA:r<4Q9>r72V%O^::iG3Hp)/cn8+ph$LR2l[+:BlMjEp&XklhMeD
%-h>CCQ,CL^4rG*Z-dF*7JosZIP<l)#cM;!%d"Z,rHnsJ%NanJQ#"KJ^@Lae2!b1]b'i5*,-eg4c5T-RJq7Sk_N0jmJ@i1jIGF1$i
%-Bu>j``7^+b,TU<0gZb48qmU-TrdaY)##2<_84-W/=B<=R8+_LPi9Mh(K)WF6(rjl$"]2YmQ$u"$J$Fs.&/Q\(SH^a&e("".)Tb,
%i,V(c+TVu.A-/!\Hcqf8J?m&ai`Zhb%&5'g6^^atK4c,.;8rW;L(He<4ic\@PZs^i6OQuk6Bko/@]pJ5Pa-)o?UL(.bJJiC;$L#F
%!X?BLQFJXh;+:^AY)Fd(9_b;9b%/D`82?KY?deTs1Wh[VXsT8Q#4iChA$1nLatQSsh-"?S'gnHMUPtBG^%fSq6]d>]6^^dUR>FM\
%-nEa`N5d9@_G1c$;$NFb7miM<f_V@2P]9KB.o(mU(aa&sk(kctJ_4k[Vg:PUTDmK*"hNG)TF;i:(Y^NW-Ti_,Ym7PnacN`['@(\T
%W&,_.:'P.8IFr)SKj+E_9a9@;hEE0J@B)1d(;;p'5V%22EQPFUTrZ\IAE`dk,KHcoR$gJ#?ViN%hgP7:,b#^5FX.j5\GA.IC_iG7
%SOeLQ?h`NATldU,p4X`\\'Sr]7YX@^AC7g%aR1KU<'l^am2#%619MATF:d,<mM6=G#*H`//uND+Z=:([#EchPB?W5caKVIOeqet"
%k`*O/b!BS1Cl[5`5\+!2dr9:<=V2-`3?U(:%f"=^&/kEQqn<Ss$jtg#%O.ZG^H#iDl6Mof7KrcljcFJs[FZ4M%-Ig&a"_,7C%TI`
%L5[/R3HW3$_%4H#+NKS[LW8GL@E8eu-Y4G<0P&g56N+nI_c)]a53%`uJ==[DKHW^X]N4p'OQ"1BCagJ<1*2NmoZ/.b>'@LgJdh5U
%1Gt.W[V_O*!&@6&D=#.^6R-hK@:^3/(?ZLg7S!:lg\K_#JWFZ=o,U#L!Xg>U-MH(M=/DY3n2DR$7NMZ2C$a%agJ`$]@`N_S'Pk\o
%qUTu0$lur3[URH8pAa@$O^m:DiL(b!-B)Qn)#O)DJ[V@X2k?TM2[73pA`Xr!+&mi4%5nDdo4V$'7FM`8>DmVe&N,=*\5uO-%klCb
%J]884-&=GOY9J:>aeE[qnctDap;8:gN&DHnFZOq#O`/Gp/$#O5akB";UE[^T2?$4$0dI+V,$f6bVR"\<dO*8,d37kVK"E9UClDT`
%U%mi61H!hP;IbV95iV6&\/8>#UI[QskM9.'mV6F?q\q#>iCX0F"r0L'WHL@)W#/FbL`h^O0uOgFmP1RUI'@F0j@lgVQ?En#821Me
%[,VTE<`h+j"\0Ca0pFB41(hJ:Tod,H,Dn4+,t3GQ'LN\Ep!".S;Xj-30pH(OiMXQ2`g5^mAr05>SK&r1@kq"l,Ve@jP+eI4@]2e*
%$%d39OSs2UV+<=MnCDOu9,+X81MRpSFuS`#Wsg]aXh.DX%RLS?(\5^CKk"'PEtfb:K"8#e2]kbj;2c?ar*m4/CrLA`Xl,&[%RW;1
%</<.Y3^=.!b7u%PN`&u%B6)Y,M3e\^,IdN<LDr]t%6hR\%E%Lkn(amNaN;,P&_!UaBO\KSOeH2V_-kOs>Im"?AD"$OEAB6Wi!!i*
%YJ;j19Vq=;J7/_m1@gcV@>rGeWi*?\lmR,]L'tVk#6#5eCoQg[YV9[=e:S+o\kYtqYeDZN8jQl&Q'mYES?O/LR42R>CVG<b_B;P.
%N'V5+N:cuT&Va6u3milt2K[5g5SuPUU2<L,KQ[!\qr)e(G)<9Mk[7CrKGb8S<Y%Qe$u]k&q0<:8P^[BA!3)Ye@'HMg"m:IpNO1b_
%$rOj<KW[ZGK.<;AeIj.D"KR:aeo%a)1D5YII*s5R$&5nAQ%d?11,O.K:IHo'=)XLYU]V!V+a"kJ(h04L#rqJ5^^.kd'#2l1@!"q+
%\$Ee+\LFf!nFkg=*<k$$W5M88]nsW\K>:Sh2TGiLJQmtVh`5)(h1*0f?j'\DV/6dJV+J)?!5#^h"pk=MJ3(Co-%H`?E1"=H"L,bW
%ep%':J74>o0]`Ek`jRq__'oCYN84C9!#+;G3rCXua:_<Er%ICgJPbBViF<Zsd.gtEkX:p9?WkD#/IID3'ED/bD^kk).!$@c!#QG5
%3<t(#OcWrPJ3df4]E>qVZ^uA&!&,g!6'VFXQsnZgciIM_^.V!ggYZJ/B4c#cJ5M%cc1kWWQlT`80*o79+3(YAO@hLOIkd2B,QFgk
%H._R=r`<OUeuFN*"\%6.)Us?&E\Hu2,6+]O"CV9uq-OEFaP3Qh0;NYH6(nJ](MgUL(o-jZ7*-`)DYUEPY".t[-2\RR,d`%As)gHs
%LAraIke>dfri9/UB#fBul/g:,\E?t$n1Ua49c3a8!c89QJ)O27<&4=Y$)h*r3W"^e(FH+"ql?ql(\VoZImI\lPbGi!HUVWU#sBG.
%3/;&<(Z^K#@g;sr)p-$e@:#`UhY.0Q.Z?^RCK1'FU0C<_GPG5_hR(N1s'i,Qlm%:8iFS-NEeAir'7f&J"TKtDLmNPJ?eA@V(C^:C
%X<]:5^Im+ZDhih9\rZQp_nQNp@9CStpfAVW['p/;_QI>f)#UE7kD%GVm'":e0g#VLJ)TC8Tu[;l6F[iueB%W@b5;6PIu-KEPd]LB
%HQMquAXYL]s+8,e?Om)c`r+!KYJR(Nj[:l@?(.37%faB^.gJ`:0.'uIYcdIKT#Y6@\\c)gmhT!:&cTb$8&cParl#S!\dJuHL#PUK
%q%ET5UOp>j'`Nf;83Cnss$@ot9Ebb%`?buZ]++a>XAHpq?_qJ+ND0B3=<s3AikP!AhNB_H/Z`_^r=f3h1@+^prro5'qA9-KX*qh!
%=FIGs5FKh7%c6<_^P^DS1AhOUp5Dj1r!Sq]XA3a0(INUua9hhlmdIb.p_QSYDE\9,Y!?raTtLm7@P:3*'+Or;9n'.\^W7;U0U(F%
%#f"cEFSHZ"l!,r'r/2t,3h-i\9>IrF+8?YCo3>]Br2USZ!bD'Be&V8e)Z5Ks3h57>rZttE?,,<)eXj=h^So3ZUt*37<SBW)p_PtS
%MQ=kW?e&%j*WB%AT[LR4?cAHO48b#%)I0dS=;rCs8I.oW0CHti2>@u>5"m(Qp_PX#1>PFn(J[E#).S.r)L-$>p(r@tQ6#&M01="I
%mW.q9C,s3r0_?1(*lRVDln@LrDf<]-h^f1L%RA&56H+L<pr*03"IS,r2te&*\E)o]qhqjbFESu(QS]O.j1rDZ>I.Z/^qZQ+Td'CB
%ZK,!mr/2:`iWW?W(DSfP%f;/]B/T`Dp6S1RmXtLJklteBM#P9!9=CCS^[Q56hLLd(&Ab/"P/(Es6f&(GKd/<te&brV"W8*hq27$*
%H6i2#,36sqFnQVXHWc"=qhqk09L2J@019tt<uLjm/UXDRM5%c+PHXA3r.RZp].4`nMbf]L&.JJjG?I%n$2fL<KDF[?rdnE(k)4f*
%$9LlIq`D2!3BNCs0AnMEH?'n]i%LH"be_B]0B<EoRc*816>60@X2%+%K!iIS!%37>Elp"O#6$)gVc2^op^?f%'NuFM$S+)SU)Nfb
%S`/3`/TSVo/u-*i^Qo@5:AlA8DN6C8f@5nB6bhR&+<&k)?Otc]nS8(3R9pB*=%.BTjqi[9I)/Kg.%P:k1;>4gh)!9RLiXWq(Z#?f
%:GguGWr@)@*s74Ya\-X3(R;EtiT)WG9J,0^ai*=AE8VNHnZ*St$OTgU1[kd+@Ucse^tn;.EoIm)6qQ6,`%R(p1A)UV$QgYMEaF'N
%ga`.e1[tjZ[JEpgpk8h[4om$[iS,;Tl(,R[c;t5J@PYr&*#(bG:m`2gJR=Y0$>.(,.W+MSr8PPW-5HkPQ(8<[iI)l+9YWgRGZC'B
%Ndq+n>o@%1^op@G56AT[P1WYuf'4?cClc@bG0#.5^FHA>!;s^EM*K:9?gPeV('kNI7@!fk%/<8&n>[2t"U.hKk']O\bQ-[O<VU*,
%(N-l=-sU.ji"nFF96mBH^X/:=p::jNJe3cG7lK?C>+I&#(HSn;&AQki4V>HU9g'0)Js)^_b=;Dm(A*1QKr=JeI^'i@,(?4ar<r.R
%E[#s0M8V%Q:Z<2@8GjZ/+VDJ^]F_jI@V+O8*pA^:RbKm1Bb<f]IUU6]0SOA!M4YQ9!P__TG\]akl$u3J.*RUb0.:p*)XluP/>&'\
%dWsd(P4pNu^>NX7T*jb0Q(h,/kC%@0P"s89L1=di41HpNm*BOY0CB,k/*">ddsl&@001gjaDJF?('W+ISoA'/pfSD.EMm(<+--4b
%8qSsp8[pF\Y`K'[LAPFW(K5knpJpQSb.'+Im/1P,0.L8<@,gC\/E!"B?\k"QiWC"T(TZ)Bo/>SE""N,o?lmKZ<e.Q4:uW94N#4-9
%r-CQUTBEI(4=R*<OnaW.93+#5nV\@GWB'L,$4Mthr.<.R_hh`B5e=aC*1'@$)>FAZL6c^jgq=gKccR?iGbH@G-;28\/;mh=,_K*k
%_"Th(0,Wb].?*Qm^F6GgPQAOl8;tZ@?^:R&OiWl>?``0t$G$8Q\0*?)*T1"a^<uT]pr.A3F(YsW<@oKY^b75JVKAGf^otVpPGICj
%n-d?QP2U&lYFn;Ef9)'g`CbKg3Xt2i6"8\Xa=f(N-(iLok0-E9U+j>MB]BKs'k@dQf?9Jo7fC1H-`%l@qF-fdgID.9_WA1&^S&XO
%,jH1I;75#.YGs/G`)8t%?YjF*rO='EX7B1/rD:858=!8i;88-SZ6k1)e1^a`i+g8>?F\rFL.T`FG&j7Nh7&$#MS1DQqK7Gor<fiR
%]4X=b$I#\_4chGj$[^;nmE@6[],7-IRte>7e>+DQ=!<%,N!'$1M\R:"B7@[`8io*j^Z]-lS0_`qE<X9\Rk_YpA=sKr?W;sC]U86k
%73&=^r.;f)G=I&/#C=uhr1]j>iqO^%>ic@g"ns[.cA_K$\#H`F1#CN'!'PC<[ku'Wqnb[\8`>F$)LD:Op,053;hf_:D9j[m@sua>
%RHpN[L),;OdMGk%CiN[a)nmW]Hk!?e1?FFFnPUCu7:5rEL[i>7/S5eg`)kj]i\eRhHBME7)7*WP10D<d?AM%7]-"[%KVd$JqS8MI
%EpYNif.a;.Z+V8NlUbZ7iV.Nk,($#=_P):893denol;31]r8)$oKkFB[)F2hCRO?=n@WX5i_g5G>P_ihk(SYpI^?\g'oMaP^GXQ\
%$!gY/0Rf?Z?='(=lFaJbcT#7[)K&$)Q]&lR6E1=O>))RYD7uARa@lj*og$/tgIV"L6+i5@+C7PrLtBAC,#HZl(aW`/M?klZ%a;C<
%Q/.hm3WLgD"*%^@!3b/4`Q%AXV>Z5!]@`luN\>\pWZ:9+0R+CCS;\:(]8KBjYPj1CU*I-b-[4BMC>bI3^)!rs'=Wlp-AK\YgBCc2
%Z)\^a4[Pt8\8'5?pkP[fX-0u#)DVCF&\EjRD<7^prNmH59r!^[JR,DsYj9m62U:7_aTRYPo=FGDRFLVE.@Ou/]WS"T?<=ClfZreL
%\q/oQ)hn`CN,ZUG>Sdn!UM=N5%dTS7=X^PdVM%*keA[a:g@ga/m&$Z5B208p^T8SYC_6H\9&F!PFNnD28;)(Zl07Pj0''jPBfn#<
%m4HX6"1j5q*cVp1/<8G=kAh`n\W09Af?iY[cK9^+OJPDQc%U5kjaan]I2]>Qb6<GtEl)io^&+LD5q"2ob/K8hoo$r2riU;_,Zg=[
%#R>D'h[.?bU;FFM'ShN_Fee06c8O7Q^2u!.%oO%ldV^0;i`_Zo5pd!VqV#<B5e%)u^@$X)6LbVJRh/h0O^\4U1,:F<8OF(p7nFg"
%OU]-,lKq^a,]H=X\2LfU">4D\_l="hE1pd8PR8@^X#.5[14r5gp1W1\Y2)7@RNYoi%$Oklnn=Q0L%6)S+Nk0GOfQTPl%[oM=a]F4
%VCB";N(D8?7rV=5cB]W`W%a&O+h/B'jg_K&/dV+<4+doA1=JiOKaTma'(\!g(Y2VB(DqjaNPM?t9VcVnf(KPFiI\pcS5ZqT[K&o2
%/p?A->%1)0=&SfoE(@#:4q+U2Q:+DoOmF=B)"X:R#T$asP$JYB>Zd94__VQ7'Nq@PKI\G__BgsbCt4juemcE;>\osNCX2'nE%tup
%iqV=js(Pc<;n11IR@eW!E'`&9/u<Nll*=d/`:V)hc[<Z!iIZG9UO'bD_2'bXob>9^9uqBJ&2(C.@JJK49+YH>C9U(8OHLfo7=oKD
%U"*?WiI\qB=,1`0Q9&@L$c5?#<gusr\8/WN91BuYRPY6/$SrU5+_,Jb$r(c$Xh^81o1BXJlYL5CY/9EtS*"BoD-:QW#ZlT+Rk6+4
%USa*h+^@N/&?[5sKF@*#JI*/tMl$>F2NJ8!A?O!jo^.C_5WOG^#a)paWWBWfJYL'&!F3UVq?ar+p"G29<OrqP)h/5G?S9&+J.!h3
%9]L%g.(U:GLC+-S$,D6:ODihQ>W>eC>]m7d<opu"M8+2QDVo><R]'ctY+m6Bf9$NX,sTeJ^P*CX4e3J+KtJJsm?pZ*./h['i.@"m
%QAQ!a"ja;i+q27eX=9quOH,J(>U$Y#!*i4+AC6,4\-dsK.CkB;0$)`X5lk4e,cb)L>SJ$p8cUKb16O&8MZWbm)h4oM:oGqK_r&<E
%'nDV@[r="rOZS*Z.$;;f<'tUZ+AE-QOgPOY<P*W%\2Z^Z$*%p"JDk%F6YRcgKS87jZM>,9_h;IPaBBE"Q,XCJ>^QS*bKr19-7:#<
%L>[ZYQc!_cE'`;k*WR"1VO,TP/aeGH,SR[9=/0Oc>l[>)*T]cKJg+'\7,Yr(l)n\@/<(+l/Qi?a7n<b8O]uXm8oMZg59-dos-cmk
%7g)mrQDEpf_KebhQnc+4"]Qc74u0Y#Fd67*NPPe9j:^I<1:Z7pUk+mN>hDkN'U6F&?fdUMAB':j5]kQL,9s_Vba,-m^1#F=9Lj%*
%,pKjZC^;YjX)neMe,@Nuh>NhZ`HXE-;o[aqm#J6QXsSRjiP-B,(P@W$n!u2CGVF0N%)V,J;Am=TpTQK*1^Fm2I2HcU#ZjhHK^6\`
%iMn8eUrd@j8nUR%\6F]2Qf4fS[X^`T:gpQ8I1a=bRHY.e_M'5?jgQtSBU/u-9d*b38JJ<P)htC11W$bjiaZMM^6MPM0pN@M-4:O0
%\1eDZ.!HM%A1s:/_o8L#*3K`B;]*d,R\dp\.[MKc3etni4?J9*#!5c#&qp_\Am!&\/dGA?d2Yjl0!o+3M8pH<\)mK*>7973=ZVWU
%>T@?GfSk*G$K#=PDT$F4[ALaAAe!dZ\()4"OE"JQ-E>dpX0Z-oD^G9Ul`hO,l/St5m%2Q'r7fQts4@9\qiCdNc[Yu`s3j44o0<0%
%T.(0Ss7,"F?[r(Ls7DA%ro\e/o7-c"+'&>"s6uZ\n^$`4rpVlHmf2Fah=>Lak+DY=s79Uq=T@Z9qt$H[dr59UpHRg?n;$>M^])..
%>X/5U^]!,0r[\#0Gt#e%P.[O(qu?0;s7H,js7<#a[ibRhs8:nAr9r6u^]3ZrGQ6tNroT8tSk2_%r4h-^/-LiA,bt/#>L[Q]^XDPR
%U@/"n4gk=Oo08l9mPD?Q3qdh+(lFGm8%0[gCc+U&;8<A)=Se(oI-blc8BJt-0r36KE6_Xuh6USP1]N858SGWmGlS+*?OAQ)2W%ff
%5GmbtNKHZ'8(_\#@G>E-qXO@Zcee\W)uut7XPkY__=T\<.oDtjZ:F=sAaj<Sp,'=0rQ]D3fh]DWZL2W1FERNgoSo9%o?md7-"?9&
%()DUnaH,3FdY$#9r+ROb-EHH)'E5D3jCa.uEq3bKs0?"E>lTa4p59=*F<6*nRFcNR43"`.>9Ci^N!XYfM!-_HmoqFMq$k66cWDYP
%,?9c.-)jQ1+dWME^h3j,nM]pDSi:Y34+_R#'"O)?.C/p)B3O2i:##^6)WKl?6iUa/nYT#(He?<..rMiQ\_fQX/>(Mr\M[%[AYFk/
%n)rl]<RF>&eK,n]7/K/3F-kZ.bViZa7VaA7E,BpD[BseK_En=;,Q>L+fuJ!d.!k>'VtMp:osc81$`.@XcPe.i:n?E9J%7bTIY"+?
%XR#C&%Hb+i\(;kFB=%'(=1R9Cri87eDpFmn#audKhG$39B!^`eY,7gQ"0$aQ.VSQsK^/;(MJD6Vr0@+>[s6WMJ+8,Set;HEHF;`#
%ZM,*kV#DR2W4M*!di8%;?d*r_RBYS-^@@")b*cYtf5p^)`i"l;V#p]*fR8/$UlXA;W3184Ok"C)*\0V0mnn3igW2=9K@_;C'2+tf
%j7NZ'\]jQNIOl+]_M\5Sf+UW(LmQI'0Y!@t9pAoGU-UfQ<C<b&gpin0&YYqu0E-R2VPg[E9<h$sn(2W=Vu?:`IbMIDRs-P<rpoIN
%0&[gPZ.hPOMS4N.Em?$lloD<$hd<Fd-XS/piEsK-Q]:6247_!3cHrBOSha4%"oQX;f"9f6l\nMjG3LSj8"O)&F-uP,86iW0R+1r$
%l#kb4`)WFc;m@:G#]!L=nt=g1q.W?$C)L8-L_ah@QHSm.08&+1)`l/Bc2i+%m1etPoa%VB@Un]d0#(`2Gt'mn'47Qm9UD8FH(W^>
%1T>5lppn0:0:j4C[^WNDA_6L@OR*]fHJ9M(n2!2bO,7\Vgg9A1i/8oPBjaEC;/Ch./i""B@DpIs/qfj?KJJi6@:/oE$ZoXQY+HYB
%0<:I"g5jj,Ml6M6`bjjC&+AWKrFifZ*hXN&iob*`+Wi^/.LtTP1Q.9OG2%1Yg\.pi>@%,Ge?;f/K7qJ\>-[II":HBum%md5RJk7.
%s1MWG)g=FY^-[9N4-SV*gXeHUdi22!aa[LB^dmIrD;sE#h)5u4V)P[1A]o5L5f0fQ+*koZ3\Su/ju@p`AhPsspi[!o$MWs@Qi.:]
%kqg+54$.$Uq>b="4>L)X]-H@iqJb+^8@Q7/MS0K!^)k&a.mD&1eL7pbL\1=adI$h^P@9R:fC'\,Nf.[+IJd/No8JT3<G!H=!7C/0
%pP6N&FqAZ]1ME.I=Q04c61MPYj^D_d%^id:1>DX$TK%^T#bP*aeW#?6^9m66Y98;.Hi%Re8"j;Fjj+1RFfO!crT0_]LY]I\?gF6<
%a)X"hb!tP/mP8''YG^;kLNml[X)(OX]$N,-FK/OAW:('dc20EhY'M*(nMU9Ul*Bng>gL>cb\B+aJ"9Yg>NW/`N4Jt;6i/KJlAf_*
%Zu*-@3*WBG(Y<Dl7=4E6W1\T8TD,SEh"G*%@H^A6?aKQKq:LFn[]c#/kKrU>(G.S<6hb`h]XFk)D$5[^6E[BC[(+V3eE3(r3NR'%
%jOWi$*mCK;r9"a$.J2p?IYN4LR9Jt0>!QK,RHE,JPqQ$YS%]bA?iDt0^.`A%epZmJ]0<=a9m#EET8t7i_nY:)MD$cCRo36IfC2Gd
%j0-*5T7PmsQeUE";XF8(U%=Vbf&8Z;%!IE;N<**&J*$MFnDa"=U%3?8o<mGdT%3I]&c7YiEgPcd&[,JW9@s:A]qJ@kd>`-M7,)e9
%XL2g?CS/5"%7A1B,gMIeUuH$$A94h1*uB@h]!hE$'-2,*]NC/e@+hc?mh`M=X7p[c.7FtVP0)@3UQ20'XP(1U_GWH*\P,.k`7W=p
%;"P#.+TYjdZ7&:4qV!@So+'g3f9?!k\p4!CpCFB7Y)p6#/j2@(TCI4)CaNcg*^B7cl+IiQ:6=r7b;\=rV_A!C,I,?@-QaY+[(7T(
%B@[P'<F:*#J#1jd*B)N7G.[N)MI1&4n"8(-iQUkHr!MKAC;W19D4L.bZ\6_3es$=F3o*akI,%u]D@1,W>p')9^XY)Tk-@?S8C_;2
%k6%ipL+$qP+aq-ZVmr;&c[qouB#^5X%fXuFf2qE[$MSRZcSh!,^=+R:bJ.`=82r]Uq<1T3UW=jlP5=!;^ea^9m<WUu9:hJE,BNa:
%H\^?8[i[Rh8toXpC\g>Efl<99Z&`kb=ac+uF.:(&mX8r%C<I'T]ttA/?7tMm_6:gHNa8mhd_&)_3HeZ:Sp'm<.V?6SCKeU2q3YO_
%J<3^0)pd8&Nj@tX3sQMt3`g:5M<hA$_m:qp=\Kh&jjC_'hqoMLWaA-J2E5'e"rP):Y9._(*2s*nGkVJ:$(LhhhjW:>g,,qWk+[5<
%SL<BsQ_H8C])&%!gMOiOLH"_q%-#Ad]qZSS"8eTndht^2!fCZOJ:7n[_TIUjrHtui>uWf#\WghB6<LJkcLkISkb\%nM#7]D.W^_o
%bM/o;c\)u#:igP$*m[tLWl<^<UL(mF>-34BqsjGI5Mom68"OH]2Q7c7;:96uC$H2PY8a#!2OjPOA%UDPmqqJl3+dW-hD@En'E->Q
%dd7jP/_@2R1sBKM1K\S0Wb;4![hD=@V:ucL9VQhaP[HVtFXI#BDK2BHlZ\BL;d\QEhuNn?26l)W_Au8u4_fWAWO"M3#(HNrEVq3:
%?roho,u("\1O\Oa/4nFjAbm62okVbC#Z5(I9>^M.8+p/B^,>cd0/<9PF'Ur!;\H0]R;Q'G'W8U$e]uN.L!M"@Nt+,ah5)s`_h5fQ
%&%FB%6c?=jWUbJBadY@)8$`MdM<i\>ctTtH#PLa]g32C/I=VU'l1NR(XAL(lQ]<R<"2hc`d++E/`U>=O1p`te>461b1'@Q"V\s%<
%2KZbmMqHSH6]/b9.^ja0j80ghYGu6TU.7AHHIHln`K'e;%Is!?[/5-(R_O;mGS"L[3lE]#0=>VX""3+7aBH(Js/(kNcQi=JU=+DA
%S't.QNQj:j!aK4$s"_:4l8l*T%:n#P\0Qn-H=6ct%fEdT'$%-&8_3/bl&%@8SdsmdA\jOcCO-9PnjO$mR(8omo*0Zh*@klW5#3>N
%O;@/^1%)D\=IXLlpXf$pph+$E[XIP^:RMU&T71>FmS5W(+?$P7eNA8O_RXk:`(=*]s-r7iqRX2[#6qH$(\1bK`4@V2GC2F"ManS`
%O!4H//eEams75"'C8)mX-Z1LU<io+,0([-L<S.K3A/];*.[a'0S*U%H_3T(#MWjCXi_>1S7C@W3oYgUj8'l6lWLngsZu*d.HoV9n
%3IGMr*,gKor+:7\(8tPcCnqC7,kq+b[u(u+n5-cp)OAm$RA.t,*l4E*;o4&<kMWN5`d.`Vo/uXNIb_/0(PAg#XX\9K^[;!krLddq
%7V8g*-/!G02qQS/W%E9o>itlil48KFo6lfL)aF9,do'tI3jK][<aC]J"nHsLIQ*@B5,SnK][ad-^.JdEM.ZY]CO0IT.fT&b1d?RQ
%]I7[PGj3lP3/=-b@@d&l_56=/q;PH$%dgKXO,W3c)P5BM_0pf@eX^E@N$pZaYPla4^J5oC>OeL+1(sN?/q(%pZhg/5?-C4n>Q#[G
%d4>TIn*qd;]+$1TG%DV^2/tR3cp#c!T&/s)+I7*El1Hi9[:ZlScb[o&QbRS0Re.dQ`N:X7dZ/7UbeN_V/Dh5bZ?fiKVt1enm/UK0
%iGU>`V)@>91Vn",2pDt$We)e'86D5/f'nUSCa!S'Z'>ft[d*h=[@W9@_GcoalR<h6E@?,7gWpP>TmdI"ji)kN+2F*Z*Yl`(,IHF\
%,;rlIoZN;gR;1Zd%b!7g"e%ruT;Uh('h\MVa,$$Hg[+:C0%Nr1-@L6]=d6dn+8`8>ke?0G*RY/NfC/X3S.&TB@?TLi;s^rl#Nju`
%VV<kM8O`#"dq=q)l]r$B,&RkU/.W/jmA;O73.LqQcTst&j.X#XD2N2VMX+h0mH)H!$e6AdSf$;]^J&"$c'NRpqm0C)W>i>*U/ZbA
%m-aZojJhE$^:+sK$]U9$^"n-TdsY%pI!$B/\A0$3*rKlpRJA#'F@Q&cmjuH-k45]`+uJ9EXn)TI8^'NYO\8A6`,hsuD$!=[kQ:le
%@Cg^5Nh:dUhcnuDp%E;h!ja<"e/Q?/5ZPe&\S(MP_hE4,>(leH3Io+jVPK79!H-Yt0DDEHP<h/S)Y;/EX4mk5e??c^ZcC!5gjX/)
%Ok4L0aA'S3[rB;ce5VDVWN-TXJa1Z"S)GST!^&F8'&kMBA[99%DV.WMO&:\GnpI8WU2m!na3j>:#=aE4)""!B:HOKbD.QY3*W_$J
%p-]Y\,^L%X#iCNfp#e;1MMN_t&^?XMXRa$M3ESfm*1"9[j0hZmK*Do>2R^PPj%&%EWVKFcmnX6+1+k<++mQ13iXQZBbb6D3T6I#S
%<[?H1[_IO>aQ&@*V9%Q\@&!O)T#[d0,-l:AN*/J\6pu%Iea6FM3.a/-O:j0Q+g?Gtd<F=2%b,TkOaHk)0i<1&oQ0&?+r`>i;P0=/
%QFGTh91jp9#j_1-VI&u]6._KTp7>;^;pM7EL_.2#bsPSA7DI#(Ssn;^NN9`;(4i#((N)hjfoJsqI,4t=UA6(t1/\Qg**G;JW>/l)
%lof.b7@B(j8s\XrAD+p]/U@.>.:Dk4TA\WqR\UC*Hs]<QH&b"G/p89#iq*WZK5sKO?Z:&p9gGI"d.JNI-8s'qp$,]mICU(WeFs*4
%aL4p@NMpffW!.fa?[qn1p!G_#8aGACVH44U^suWT+<T(\,,-!>q0g"Tdj64/T8/u+V5SO[beZT33OtXQ?kE9O(26e'(5:[-MKB.J
%lTo[81'G(*4BES#/]UH52)5WqIbO2f*T*:0/;cs)]3Fsub['QVgcj$4cL`@:`N@j"m0HUR7^6jCLoF%B+[fX$_Glj\NaTW1/t9dC
%&)D,uq90SHo-Zc<SARNKG5r*n9+a.f"*F2f$u++:*i(D#F:^EMa>S[8$21C.?un!>TiJ9;He3^?,$%ul%;D(5Z2!AaTB3AP&mZ1#
%)2E@-DVBt2qk5eO`+h1=LX`ZF`l3_r`.Md^Y!uS%,#0.,EGa0CB(_N&F.RMYS&D1KksasfD@W\%_C9Rg0]T[X>[QX5>ak8=lPOe[
%6_/s"R%&?\lh2Q)^Gq[$&21"+Q'\60X+o2;^87a=5h;`a.<.okMtF_7aoiAtB\CW%&iDhhZCld1&s)Dd`k$C2d1R?fR#+[rlf6s<
%jM`1Yc)XARLPjn?N6-<nKVjGr_s\fgd1#p7pQR$^DYXGVPJ''`(lZm[EgiRbNdABMG$i_KrL!"*S20_mBLuMqrn-%Xgo'"b;5YLD
%fYXr[Z?Ju<fUC72bZA;&:%L07'C@I%LZeC']@rFNFBbKEMt%nhip,$`<R[L:BL=V3]kM4u"7*Mbp>GB6!R=p&\",hXU"1CmfWa'3
%ngSa(nH$eSDOF3(R0mAr03ZmP%Y!9@Db'OqfOJT)j6isLSHoO?ZXGI;e3J;kCu\C(DqrPnlq:]`/t&=-=e6ipWL]/E_q4q3oV#=8
%E#T'%:EN0.=Oa*k*KE;f5B9bJehflX=[tYb%*:.*WUmD15;CN2JEekh.4YL]?*V7D9hGppm:%mGD79tlc8K[REJ7:t%8dZ->snOk
%Mu@Y<5`>>(UK[GiH&*C;(,Wj88>d[E9C$>Y9_HY?d&<7j>s6jH;!I?bfc""IrqYp2cUthFQYh.+!A67b`oXX`p'hW(N7DF_F\]IC
%2p4$L&O4:3hFZ;gl=#Uq!rHM6p['i#b7b/$=SEMO)uS'PV;"&,Q@=k`3LoBN@Y_\LQe@FW@NGKGPQ@b^b=X[_XQRZ*.(O"0pjkYA
%Ej_<2!^*uZb@Y*SOT9pG<AV\@!kFMBAQ-"JVJctt:2,BSi\6:=PnSe$+332?3m@8NC^;i!QWOF,5i$X4]P@E=D`jF7IJL@J3-u5h
%_M$$%05bMXHnkNSci_I9g)=C5-5E"!9jc954Zf5S3,.0m__*T#kZcUb%U1MeE%a;QH!Jb,irloif/B3-<rdrd=mU7sMqEafQ2=.k
%7!Fc):[ZZQT'.<o^s*1;_tn4`e!!+k='J5dUXPi6^BXV<qN-JS6^GWm'op'D:mos?pPkN-=P[:kbXD.BZ6bDM!H!sRRb&=Lkub.E
%2Et1ZK@rb3lA6C+;"X0Gi684\jbA#F+Te1sEU4Og#:I/olIBTX'7.V.9DZ"&KRTp<]9J\-(oDQ'N7C'W]PJ=]e[_k\)!FLn)g[%2
%Q3lJ\\e`)Vep"3?:hK3LpR(4@[]@.@a<B)lZEXS['fWYJb*7HVZdh'$M)a[8'=%e./q9Ju]/9<aXA!)J)'$MtRUnD\^S+.L2NlI7
%lphn]dkfc4dZ9YT]MQ21S4RQCU_/[TSs:qrHTb^f/3^+$>jen?%%U5X2QWbd>mj"3TJ(3&BdQGN4M-!SgDrt$%l(.6hTE%Up)6XB
%."2c[ah9/f1c9U*D<!)@E",B8QR1s?na$7?jX$2a\Eaa2d-q,7>=4],/B)Jfes;ZZj)`oHS:^u.OWEgRG;gIq0!,W%M9TV\o=`%A
%/2,I`qY;eZ3aLeK2_O,Tn:#-IFa'7;4F<J\!G7YTiH!U)=s7lqWfnK4BJ^$4W2mU.k?DM2c;JK&:.>rc]'L,sVOnC&V2MJh*;;4P
%KY?2jR;QVg_LP%e4K]Y*J[V.::cY'!V&:l0F"(>fqGQHNRqSK>FqX;6K4ipqhL/bKZeW,n41+SsF^HiL`SFO)TtP>X[>'YMrq$1b
%!uP]sVVr<:#6b-0*EPs=^Z_)ZZ_,opF<^]>]hb]jfkOUsAD"2fEO\4g?-^;V=KQp(#T1(c2,MH<D\:<$j"h<fleJF54T#KIMl@bP
%a"@!!P0[r#rJI^rBV"Pp\A-jO[J0AWK2Cd8V5^SD!Cr:?7t-+kXK01>2,2:oYZ)&)hYZ>?Nb@7@fN'VOL$aSmmWjN=X^[?.&&S3F
%/-WZ^[aU.PF^fTTfA"<2HsCFZi;U)O]V;*!L@;h"VKlqZ*ne`]eZ2!`>8sNsb);X1K^M;SDM-PW0n!'?HW_[_lbu&^]3B;T+)ufj
%-1>/G_M2%@V<%2\qL+7Q:P$\gpbdsE[%OE.T3A6Gf^o0u.MnN8m74D+!_p>n^Kg5nn&,tb3o3r=FL5cdD!CUWf<K]hX3jHGP1XA2
%"1+9b(FdoIZ(Ep%2C^?Z#*_8n-E^t6%ElmrDWA7r)pg<oft3i-l*E#j:OCp.gFq0VV7Q9os0DHLqQ.d;(cpPUqaBi9rImqOi?dTX
%pU-ICFkPs*L3Q3rTJ\B-DEd%]Yb:/U`8:K)\qL-AK\XQCCR;GUYUW.>a>M3Vj-MiJHh6mt93=o<'V!uqkpJOVMeEl+&UW8lF#o;&
%UhIL-S;*>BAr&+*bl,gnb9lXmfFqEU\*J]OfSEZn7,>8C;3TEf;(Si/cAql'\+d&=PoePBnGCmhrkea@IN\l'X6pc/rZKT`i.SNA
%bL'F2!eX3F/R#eD89WaY?U&n>>ua[kF.U:Hbgo0<R.2GqGLrglY.OCMmA;Z40P75Wktq/dP3[l&*r>!N;"&4%LV;rmHccaaeND<5
%?7*@p7lpe+\sXfe*;>5D=E;;aYY;S4gS3u<mheL@O(`&cSuuHkAdIUoLG&k4aWVf'*eHmZlY+I6j/+p?[dD2c?1-k,qMXK?kT#C'
%]n@sR1J_=4J6a6`2tOPu`4-TDg`!)Qe_TUmFst7Gkc>p'0nr+27Lp`GPgJA]N8s2YAl_/fp6(WLjQJf@_Hgn@52DnFQ[ConcJV/3
%EP0Mo)$[NeYJL`fh*e^T55H%m*>t*,3eq%m#E;5WI;Zf,@O+#L"_q/;Ss:Sio46hgY%RNRYQ@'pRN>PO@Nn=L-?^-Fc$==X]p=#T
%/j]8meCZc&\dgI1g6+T`,Gm6L:`%3BQ3IdCm)[*2IR#`+dZdg=G]_kb:ZV#bp;S:U0/*gj#ht?V@!@Ng*.G_QWX%r2:$4mX'cGOT
%o^)EJ>g]o1PX:D0UQ[!hEF9uOr=P*5fPOGsV$U^^,eOcs[DsO&HX[o@?@IVfMM-?s.c-7t@i?uSC#4,'^TiMYD8\'u@Z<n97pKMr
%SBgt%*A[#6@Z>g1._-.kSX-W<!!AQ?s6&7G@t]h0_DGW$.HZ^l8NX9(h;cNe'OAbFGa[o;&ihO[Fklq4?%m3Q:eL(YCt3WL7'GV`
%,gNmWG^(INP1m+KQk_4X*^O!u_Vk-+;.^e2p`\11EAP"k\o#6ke+/SnK9csHH5^K[[CAEWm`Vlk\WIY(/??kUM^LXZ<27lp9t8&1
%G^`hDnQdU<$5bUGB]mIj-))O4gn1h0?LKD&kiUjUK8e1+W4ElRP]u".Y?9-8BZo9B0loH!kTTRk1>KOLF,gh$&VSQLc+QGnO!"js
%%qqS6aYCX31,)d-&'X6X[@dCZ#qj>keF'qu1lnQS&#1X_l!qJPhCS1")<i&VBG:VF3dn7GoiRtg`WNF+7?nWts'!Pi2C^<"8m]CS
%>K:kYCGXf&9UW>)j:+m>eL@\mb4'E>+cj7,#>u,MMnJLM5n/u/_d(bk#^`jj[SsJ:c^WG(r>fGIa!DM%LY%6RYN9):<j,orEFOhE
%kSCL3`Z=Bc\gP@,40gN*pR+k2]qnk0V&=!5\kLo?Fn@BE[a#2c)e$m6-g`aFPkr!2RcuQ5<nN4m<r!\sF`uQa-1)=F0haMLN-#n$
%V7uSTPJ"i/5XlScVAr(0[F:X<,q^)1%'3E;CcUZbJ\">^Fa7"k\pj(gh.cr24fN'+#T,nYH:X6'<Qp[.e;6$WG2c\/:n!'#St:K_
%9;,Ro=NXs,IXj])[Z?Nr4?O`ZiXJL`%1i`q/>s[$poD%eoDtaMX<qN>2&E%/5&J@cM%XCK9:&S(?7Y=@%VApt?95kH[ti>F=>I]i
%[s*)]S_gJXLC;$N^i1O<JLXKN[U7f8CNo9,Ju]Q.Q5tZA7X"62dKE%Lm3Z0E3K4HV%e/S8?PXdV"'2]tj0A=,O9HFA#l7A<7$\jQ
%LPF82([;e40L+BqLF(!]pU#=4/K))8Y(b6,4BXUL)EU[sWk/dm/#3coMpd`jUO]/[^SGkWh723&Xef^E<3MEq_aB:#c--5.WB0QG
%kKnDZYm"O/b(/d^ET20n*Q7rs&@U_sdu.A#75\l_^YSR.F<"Bo9kW*W>YDI,1r'W5])#"uMTm]*135h_@^2NU6^U\lVnD(>a20@\
%g7X3X^=XLYMU70>ld6=\C)dQWD>0)]a0)&eNr)u<B^=i%,^IK'3hM!Zh0ttc[-j[e?rW$je<HO:dTtF]Cd0uE6AO$Y)ImA:Ntb"'
%0IOR4!Xtl:nX>3<jYaAOM:qV2DX7XY!YY=Ul2/X4<:\`X`XYatQ@i17qd4Y'h;$[nd4/GM"'\B74K's=FDK.N6Q$_-1k_B@H4O]\
%RVFnIe^bm]C%+6"T;?E3X`]#r%_"5ILJ#%SJ7cE5U1M.TZ\2*K%W)8V$"gi"?14#5GOR]O&10[.!@qIY<^;>6d+Oj0iO+B9BKO/>
%\d^n\Y2^F'2/Ilc3k8RF<c\L/MU55g"jN)eLA!I]LoGJk(P_M*`c6P`C5WX89j`PA5R[a!.>DC>YT7r$N^`bIj(cT_*^_171(J$q
%FW:Dm6uHBo6t^`(4)4kIQq*+A;aep^!LRN/Lpe!e&G)!D9hup$S9oJ8\,jI"eC"LAcZ^ZNj?,%G=0*!hO<6<<\!X04)*.nb1i48b
%aemTT>!Q=lOp7;oQ35UVNOVj)XWGP1MC%(HnBS(?90bqAa1uo*h691PYo/<Z14)=I/Gmq#DR`.fX<k^&8ZZU^+#XU7]=.+pJ7uuG
%(sZfSh'iHmYs7NBakN('4QdY0ei9sYeObbeO$sHJh+NC/3Hbq(.m;lho2sFg>I:XSNmT0XPM!_Zk:d1$I3#!b)HW[gb<:o]Bl_Jk
%hh,d#jcV6>gB6qIrD\Uodic'F"NCPR-/kcBZtSqqc\!poIl4m8O14(.BhUs05peuCC-;]Jeb!W2>dia.,$/R;c@d8Z4EUd>7ITG;
%:;r"M=SD@8JnRn?4o,a(Wd0nfFP@HXU11DWZM=e#)n&/orjj/1d'?QJ:UqP,R1tHPP>ZbK%t1"DLRrD;b%g/=>%0W/L)[Mf1._h]
%^YIPsa4ls5/F$nH8Q:Q'p2EW-(IepQUgpWfiCTr:3b"-]NBK6qYs!UeW'_$41idr3(Q--h\Q1,%Yd!Of77'pHX`69(Ad+2YPXjW!
%?u0r)"*U9j(V\JK=_f'-Mq42jK:^;WPUi;HrnO-POameAhsnJP$e(D$9\G#F8&kGSc'M#&m@<g8X1PC,lG-"C95pmlg$hP`#*,!U
%CqZC1/L@OEF40;GW,W2O!-&=!Xo/O9@0]F$b`&,T:2\LHV?mHL"Q-4*M#r4pq)-,dJjk/dP1EK0@N+9DautPmUl`q2ep9#;S4Y98
%Sof9nJcsl=\VW9$n.^4#,D`f#kkBem69`OThR%h`A5mt.4Z]X`g4&Krh[.<<2*%iM1N4D'3401po8'V=BuSd^.<?=\D@kuY%ti/%
%9pK%OoY6t2Ll+ODfnEjo(q7XKGpAKpp!7c(&62&6@q^g=.j>[;W'-<$[QZ#2psnenY%\_kP'YIjEB3`[e/%.5>!F+rV5CWdHb.D%
%U+j]okN$>&(Y"Jm.BC04d>jtm'ZZp-e1qf@+c&K+Z(9P(?4]1L'Njp^\ZBM\67"La/kSb$CY!!=CFa&$0:6P??E#.t0+GNPeA0^h
%/s@ekIBt.SJa&^q#L_RrDFT.1h%Hhodj+W+]:`n!_J5FI-u,:Nl0Zh&R)0,5Q`%N8E/u><>2iouTsu-kh#S!?M)tE.;sA'sa/HG"
%&q@>`@O+"fG0H@[gr$="[R1KKj"kDkRk]h=!H%Xd-_2k>rLAY<)L32L'E(>q!>qD?a&2LCAd^Ec:-(PXrk>4p78s/`+d<R+WGCb<
%H^/6Nam+X,P80or)g<*VnjmW]C?NtQVedA1N(Mje<Y(ue[99if*n4/kr_=QJ>UFed)Z2%ak(4X8k"$Plpslf&Hn$P'`4*<CZK;2W
%;sggNjT0s4(\`0GX^KZf92k6[!IIpVF]t5(2,biC?8;nAhF52ln,e5'2*Li9<?kq3]e0_>j4r(8*KeMhRs,eSlK>"8[+t3%KK/M_
%XQL5h!12p#"ca"7WK@Kc`k+muPjeO.HMX:=[k.NW*`EhFlGQ$Ibs41_=I(jE@]s"#orhfrZE[cAT)T")g^)3n&QU1gDdJm[43LO3
%?jZ:V9sCN5[7D8\g#[C2OWIHlnD"$Q6-hI3-i+=&jEd.54Z$lioD&8.T6JM3P(u"Wn<Z[^!r#a\5%`B_W3XtW;5+pU\9ir<Qq/48
%iTVn-\8#/^U49>d:ur:tLfLY]X29fDh#\a684H5dBh:[OCZuP8nWLf<6BY`FNT8/Uk%*u]"d`",SruQV?IGRs7l:(.Ta`O_7$('f
%@PRhC+hG(fLlTr@EOgqL9igEkqd,<4rt7giaE#2AU>3.K/P>BLA8L5GFt$k8!1/hJ?P\.WP$JRPH0VJS3&X&CMEnAY<#/h_*gTUS
%j;5I_1'!XJj7GB*CY26jW@*oFd.3"lK%QeHZh!;<E3S@G@H-_EA986=N0h%9/^cmal1l(`H%_bCRtl@p(Wf55n+j9QFmp!H`\J+C
%30Q'KVqMR7#RhSFM;ZhX)/ZoVm#NTVI!>QhA1S6?=4[Y*Ss0In7.%o5#af*'dTBHh4AoRFeBnGW2][&i'+qetD/VKC7WSGnkn43i
%12K`CWc:AFLu['?#3DDBR,nME@"/I&"!5jNd'9P4rjpQObGrM".Qu!`aZ7IOq#,&r0&r1G%N-KMJZn7,U=V6OKJ9,BG(q\?a%66u
%r*hYLog8*O45UBD9kaV;8A>a,@%3bj4G+aF`1^fTGi,WO*AVni"?JNkG1SCOZO/O64iejGV'gt[f\KigqaQMhDJg%O6*K*5f+F5Y
%n`kE@R[scEe)4h5/+/?;MX0ns>EFU^\:HR+c!^GDeiZAU03)e\(o8:I]sosNjiKF"%TcCGW,GB(*Ui[%T1-`G^:"=30QH=N,q[36
%h3u+>X-)%5-4*"XoI)[c%ua3"ePG1T.gQ6$@V6+i1W\_Ze+!P:MWFd51PW+GA&i.p(@aoiq@F<e&4'H.G4O;\<A;e-JIT+AA@'sl
%Bs8<BFf1!<Tf4Z%=;")PA/lJ4#F"Vn8C;6b&C<f/[aOThhB0RSfqCM"Ef+Q[hrOa#,f!B7O`$<)nBX$*)+9g<S8bZMYS.3u;B=[j
%lD;6fX7YWS<.V,:;sb*4)7:@5d@`PL;BWgLGa.8u7kaT]XX<.q*Fp:FG2cC<&TlWQ`I:A,-tEn[5W<CjJS%.ULQM_N5I>^<h5I2C
%V.$HJ[olXRCm4=l"C@cGN\jZ\FYDD^SHJ_E1^pL6$AcUGg(Rk[kg5lmqd**sV`HSeB#K&LfSM[G==33#<52MTcN(B@8Q:-Af,tg+
%L!BLK;nJ/nKfca(V2uGd.#&5@$$TEoZ%ifa\2T0&$"pN%@,b$:#!!E<7,p,Z@1[3M>0+G@=`b&gWuBE+n"9c`=LHa<k!#e3`1AHf
%1P#:#F>2RE2eJQe)`u\8j*AWR>Ti9@R)hAFSBUJmirZ`,irX,PK7d?6n4<9<QsKeJ8j/Fffo`i!Z7CcAg2E*X!"=sJ1re/m`ArmK
%'PQ;n0A7K$nI3ONh=haD)77g^HB&q9r[_%+LeBmtR&7]B"'?Dfr9-$1]50Qm=I\0a2b2O&El>4u4]h^9IfSsoZ**u%M:?KbTV#fM
%l9Gep"UV=n]doqpTNf!2m)`Z]f-Aggj9q$e7R4%s!0OdEdc$+lQPp,=A^7&;8Pe*:s(-=hbK?'C-oMp(lV=nkDlD9="L1t.Lg"+P
%M&dHW:2#0l$ri1O^3t%[KC]`LbkD=u1mZK!.r#UNn4PdC1k>>uJm?cXQEaBsn4XA\o*_dD>ej_@`c+%3#.=/@@D83u1+9!fE2d?&
%"21grD3d:@^\rTsXAD:rG>&'m`t!?An%,c?b#2Amg:HMKko"KGTM>5&Mk-*H/L;b$JO"63?m'$uG3p\)2eAs&2rOM#4!;!.6Ro)m
%B[H]L*)H1\l$U].%'S&L?O9*L*8iHO=L8^=:jP4A\YP9`,7`AUkRL@j+`-<jq3!bHf:?5b0>^[9\,K:hAb)nhpMr#Q:fLrq,?!NI
%cpns=q.kAP]GR?1*V^)^-,NI=G'+H7Aat4;b-$22liM\Xr;ab-UED,O/RL)Fo#f(I%ju.,ksa87oe:/HL_=4hB4Zdk5!JJT\b8H@
%h+!qNoe<9erab0RO4"gbV^<ohfu\e_`YXLMd&f_mPHI!\4'dakPprum0*ljUXX`/b;l7?oK0Ai0ji&+A56fpQ;<@**j%hR_r1A=c
%s894\PX#3Ek5=h_2tu3XH2@#LEHfm1T3o7B]\003r9lR'Vq2aJ)j3-Hhq1^g17QU_/,o(B+8tO8rid?Zs8;C-rnG31?[i[A?T6PP
%I_5F)J""Wmr8`pRQc[?p1&tq1M,m!EbYI5%X*M8arFCZnW(8<t-X49c;l;fs0I$=u@;;\o)O.sgpE/&e\7u;jZrSFXQ;U0j1Go>h
%e/3H)i5klWB@+g$<T`q?%<-i.C16_gO5u4tM^mP"J.mJjJCN]`eCtUJ\r>`$/f.Os@P`$/YgF>S@fs50TF)R4Qr].m('=T_&E(Om
%BInP:(leIbk-#lk!\k!O5318kEo!)!aR,G[=+('\o>S%kE4Wg3D)AUgb#]UhFI(`/L>O+lm4<'a8:o_FEn"_`a.Qr9DYGV9$(Q+l
%,A>$H"3Xo&S]4F*,&VV:&@]\6e&R!*DWdF)0>cE!SUA<riVKN7X*M*&oN0_6\^,`1Vb^*aBp=7]9PE^0RJQRCX`Z*A>3FpP@i(<a
%mWKdlNF7\$#<R&ik-R)GrH10nGIp<djC7^1p%rR+8jkE]"D,'oP]W$&][?n^03s^sCL7B26ZT[7!#U"6EbbV;.S,IkfkWV9G+oOR
%lZm^t<^Q?3i[@(9PUH<s?&m@sb4>t%>!q$3":cf(E0i5l*F&Vb_gQ'`YkiNipna62?06I7?YZe6Z8T<GjZ,DB$5P^CP)Sb34L+[i
%&Ok^f8C)6+@a3i;crZt/+,Et*'+tDuq5eLG$mt6rW6\cBSeFF?GoYol*E5L8Y]]2XUZb>9pEFE;CEl#fn#8hFcOG49e'?b,]1Fkr
%cOCKgFJ@U%+^kMaOh5[e*t#lXc4-ZE6"`a]f'Ea,5$d!9h>We6ITmnX3[1MPrnZtdQZncT&!o5YNfG$Kd`D>>+8tPMY@gGgbH!Sm
%^V>$hQ]&0TO]4M+^O:CTjHSPnhOM<k\D)CNGCFQ+anu'WU]5XfH?FB+lL+<;GF)sEkoXe]Y<Ld\c0L/0h4'o*:Y/d!ZB5`K4L_e\
%s'Ta0dIR"5p2PEOhY'h$YI2kDf%RmQOp1;=q!@G-M]:?#n$^sKiU/pX#iFNG[HSZJ^ASEfZ9jWPn5gE-VfrrLI^47(D"@;>r!8d>
%@!SuCbM)R&@5%-MNT'oq5?@gInIbel?h\tqo]%-_Dk,V2d"]pnjWEU5EVn4)K3<,mfc3<4eSkIidp>f&no64'jo99!q=223m'b2c
%g$:#6qEpn#[>TXqkuH,^I_&ZZX?PJ4s$Su7d>7K(-r<$k)cdAtj7$!\TppLm]CtplYOA.c$WG-h'Z^b>ftm+OdkYYHjjO[bfosJL
%pFLdDJ!4;jp$hD7ir5^FIJRk@[su*MJ(slf#5G+"*_pY!:[cU/o97Fs^QWYTr_XS^Fa<r^l=.+uTk2]`!res@%Ah3^?(`s+]FBW*
%&a>t`9KaiG/)=1]c[LrWb`A:;=M?n_8T"IkURuBerRJlrpk'6D`L*Oqrq6*Xo]eaa;k:sq07UdQ5Q9.#V1\Z#]*mluQ)kX2n]1[H
%ibe_57mHnACi,_,rqc2Zs!+h)&.EA_eV54LnKJ)R2?Z?*Pk6NlfP^YmaF54\p%J#ql-B>I$j*2;#RKe8fIMQZnP@I%Ic*+P$C;;R
%nOF(oNU?MMhu)4uNc.PQ9:s&:K50o1b*6XY*.UC"Rnc1qp#^#eWq_J,F+m$.>X_fAJ-d+Z]ri`GrDc.,]X:[>*5p+-:m%IE/7kD@
%MJDI74[SZ:R+B^'ft5_pkHuZ*$O;fVX'h;16.$T:oEF9]eQGN'(:#hUHl8,qFQrDYQ/(N3XGdUm"_*TWU/k\a-l,L3CBZ3grs[>H
%SS*-uK%/&_l0(Zej)*@I2&=#e#19'_@`V]$S2oZEF4Sg>T`+ge*m!7<&tJig?coG>Dt<(5*%Jm+6_#r9,YGFoadNJ0_N@EECf9_"
%XrmN:k*Me^r7`mfrdo#rQ7EP-F5X9D\AgujCt1t,TnK=cqm^CuKnJ4K],6mEl7qdqf:7sTJq%5n'YXdtMuekI=LsptN9CquYha"E
%4QCJ3JW,Qln3PA2ioGB:;%26#WOE'\[q1$i,5otq^/BT^K^8uA,`Ytb.c:T#krA\Uq_ND.kmQI+NqYh_M.a=f5lS!/)(_ordYn`X
%2eM>KlYLdBd1A"()e&B;f*">??8DutV^qM:D<7kBaljs3e8((b)RFIF8-Ms09=B.s>\>0N2BuW/%a+#qQoQ5O<E(eN4kHPL75MBb
%3<A4K38-PeLP+LQ1q!JKI.T@gF#auN%n67ZBf@eJCTu\K=bl$nCH1d%jVEnukiXr>;iWBmG^qTUPB>Dn?V/ZC,0sfPRr7(H1XJ[F
%o'^D)WH*.8SVbGL,p.2=_Xba7Y3FCE48fIqf4Q5R4/7b=/Nn]iou%D_dG$B:G)%<U],0$TAnR%N;#qP,BA6c5AG,OSaa1he/`F[<
%4!bi0>F*c6iRf)'Z7A_t=@1ceUg&54]DGh!au@(o]=jMl/?cCaKVHdYEGAo&L(OhS/uFf6?Bn5Go]tN7\/>4@<o$\!pT^hh5kLD7
%*SVJ%p3?2GIs8),d;*#lB/V'2=4@KGRpd_RSQEhM:u(O$>1YNFJ?0E'$5q9bA038g!k/`Y:#0Dl3huG3[@CIaIMoVU47>W^QU<m2
%V6)i#@ppfCfSoSV^@-@lN#XTF8Ufu=fOa8dC[B4,j>?AJXbKIogR5T/<TcTK83guoh0PK.1u-B.Lhsnkl4B6*m4WKSfQW._&%Opo
%)>qJDerbT-hMMJVkWE[*NmMiRF`7I(';7fJ!D@m6qJ*rtqSLhN$Q+)DI5.%_-Z(UD(PKhjF3,qIG[UU27/oU>$Kc#<+TH0AI2U@<
%1><$qaT(:<aePaEV_Fm=7lVXg%Em8XY45aYAK\[-/4sC73$_p8(!CPge9$U0Kd<t*?D#Fsa'a=to@-8O[MCr`I]&_FQ'X$-+6K`J
%H%Yku5iCk8T'J'UQs'1d=)[DeGKr(AZkE&k.G&'tG^+*o.c`g9RDAP][N?YWQD<fJ[>3td1F7ZFm1&4l'S&Y<^>B10LdoNbk#7FP
%(DZktGn-7?,F.&;BiC64aTH2K/+!@V\<#]0.R_LOkN2MubHcr\@sE]+VR7I)m()[I&jB,@2nAph$q>#EWE'O<*Xe0Yn"5MYjYfq]
%rc*!T?"MH?\m<Eo5(<aenG27I+8)L8?$pX9HLpF]+/rhaYE-6]<[V7&s6f_QoX";c0H)Q.n%.<;hm'4hs6\e5FE@DI2rD+'DVe^V
%r'f,Xp\'%1QhmtJ^V%7/I<pA>k3eG8Nq>PcRX4qYc0MLo+&9"=<ngt&3AR@JObJ$L@S2qNMp[]W-Xl"\S,1;arP:;#dW:u9bDKa?
%]I,<\T.Qn$#m<N4=`V7M"ttHSa'Ir@9O7NlZtloF8r3`pT&^neQ&<on48j/4e9Ur^n='5j*He+HLLh);m\mFSmJjfHD44RlE2:;+
%E8em27:)^uD=Q\-_3Hldjh(#k-%O<I:Y4EtZo-C)82,N!ai:?u.29\c5'ZG^+"LVmDh:=VL<=Z`LLT[HA0$q%/-C2-CH&7KZM\]U
%5pikl,"%se3Iln[%3JFnOFhdZAP#UGg])Jo>;qI$726c*C`@&rLk_h#dPbq=s/t4>a]u]f(qF4*qM`L]:)0Y[=m,2pC]!e`Cc]=9
%7'SoR=QC=a-9716X4h&GFhZT*K's&7fosBq>jI['fL@/_4rRGH/o=.&ZRE<;_qVX+'VCAY#mk`0R[Rn^lF*H?c8dgZG#qD.onS-H
%Bg.Lo!prGd"=d]UCs2ucaaE+!gYB0!I8O8+Gd!jOZ'8L%:ndpiBecW&eO?Nf:Ug3rX'L5Nq-qGcp<"Ihi]XibJ(Q[Fmb:CBc/355
%[RU;eX*</KDm.O<s4?M`fe2sE(YYg;FaNiEqVpYr=/QS7/jKC-Vk!gg1]H_%fu)q=c0=%G--4d:oJc?E+6.^;DrF3s\@K-(gn!:d
%>hg@5]f:AK^"^1^]fNhe]D)N+D!C#A^HMDKmJ4_P0)oYWn_^LQDPY+2oQGHSo$,(kIK/PEGB]seh>a'a51!B.G%]]<?CftZgpC+b
%/R\Tkr3(m"YPVdWr;Y[0s&nEHqg\HQoBB<eY\S0dI=$;5Ai.Llg`L28T1<\K7WZ?C?iQ0oWgB&2k;$oOPa.CXrT`D$G?g=Z/D&\T
%6QY7%J$M#B2i!.%2:8JZZgTQmT/=[HoKs[Wk:_L:Hm,)if9`BgY:cDg1S1nas6Z9dVJu7kro*SI7q;ulM-9g3f(Y*3:S/rerh,JS
%UE7fign2I$Mg&5>c-oJRs,MFN"8]!VkPq]cI/iS@J,7Lg:Z7bt?X99%ho!H&T.ug2It)HaouNBtH?oMZh37QF[JWVcmO(`r]8Oj6
%h`Zh(N2Ah!a_a6?r:]ihRD$7]OLP&HinK5AmOgr1HI<f-J+SqlmEq-ko%fM,q!KLb-X'X=HRJKqVt&K5O;pOjq:4l%]<dFADr9??
%s"jibH/F&`j1)gJ3'A&alN7Qm5'o!`j1Ld\Soi&Nep;p0&)&bNgqJ'D]"GT+4C%gO@9L'0S)-Bbh0qR`lJ-BJ>+aY6>]*<?/l-i3
%=9_k%o&B*:onD2[[ho'bGBs1#n??:"m9pn",Aho@`kL!uA)oAY0[m=Ts4M>iq9@Gi[mb]s>mS'(J*l&RjOA??<8F)$4hSEj]fY,A
%h-SpoD;=:8ZL70uqs*TYn&XlTgu1&&n8NStF8u)9cH+[#l/hJ`F+=!m_d9Q[3U8mmIsq-e2%#<g?b"kH%U&YBnil`cI!p<i^:VS_
%YAa.Fan=ospWH_9lo1E[hE9S2ISV3E1<+V*mA:u8c1a0+BA^m@OZD73H2W!BbPPL(0c..R(UV0J\#u4PVm#2Eh-XL'Of#E0:YhDM
%@@I8<@6E>pDXHD0)c)7L]ks)jfE@RrhR"BLj3sL,VtXOMCML?0l-$\sqhr(q(RmY1p"]KAr:8h=jlP%S6[on:rmPd=c7c?W]RG;%
%+$QOu)i\bV(P/+cPH<t6DdIA]H!F5?rihfl<&Tb`L["a1ir6QplWj>3mk84lhFu\^c.5\)Gk:E.[f/ESZHGl,&+JZPk1,sM<u7>Z
%DdSRsF,299?!Y11eV5^S2d,NLnr<P@r8`!-eD%GKGHYH+?8Nalak?(;q8N0P/_kaM]A&,.J'VsM-SjN(g>;kl=8RdJX4+No^O:1r
%E%/]kmIl:FbNZaP3F/&$h;$d<,Mub_E;$d8QOg-u@qF$1nb@3g4$NVdmE6=EpsKhjb^rdKD(?tR2toJ;mOi%GpD:<_5MG7^]1qb/
%^O6"NlL^r0T#8HnNLZk[Lkg<;$CtL/4gE])cGoe2\:duJJ%^:+S"">72d"kcV[m#FDr,,Oo+kC#KIc?WgIJI/oH?+V`i21?VuHDq
%:HdH]d@Ta/%R/WOc2OpQ!jf4fD=gkYqR(W`52YqZfU]HXls?hBnZ#rGq:25jZ+]43]sd(X9GFV#\7"$8IDt@!cutI%LH4#Q+1<Gs
%m2l!;m<s2(48i[V_Vh"lY`J/R[<EAR+0Jq??[R2MCl1Rs(O!K!1iMb.an(Y'YKsC@9"hf]qC#[B^UI9%C+h0jpsA?YGHK[GhaO=6
%h(E%734qIm]1lqm8O<=@6OgL5&b]U^QUicSE@#Yp':V2@p9u1hj7Vr^GLICdX+s3Gc.0&FYO/MG^:h1i'S^tK3ISM"^Unl?-VsQ_
%J`DJkDRT!!rg1oR=7C10XlXo*ZeKE5]t\fA]C0ptm@=>;ULa@qQgO_1rpnUa/<IH`hNsR']7.+_[_2S4o'1YLW]jS[0/"EMLQ$3I
%^"hJ*r@)+0]ti0G:Qr->)rXO&:_t1B#FZ.m7,IOAmiQ=mGQ-UqmLk@6dm>*jq5l@@mr%UnWuq6AbpX!;osSlZpu,:-*^>4X;0Vq?
%F0O?rg$.&+kj?%mhnEa#pLg\5cJC_$Y-cU0c2FDM=W0GZ\hL0b#A,D(G'3ZX$-U^74uRuDYHGWiEH)*,bG/kkc0c1ho&p*d1M,Im
%`H\2\SG7l_LZJjD`+G"bTri9]]ZE7JBRQg7SbLInm-aT?qq=;_]bF?7II6GZ2t;;T6ba"WoB#5mrF6eV9LIIjr7F-*otrnqpGJQ"
%Rrkn1p$(<,pH'UF6L/2.:M;kOAF1FdHh6adr9?H#:E.!]qtBaG;:^MGpMXAu46b@?lX$Icp>Rft7%1d$KZ*W;VVf.u\Ti6(?1IGc
%:_#pO^44HH6:6$EDVijsPsp2#@tO#o:)_u=G:FNg`FGs&<Yl9CbAUp=bBg8`\'ln3nc$;:I^'nQ`o4$W]=ZfR8AkU)?gT^6d',Zo
%&,XfRH:,*7^8IqmG`R=h<n>`:jl\nPgXg)!E?)EsIr,#8ir%%G_N)"5(\J9YmB>DQ5$X&)qEEGJVj$kr.sL0#pJ6$@f^.?O2eS0l
%/T&uOc>gMJ8&i!82`JWZqFIsel5OBfZcr+4na5Rnk]Hk&`P;?M1LE*@naUP3qI3r?$MhdA_AO$dj-)k,h6fe+Zcoqf1XZPtg?$Rh
%B9PKXC$b3_h4nH6ddm+j]8O9kRR7!Q0m2k-^$d,tdR9\Bm^LoRo%'r2hqVT:lLsRcr7?(dcY*3CLWhr%0j]<Sq6u9_0/)b-]bi?1
%bc,=mq%qGR+Ra29CN&ps7kLb;WtQ<[5.f9Nd2'B5;Vh28RM1/>a7O"?pt@s7fHMYMLRk[-T-LQW[b["Ai8g*NG8GH1'/=.Uj=9?,
%Cm^?oM4gHQr9.c8T+K&aI^1uETj:'@[hbS*n%\\KjqetRrF]iHgM-X<c2W2/AhhXs,I;$;G-mab?9\LUnT<CkGe_c6IZ:6$kD<eJ
%)Z2h:R?>'N(lc:I=CW<a9#"m`!dX)>!E-RA*EOSR`42+/ZB\O$",[O9?5gtU&;JB%<1la4P+3/B1:U&#NlcW7P$`Ip#fQpW=9''<
%G1YkAn@D^&?d0WZ5Y:R[!SWp!g'fuURtU>ZU%O[c,]X^D.5bR#X]i1_W83D9;+EX@$DdT0AVEE,MQN$=Z?dY2!d?RNUQqdYbf2Vr
%nj7ob@Q2iAU6AEZe`%23dt6iM:NIe[`?r[hFo3X##/%ZXlOH@4kqafJbX@q^EsJLhPX#64ji6$FU*N"d!i<8uiWs2N-Ak$L=#.@M
%OniO`X1_e!lT>,Y5*IDAl$HICdk"VGSuFpKU8W,b(Oc#gm!^M$rC5bGCk-Ag#k^,R?.+<CYlN)^5f#ITF?fsO?]5!^cO2</Q8`D+
%@.jBuaM$g&$QrX]OiVliEWFBi\?R)tc"99a#EI6*!h%@Y@48F[!,;M0(f;,BIN'aL4jue[e$40@:eqO'SHrW7.AA#^\"(C(/5ZOI
%EG/o`hQER),ler)JD+WLHZ>4*#S;G!<(n^GBrAAn?VQJ=3E2mao5`t0hShNu23HT?n]O3l)$O?Ab]S"ck.5q^OQ<l\CkK5k@.^ll
%d8a/\cBMiqZDOuPMd.u9@q#LBAlWcFb%dC%pAZF+!Y-t9;?h#+-9A;P9H1?2'rE@&bG"VYWfrQE*(WqM=9biP?t(6[8C!j6\DsAG
%fhRH8'\OG+,hIm)!e*/q0,J(`jbK[4F9*3a1BAeL_tMENS8OR.P@k9M$jDlg<Ji=g0IX:i8GK$#RXiO\;aV=p!t1Mf^d8QCpU:p;
%Ip3@ZXV^5?6:*hn7S4^:B;,KP267T#WaiT0#fOe.6aa#ZM\6]NYTR0`;H9;=,f6#er@X7.E?t][G:(W:/mI?L]%c,neMB$!S)I!@
%J;bBZ;\j4$^;8]/UUVj,Mg>%-Sg30)/"!5%d1h;3Su<eg@;]R2O@D@)J1;57*c/XsQBJUI7C`ck;5MJcgQ'?3IuDD^Zo[OM+\f15
%EqOqf0DChnicZ[AZ#J)P'p,4'Prm>5denf`,-nR-5:bM>:*f`qTUs/H_i+Z53+OH=aBQs12tM\9MU>Vd_^d7Db2/`g\i=+68AN,u
%:i.af'eT\*mg!e4/<OoQ\3@?/AQLSQBMlp"VHV:a$@2&W+nb<p<d&4EPu$>Z/DZ:3>J<0iq!ApVTJ"\1h6"oqEBYhqOa5/BY*],2
%=3N,]?*[-;*AC@&Ipdg8C2A1djT%jLbVNSp$KDu-,&e\tYIpUf]m(#S<Y3_1#U63q5ZU*H=`5F&2ZcU6#/\0YI-YNaEc7QL!oVcX
%SF),i@b"V0!Ea%K]F6Zn;$>iGhh;tS5"#S7G-8s7_M+*p]L.[W-&5\AJY`f<Z'3]mSFkK4fKY_#o)L1[_Z>5Kjmdk_-:i5F/L9:$
%=9Xb*.4?f!Z0Uf^3L$\rG48T@.o[3CiH@4Jfr!$Gd]g%21S/r$i(?6/C!D%,&uqq8)U.')=-)miX[NH^H0'b&#L]fD'4"4Rgi(Y-
%Y]g&^A5SAh5S&tRjg:WLoh7f:5*L,1F2mNY'P/6f4pfYq-RG_ni.(q^*%g3pQe[gZ"I(q],k;6fP-frN!6Q+@"\+'@?Ed6,-_/Nk
%e.Ua&\FB&p""bc+mklX35"HCV!C0oPG5Ka8pW20qRL,OTLp]Vj&GAp84XFc.s2]-8rI\?@DMh)ces'%dY19)2Vu\hGraNhb5i+'X
%]<^L1asYp6p3*0sa9>48D\K+"(-`g=TI8=seEYoF=H&O<JSmB#2lOnF7W0f`?"^aIEu::c*orGk._;R);:0YW-k)"5ec1CT$/k-R
%Z]:R\blsp_Ma]+?$*)6R'MV#Mq!*,m4,L"?;/k14%0ltVh+a\j)&H%BrEA'ZV)tX)*[=e$4%NVs5/9JOP8KkXc1L?F[p(gs1u@e@
%qjJ51+rFsVB(=VD%)pScXm$@h3jnY*39=O[%TT3d*`W%Wok6.]r1WI".mc8M,<RgD\g[iVm>u-eB+"PSX!I$`T\@s/m]R5-O]@/c
%:h:6K"0.0.'I([6AV5TP[4Q>!87PP+/E*1qKQV9^1Keo)"XY?ZZ+_?H1,q.:Lo^rbL7ijm0O5P<bLD`o.a\a%h9"q#YFDUWAm&th
%_dqR$r:A7[cJDh+rcZI4hJ?6]H^NAqOB)N0A4Mk=\O]kSp9HDIU<\XjQ9&p6mN7\c4A0G2bA%[*=EmaaN#sSr-N]J($C-ZB=:PSY
%TG86eL688^/m^C(#QQ,@etQV5k6gPBTIs[+TFQ=uP-QM2+Y%n/AO7eB5,'<`Y%^<2!-T/\[1$`i-q)2":8/o;At&5H+F9a+/FdWI
%/8AHN.)`N,*?IK%5U2jk@/+bLhP-^B<%QZ,.nR]S\:PJ<;6^k6bFuM<51!-HF![^f]0boB(a8W>=3Xh[W(+.Z,QLYmRsFe,jl?U[
%L+$RZ.!Pt>6jt,:GtghE[O<Q9'nB90-U7-,&tS,9A-7*0;.!O<]SM_JFX-f[HA$%":ioFCf`[B1#'GfeCaBI4a[uc=>N2LK.'*R`
%D:ZC]:(7C_51JCSa\#N%@W_ec%;AoM0;se#4&f]?7,,bl*1o]Ud\u_F]\F6KMLlEX\iZ39UBI9H,]_^/2O:h+<^/"7V,^nFB-Bn-
%'(t@?Jm)8u':,R"JJ05ViY*>0]b)Zth`qEtHlaFRMB'F(llY0g8l>(DnNWgD;#i:G.i#j9WqQi_f"c6Js.IakJKsB:"`$`+Kd3>Q
%)!XXAgI'AdaI4!6:::lS[rrG+o_$]FKnk%/TTjk)/uNZb)]1JB,(i:3Dh']sAG$Mn$W[^J,4Q619dRp`C-\V2+8FL0DL4BJhr)F5
%]l_FX4BXhO#>Y!8("g8OhmDK:>TML#TMqsDf[gB%#3@?1,3@lXT)Z#@.B7(JYcbTf?uH)tYV<F)"\\ZAS.$?6E5>+'^biuO9VjLq
%Ed0k=rC/06<;GqiXZhNpjs(8E6B'#iO(.3<X6LB'Se_0&52q0o8te)776k'p-N(m>5Bu$mMfi4*&>flZB6K!.?2[$c-GN3>b.-6=
%!,X/se:IqS:'%)DTogV[Z`&8#"IF[nAI;Z,:^uMW362K/N_!gX^G$nS(a.thM@5m]92OUn!j6j<%<qmb-bifTj2lisnm%6tb0FA[
%WNA@HC4SDla1JXCB\!tn2G,R;fkZG_#W,Q4&<*@5<R`JVi'hctRC\Z?P+$?LP-.?//TuX*GhiXQ8g:@3o$"3XfsN\0a],=>PuVh-
%SEQ+C79-EU071[*"r\HNWs@oAf80-H2:IK'&60jgJal2U40.IBf3,o3.6O#t_k_dfqPaQYs6PXX+s:&lSP`MN@,);E=UrTj_rUI4
%";/Tdbp?++d4!0k8s%779E\.NW,b2\*8D[h.9sZ?W2;./)Wee$KJ]*)g-Z<rbgF79"\m&B>5Nu)JiQig!PEoMn"ba$NfQJb')<?!
%&1VP(DBm;)%P3SLJ"-oXB5hF"#P\m-R>GYGAFU@C'R$S&K[#rHPiqHV4<#Jr_;=*HP#5PX+1d3SJA6%4V3thQ@eM0"ibIPLk+FE$
%N3?(*:4=[.oRc1DZ)YaA(YK=:2m+XQJnM7#K@5cQ,bKU#&E3NA)=cIZ-qC#=.[6i9BWC9jFLZLpJlN+d^pWV._:&VEbcmTnC;WLm
%<ZDIb"=P$0BtPQ6RDg3:>.IWK%onOllQlcfo8[jTXOf!#9c+al^0n'JTO_:/X-4<$]\ja^(WXj&jn=,u*`<'-;=p(II'q,UY#_/;
%]U'?J_6Dc?=$clUS!Bg0+IkUpNb;>`/6KG\#s6@2(Y4`obMK"#AWYpq;\N/se];H(ZfGBg;WPs"[(.fTY/mgDEpd/qc%)LAs//,*
%fUs?-/4B'd;<1hkR97;7W!Mdkf#2\&k+[ZSOqH(U$Dq24TB>EM1GZpU&Q^Yl;Gh+5KG0KcA52=*P#Dt^m)qHtY]uNF1RLk3glFgd
%kd8=h*Do3b@#CAT,h*ieeIbE#U.Yui!$Znj'TEACJDW5/-u;WR@C^A1.%h`;Pb:i#II8<%`LlD.Ya.^ujnoBKfrXQ$WmQfm/pJsg
%d&KBX"mIkojQU71s5QU20m%L.`)s[V_WP19+agp1/1A/JR:`QjKuoVB@+eg6b`kPtB_Ru2EO.*VM45FAf7i_#ZF]LHFV?=<>[:Rd
%j&;:'Q"5`E)QWAX<c$6a^I*6TR;*2ts.L(WSrc3O!k(Yh#rnb3bSB[[_-Tj:$SHsK!_T8FDAq$i"]YMi$4R_i%<Bi=76u$\qdiTj
%pBZZa7*^U"1mCiXh@;.)%4TF'qDK?n#ObVC"#%Su&2"3kSu&)pq%en`(/WTc'Tk5SP(3j#Uqa_!lNL$#/[%6UbUr't>uD*RIn>>p
%h2,5JA_=-a\nj)rFW2(=Ld4k&`C@``$,F`P#Q>K[oPe5[jsV9Xg3P_1k=S#]DGMlh:@cgugc*pZ`AQ9a)M-WaGcfK94U>$c_6nq:
%83:6jA6V4B5[I;==k0YK4iV/8+'C[P,&B=J.7q6Afj6WVn%(2[9+0i00sLP1$7dk\G\_Oe1MS,okR#kJg%*R'*+Hj$Li*HAN0"V-
%,=<!KXl9gPg%U_$XG1khM@V543sMqI)3(k7680>]e@C>-b25(F6`k;q?Nlg(YX]O?O=f/4a\QiiKBB746X[HU:<A;>>V<WZK-D9X
%&;7B20aYt=8@7teOck5iC\=S0"^Q_T39bQ.()<r[3f:;haJ0B2mZ>M1)EP_@MrGW_.YuO2H?dXW+Qa$>;:S3(BrmiO[oo''_VGc2
%=Mc00Al'RKA-*:4hC@t,`iVN`o$90R-$jY7dF&og(h'YY1+Si?^h!N7]`PMVlNl/rN41X6g+#G_Ah&2eHQdtpl.un+<!J=<=53Q@
%#\OFcT]PrXmjb,7EdS*;Gm$#CS\6SAX<F=0GS!7kA(4M?'2W,.MfOsn9?]mSJCSM#BX63]%O.pn8)/4Nc-TsN!'e"qQ6B;'T/BN#
%'ZFPb3Pt=50]"D.N#9'OBNPfbJYRo#);DpF@5(Fq6LGCN%^t!)=[[M(@3!(P02K8]=0@=?LYi;"q`W*B^lFZlZbn.hplL1P'HlLP
%U^iE3d\Xg[OaCGW9aeUKJSl\>*]RAC>,nK"7>qQXVooKUI^+li_@@Ic#m47U6a=l4gO%j(4dQb7!2hC"5oqN7f.<.;@`o.6(F&Ju
%!?Z[_2U\2.H>E9Dp,WlF#t^sjq2O$[nCCF5nP1B[S+*;l8BD*LA^H2`%aUCP+S-l:<:f7I85GSh=E9fl-UA9\!ARW1.Dc`"QZ*8-
%/&lkVqq3q]=?@`SGSIB.'U"]4Q&t[tMcj=1<BLBuJHM_:TU4!?]^9Ym$eJEY;n>eB6A/fWi.69K/[o[&(d3dT,D+Y1btiTaq&Z2>
%Q&lV.DW@W!n[Vt+Zig[*k]IdJ"_=-7"XM;6\%9_26aX5il'(iEVaH2TC+ZWH$s?O`7t\=mUIcOf$RN^pUCR#e=N,2'7B!0/)7@RE
%YUhc40,010gtgn1<,1KbJgH.m(^?k6=eYoFKFsFP>M7Xr=%j)te;?q#3O3F#]j@?]*;s(KGs543La27SNYr6S=m$`4gq$Pc"8dhE
%+OMfqs&arb@Ch]i73KI97IOFPTSltX>ZZQ$3Vk$()EKbI0Ee6+J0Q=kK,X$ZCT(FX,NL!@4/K4q[54&SGdS--$br"Ki$_Erk<Q2H
%`g+Z''sKr$$`8TPOc/e]#gQe%r%')En:d<7TTe_5PPer]$s9MCmEISlN$X,;=:+T?Kd7^2A+^8PJQ4$*hF`b41:<\i9Xipc+`P[`
%P"Y)MFg.!0M@4CB_.O#9SK)IDg6,"-NXq//-;5[+,#N1ofY'*U;Pm`n1;[3SdJi8L3(<<mZ.K9WeDPk?acSu6%U'=?>IAYSi%af*
%$f_NP/k$X8JlMjL03"]GOkju\ECV#8JKbVQ/V=?_=I\^!8$X<Gpi8ckD%8G.jX3/(YTCU>j4[:;b=Q5S*bF[-6EUaZ!!A7h&E[;2
%U/pe\]VD$&*foIFlD;"6ra<qc!i68P6XP+8p'\$T(nW%V(*D>*R&EMA?:GYL>oBY,db7'?qARcS"WT.n`<TDuKcM"ToXP/APoJT-
%e_@/q"k?7H7WH4=KN`.pR)fWtdQ^ps87?.'kWu&WJ,D!U2`P$MSmH1^XDY@R,Puf;Ne!bF2.0]^knF2Mn24IE"D0))pQ0PY9@51r
%_c.s&E(_1XPRs=-DiJli:<isNi;)gr]G%sS=k.'EV?M\b2cCS(bX`%".Qq5PB+jW'd<iSrF\iE:iY*UgN0p?j>t?OeW5Rf,/P(]q
%cfmq4h(.cuG'&(g4<$.sb8V2YKH[+*)/KY)6Er,HQ&ERP2`AO8n_'#SH[UQX(R_bH!+9tL!L&5R+[c'W_TL2.Agi`bQSkfOgns5^
%V*<#Z-eRHf2I]#ZcOA>k<?3A3b3B#9;O@9!IAD9Fd-4`3O,3de,-Z6KK^cO^r)Td@([@/M2.7a72+U+>Jn1oVSYW+p2U#4@6L+[^
%"<_m@1W(&`)8iWDRRe;OAGV"e240(Y7L^!J20EeC8R*`NKW[9W&i0.1o!WtU0`1od>4Xk@6m5C'$W)ImHfVhg<LuIR)en715ameZ
%Qu0.]+O):.)^R9+!U"u?7IU@AnHk%+Eq;1CVa]<"(a=cdIi_K"0BqoFM$u)[J.siaM8fQWkM\h0Xr[!ITuT9MWie53?^!A^i?7E6
%nL-W69j01#659]*q-?kT76f2@"#%l51L93>3n&UW+-W1mlG$+\^%Dm!W$%AR*Vc@<-+,+C+#)^eHr[cnin;FB1UBiLDt%&aJG%2F
%p=[XZ)CNGO.Q7o_>"#OoPo!<)ndNXGAu1C=9p6Nqggbs:B*>gh8qe<1fYN9ZMI\63NuHAY#C!1^_G_U-Bi.egX"I8PF1/(]OAJFQ
%U^@Ktl32F4O7>JCLp870?k6%tBFqGK^ID--%[J.<`:&WZ-=_&*'[SY'!M_C?hPKAM_OqPP-<HlrC_?fJFLPCUR+2A9L.U&#.V8[=
%]2m+:n0CPE#X&1nU8Xbh5bT`IWHigA4I8ml1\bGK0LnGCJ47PtVKp<u`f$.Ee<:+FbV4eZ'qo>d)/p,&D2t9AHM@r&[ifK)?\krT
%=Pq@-_WFG_.$p6F@3%2?,@",Ld7d$tofY]2VJ2PfqI.#O`0Z@&-e$Xg(Qioq@2V^JQ95LKN&Ani[j&ZP:Jk)_Gh>#qPH>bKBb&Y6
%CsQXl6))%92eU:++sKQ!+g5?kL<'Hu^F<ouKl8en[3.il<aS'!@n&?KZIZS8[dr_[%6n<$/RpQSp1PAD=\e&:YB.U?!N,Q&`s50G
%@c4:*1omQ(F\,<%>V,@])Uoc2&]c'AJ-;Pd;/'/.'M@DtHpE:$;*t7/*`fJ9&/_coRV=`U8qI3tl=Y)H-rf/=<+ki3aKZh[U5+9u
%UoYpqA\BiQ4__8fpD"9of_`V!$4iCZ'W0tsqdB)MLXP#dcV#;O.KgSR7(F#/_IPOlAQ$k<r_6Q*<-\!X!pZI:QOo#Y8dB<4>['2B
%1AP7-/'tE<HG*=.:Xr9.iOuT9@a;'aaY[<9K^l@uAqJ;"%S!@Y"@9q0Kdt<DQJ>CQU.-ju8@NidpW%O2Z$nD$5eZR2?7umY$k54Q
%24(@]<GUo"-M^hf_VdHia,GQVhVs6Y@dCQ_i;,kehLp;%BbefiW@[k)O3"Kq/\KrXnNN)na%)F<R/!=02[kWTh.>2Ij@-Kfr+b1B
%*@)Uqb;b;;;-.B(mK]ic'%HF;g]VRoQRFN&#VV5hf6O(4ZH1ir9t[3EY:ojsDU?Oh=EAnb@U0hr]6#uoqKHXbku8Z%"D)$+DCj>\
%lB0ur!A4i%1m[S'kBf1oIYAB@=HXbr\U[bb3p(D+lb$%+D$o;*c+?tSmpN_YY2BjW=!e8M<GIZb903eE]R&j[+\gFVW.scM/Ciqo
%GMg;DhnRkOh=f(/NE4427T]IcI<:=t@WjqC:4m5A07"=N8k/W4YXARVr@#QQ<erMm?DNlL%p:CJZ]UIc0QC&ZR:%AaoNu0)'FGB3
%H-=,Q-s)Nh8]Mam9cfVP7lLn$S_A_8__98,'.X_Q$h``"*q%_pqp6?A[8==5KI"cL'U>sNX3u>A_q:OEHh&%b-V_h2b\)1KV3rE[
%M"9Wb=A`iV-PPG35j@(^McO4s!VlUXB]q`aPRT4WOSP['/PfS\%Rlt.,&ej(mq<,PLm:7>#^Bt.0Xh1j?"PpJ5(Nlb7ip:+TIQIi
%jI7/3So-O!R"#Fd#`/,#`>/eU<2?GI1Q%0$)\$3eF-tfbO=9/R@athg_gZ\4iq3m0i2gR+9@-@E7$n`II3`bM`;7[3k@%qgR3R;4
%[atij)=kWcp9LuA5NHha;")Z(gW/hNW"_FKFG7fWOkpRF`=SAFCKBB$LQ@??[02m59%[?+1UR-kR0'VU6",Y5keV5kJ.OT;=EY&b
%fGT/cU1hqZ9S^l*RN!Iq&=DMS.10(]]]9VH/oSk5J6Ds+S0>5C-r=<(\/LP8fZA&K,Dn=9<#3"M<3AqaE!sDuK?n9F0TFi)2$NT-
%-6D*H,cDXjo7pfl_gq*+1@WMh&q*M20T[PU!!C1=1[rdXV5$&d)pN/;[:=9>@n/DBH&E(^[1,SVP,#="F(mN;jCEPs.9g8++I`C,
%`\WTUX43,kJE7t$/Z<7AFRT=RGi(e]cRO7(83i:JF&#1"nhcu^o21ma/]p=d#4s<<4i.;Es*4N':%Xd!D&.-Gj_P7,n$!ie28.OP
%FO9%:U>RtVMkqNY$I]i\_2ldW)N0@C+XW0<A;Q/M89tD"Jdr2lZ/e)n;6"?4.cS)K0ep?'!+hD[7P%KaTIhb?P:fbe_WZVG)]53o
%R*#%mKL_W#bTUi3PO`/#K/,&YN#q\0K=dfdiM)TQi2?cn(+J7Ie@Flh1]q&7:uP^_k_aBIcAL=#-Plsj2;b8H:WoBIndo#;'@Ql"
%bqd2+^`KLrIue]dWmU+UX0EU3BDFeTRg?.)k(ET=Na6f6:n\6h'0a+6QnZ#gN5ch0r[:$)ClGCXBqln-<<Q9fd`sJ_?6E:i,1Xq%
%-c;@Z88PCXa\_ed`W]j-djZf#caO7>_)+F29-&H3%Zq@a56ej-JgbZX*NM+!JN0+bk2;BPb^0'LAT&"%[8)up#Q*RD]rArn_+`hD
%?((U$fn3uXKFnj],U0Hg;_(1FluJ=lLpG0B@.4*2D*YtMiIY92X^SDf<slBsWeP8ab)0$ROGB`)8.:C:+\".=m/X;copk8bNJ#t@
%H+G6^[ljY;IUH!ih01j'Kc/^&:Mf:M=;M%?n6,sZ@u$O4kuDq`pYR)Sh\PYsb*i+WQukBF5Y<bV&;8Nk5l!]b]JUEYs!(eh3=g)K
%gTDXAh2WH8pA3&u^$+#-5^49:8dVI'*Zc.UBdRgbTTV;d":OE6h\_^.CfWF*,39#<Gs^L314Lco0<$sTb*ckMU13pdARG\:Kt28d
%)HSigYZ`9,kT;.N8_0>eD8N-N-=dsoJaUNlFF6l4g\jL#&RPJO)FoN>9TB^&#I4V,7,<#IVJ3N-BU/'lc1V.8Hi^1!BfmmGa66W.
%4s`o>e02.0A=pXmhG0''Z\W^[7Q-ApMkgslkn[ZL//&3-!*B;?U>aU5:Bq:p)=WZ6UMS`J^>u(N#12kP+CZA6*j131R;E1W<BIC:
%Hpm9Rp0Il!g`Iki@A4t5bFq:I%!)i'V5i(12LHeAY/"HR]/rJ["3h$jUSO*h)c[cb6WWY4ILe@e!ksONW\Og3YEiLf[T>!6Vj;bC
%q%]8P<-@"ejEYDKdsMZl9sc$QiJ^KVU>gN",HPJ+)6Rb6b/LLlV6$[YB&GfE7Do>G9uVB5jG`gAhIInd7"cFsM3(N698&BDg0gF?
%Z[q+ufYReF(8%FaQIcXbU>l%/3lY&FgTYoVO@&gq%Ko-[0Wu<"LsS`6K6u`M/W?%9_BbBf'T=Y@`\?)Qlg',dJlnJYLfKNT*1&%M
%;kl&i'Hgj;=WOdO_c6UH-415:;S7CKLjFo0c9<FmG+m+gBd(V2J-lG6U%/bU-s//u$^HI&5=c>\4<,)KJgo]8YfW?C>%Pgh/`WMR
%%E$)#S1--WL:PS!l4Hr^pHSTQo@3VDI5#^qKYg8.4GVft"f?m"-+H]-3-UMC>O<[[^CB\-_W&'Xd,Kc1".5&0cNbk(aOl#.Vq``:
%/Q<m')V+CiToHWhcLg$@=50K<#Ti'*fbA&7*8,#AW0#n-poT0TQKprH&9F`+-H*mE[RN1onJS@7q7'"s1e--9UClJMOffOQV`c1P
%0(rAT!<jUL+2U%0-Y?H\BFcOQ'*[':qDp8dO/TV1L`W?-nI.oq-,F:23R1CYF%PSH4Ad7F,[d4OrPQ)1mH>(cZ[PH'K:J!9FDT<6
%<#.q7SKk#_TZZo/jn'-c#A?20?mQ0OU_L*\3.gC)8`$Iek<uLU,27bqej3@<?_e2D,Yp]8W?-M_S?7h>lG(.d!s][,+RnA&YNhRp
%Lc:'T_]a\!_/FnedA\fZ30DAt*QUc,(I]Y@@c^E58rH>ZfFkF=j$&*j><&ad&e/;unHiQI'egOg8,M=.rpMOI;+BZS4EM68oI'ao
%L+co3&oWok,V9;'&jS94!j\To,Sd@51@1)k\NJ)g\s=I*VaO,Y1X3_X(jbMBCC]Jm3a3W]e'?BM7J,81B>@*8VZ@<7:-Aqhj:YI%
%n@Y#\+:pp(-UXJC3^#8dZgoBe11u;D%rdmS-sH(?SZ=@.c8N!4%20ZPC`Ifg?n$"Obu$i!jSf1C2:<FOl!."TaCI]lr`#K5d=stZ
%/4gs('Z99ci,`QMJ$t4fkS&=\>j6D3e"feAC+V.(&6;#X<`Ph]Zj'IC@&^Sj1dq+sC$fRK"H,aZq*I*j[)O(&Uc@)E[*8_,O>;e6
%(4n^`1)R0mJal:F2OZB>S72OB;4_Ou&\Q<X\B%Bp<K^#dUk6!;<qo.D^1FAZJg`3JTGU1RY];k":^S%_b1%hM5Jd_G"dRsfhN0/g
%#lB]HFpKnR8-K2SMgFA"p!3U@:Y\a2K*tBo/SQg>Or'pgbD-3=H&YnVq8\>3GDOfX3OZ&*%#+*U7=&Ni.%s0O,.2*)!At[QAp$Z&
%d<$A*nmnZJW%HZ(XU\s0h(Ke)`-lf<9IAn)bA=#ArE<'86Kks2eN;'5@;X6E,SfQ,<uV*NHSu^n@]rhEI0B!/\NlaBOAY0KdWUGM
%E35)9ftIWaltGT36,[_WUSdHZ`3JAh;U6GL/g"r.-ECj1;:>T"_qXlhO*hD"6uULe(jS(9pjqWO<l9DiU41Z+d!u/i1?[.j`S<eX
%3l;'M0\%+M:/o:Hp(@D2L:$"#(r1ck'B_jkULng.d0jY'Q17:CK?"$Y3YtoA5s!TT.E:-u,pW2ZOb=A_=mR:]]YN_3Qe@W.3WO6?
%TE`?6aWJLQ(?7kE)R7)Cl[\>Xi7-r+k9/oI9FA<>nO>c9dJ\/%&S(]Br.EhT?*G_`brRTo0I+Qtn3f>d*WijFm?:EE4ZbALVbJ!4
%_C_<B/JY4:f3;54og;eKW^>(N*b8BB3g"f!idOmu?r6*<OQfdV.!Vp<,D9f1n$[!L&2<0A.f`Z]o,SCd#Zkkc>VS)-7Ni'fi&k\j
%otYBB["&Lg%F0ML7Qc!IM1L)=WB6ci5_MhAEVC\cLBOZP+oH-4.[?]UG,(@H(iX/dJC^/#B[;f+^2tqb0$-@W_\U'OWdmc]M-3@,
%O)b="-<=ki!"DMgR<PMn8<mVIP[T\=MNDD[``A3t7%8:f'eg@"(6OA@Thl/^+PC/MG`W,[c5cCqE;hDPOR\(&TRN:od$-r^'<ks.
%Bf85o,JHrAJD3T3CV`Di0tIX1bncWG>$bbe#/V&cfEqX0?m12Vj_W?5Kio-cF'/nqnl?;d%`A5F,_:c1!!7d=$Y:&^U]VW.jMG&]
%2j%YU-85`+!+leH1NM6&Q4q'9_bWpP&)]^o7_M';d'Sbm+qQ),?&78BC0H@98%<(V^2p)i$mC"l@84<FI"_slcnKQs#9@W$7Y&Pt
%#hK1cYia@6,6K^*>9s=]d@tk0`O%*!KNg)Nq')%'3si[@4]8B2d1FAXXjVdiTcaItP]N%!D2[Zj+^'gDJ!hJ!ZQ\C)qXKq_`6RGN
%</U]0#di8#TV\]qRNAM]L':R9RO]XR3>r'p/5`kX,)V4lm=e`iPsW1p'OAct+Z06tL'Yr),HmX[5[q4:-^Cq/<'7sKSarSrV=50#
%*GL4u*KZkaNH85'K!"``O8'_k!G\>Yn?`T;,tYa`acclpl9YQ"APY1NW#iJ\*Xn,qbXit,$=5,4HW$lL8\$.iG3(-qEV%<g'94Jm
%"GfD,!#UVZ7'O8>X?;<DoRr>-&oS-TO(erj7'L2A8_@2e\1VmD9TonpVCb/sFp!U,NfhrgKLOlS@B>PH6FMWXT%q9#<"[sEIu^Ll
%!,+uXh*@VXo=CT=Jp.5m0\-dMDojiX!\ah8p0OII+Y"]LX#:+J/HFE-:TK8T7n-`e5Rh6a^l^/>'>0;9HjXX)5\_s^]SHT3baeBa
%4eZdU"/ZVQNpQk%"*B\-)>OQC#lGO2p8YVDGUJr+N:^RT$_%@d7(>.+[M4WHIbC$I#AQ/o=]#jJRSL:$<CAlD`!P-ZI><L@B1`F[
%:i"\_O&,eJb,;T6@.Tr42(;(($X,uRC2WXc&\+X%MGWpo/3qQX'_kBGM-4us_)NDKFe_94d9Ja%Es*=X,](I7'G>Ci,fmhtPLX7p
%ZgQ6[6iUck9HF31HaXfkX\YA9k?;XL36a?L((J.W$[l6<`&%Jf2`1#3CPpie@F5;)%nJ^jp')9L+Ba"?C315K,rI5f\7M2iqEfeZ
%4="&Mbm5_Q('p).Tm:*>1[*kDAYqX<]'XK@ku[9XfY[H=F6U=A[7(3&[*oBS2jt:T%fp-^JHg$bDl6GapiT.gcA*6AWG!Dr42b5'
%O+^#H\/\u,:fO>[ClspFG7Ut/U16<AQMu(4Fq=]0d"^U?\0aV\d=;\V`E%0M^`gg?#Sl&L',2*u@kga;i*tjE0g39upCHgc3=aRN
%VbR\!as0c@_=6t)0_:,.KE,@Hla2F/$+[iTOIu\W-a,Nq/7X4G,>J/,64/=HUEWbeg&ksp??W*OA0u&bY$TcmIXda%6r#.7"=,+f
%gje"U\Uf#[_V6U'$=Z<6YZh=BQr\^9C<1'hbbLt%O2],`[P0qN2ikEQrngBrYN\n&Z3QSu-]/[kbO?>)Zq(LVRF(Hu9I0D]D>WE;
%1:8Xt:E=#0Z#E>dUf'Sih#aiZZgu<X'pU6<%jK6W;M"5<D!W<\S<'7[WCS@nL!"d:qBBBHoYL7Dm[#qB$lJ!,35T4V';&CGLQW_K
%?W!MKOAV:BmtdXZZ9r^J.].17fGgD(E&slEo-EGA$5HmtFkAAJIm5?_mcE3FlU5/BbeYA8VHk@+G+kSsT?hZGLMbA5'gg`53'o;W
%ObHo(a3lZ1&`TeK<X`7e`3.3=SB>.`J<oJD,;qkH$="o[ia<maeG9rPMGltM%ci]Q>*//gVR@Z0,3!U1815PsCr7P@<%'H9:BJYd
%6oEP4Bn[43OU9B`96m&-YD'?^@=*Z16V&A:pa[;1i;CN(eWu];;9/cRK46FB`./lUmu;o5n,2]#SKN0+<Flt]_1S!jYJN:Ep(DZ/
%aQk<Dk"h)-WcB3bW\?j[fF&`R%-mfUl\!:!.Sk\_Aat!_S5Kg5c]`qj<pd.9)H:4V$o'CXG[%Sh+QrsT`2"=Dc'TBGIpfhlY6q#$
%i=NAn/PUo8`6`UXLVPS,@CCIP7QpXR!.7fn4G/PKp]SPN+&q=n_PKX5j.758*+e'1'hF-t.LeQP<'9jql3"CrW^t)!oTfh9n>QsU
%!&c@Oo7]MG,@:F8Zcl]j..!O='U7L/AL!%7F<rIH$Wnl(!ML261[7gK'8>A+G?d#=(%DlDr"BCi-dBrG:gJcP)lW2O#:tFLOUc;g
%T70FC?%Xp5[EuM+<?eAG+j:nt4GGO'3tN/lGVPl,f%R3;.-K]k,9kW.[Z3l[ZrPL>%cIM/Cl5Q[n>6t8LS^1JO]D99*^S?*-BbdK
%c-!d"(iKQiL_6N+q6I6hobJ8n<&c`9aT>I>*$9gBX0qN0oKDpK7%3R-0LXh<Ns&B+rWj3GT\NsaKWQO`A1"<;%H)rWPp'*`_EB,0
%RYXiCmCXj_H_uW)#L0d6E&SYc>*Q%b(2/2KG%&ShLG4o'b>L1\DP9,4b6Z5m8b>?2$Csk6qCR)?[c)^0L=[EP*%W$qc]]Y,9]j1L
%KUlW?^g*mR=HcSL/WX(g:BdD:n;CE:#*\Z>eAHS4Da2Q6DTF;059#>OH.`W('HU[2$nH]%j#e,+$OKdCSOnBuG--"@_9r=IGV`07
%!@Al>0:Z`lP8Pr$4/q=Ac4nX]R8.>T>!RKSefo8#"_hE6P]b?HY)<aY%Xsme'=cbY7:q%&%01TkY$FiK"?pL0CE@0m."V=h[i.!9
%?HY2<9p<#ce7*#j(@[Fajgbje!]`$B*[qXqSXP[[R$KE4E,F!(!8(f@=ojU#E\oHc6hW*Q4e%0flDQd2$Ejl"dV2o;qItKq-p2Jr
%_10ibr'I6t+7>,F'ERHg3#!%t9]@i3/WBr17RPW*`?l5%/^j>g=fbAhBUoLn?!u`I_KsAV-5,;B9S7thW(:J1IVK//KFbK7Ul:*b
%APs1!d1\nJP+(VB`*!*/gY\ZVI/fT?["*4lb7Sq"TKa,1i:0^\![:'7/q6oPkSuDcJjjDV79td]W?273RDD/pE.[=d[WC@<Aiijt
%T%6_maP&D&!(G"2[C91*s3TK'=MVD'gE.,RZXB'V9LYggUoF\.268n_EF(>Q[Ldo7%'[6%gSDT#&NX0D$UJ`]8Ihi8nB&bg4E>LY
%eP\'AH"3_0+VqiYQZ)U/?$cQ/."DG_/5*/NUXh&lP6:(f&JW/("5$Br!37>RD/O.9*Is1/e'sbc51Fh#9f3Am&uJh$9DCd:(+"@2
%"XpUOWNtfs:;DZQl65^W%)Fi@JcS>slc%Sg>hK0O5$df<QiY/U22i4p"WE,m,kt)r[g<#(NU>pK`*fdM_84cgB/706oLID]7)fLL
%]$0M.\M-#J!N'q$#[[O36]5bkY^Ii2]%b$X@1DTuW1O*mee*k#U%YcsaN-J5iX^(A)2VLHj![R`kdi%=[Q9OqcK;d8dLp(AA>)K;
%Yf7f)VU0Vq;jBd^\jcD*n(&uk_=am01bHD75nT@j5&?Yk(78Y0.9"8;lZ>,QD@.;,md>=#\7RW=9L]:e7IUk`L)K*s",Jr:!`=[A
%FsqB0$d1EDd@;3$KS>eN%'>,kQkSM'.DHZnG2E&?U\-OREBp*9F33uc>1CXPKh31,L"I9No?n3';#3[#<TZ+(2.Zb#0^\dK%iTT%
%hsJNqg%%Xlj%AE9l1,oM'NOIPBZ_<:?:P/%H!(7r,8F42kda$q&+^UQfr\<.29dsOG7AV>:KDgjFB+E)"#9B"M_^olkGn5(clO%;
%&!'@NHrufi<Cb0,P8c4o.56(n+q#seJObTA[S#BCp.;ak\[,^R/8Mn.0U1Xd*s=66Vn0lh<Y"efVT]1hWc\^Od($pjDBGFpDHQnE
%X6D;[ac&nrYha*>1h*:rjr[%Ro8$-1/`SA!kD/4(!N(VN)h[?R!%H+UXu)ZDRS!Y43OM]7i<+q8^3ClaqTrUT4Yd2iL5p]*PVcG+
%&TNVO[lbSEl6rd%$3P'9UBYBtbRI=cX>-[<!C2Eo"RLA5GpaeG2SiPTCT'CuR*WT1jkr=:<gd%9Xd-kO1o9l\%Xu3X6l*=7pJaCd
%!S_fO0UcZOWVfca'1pc_am]`C$/p6ORL#$5Z9(s'dY,**YHoQB22Ek]ALq]OC1.1G7@7<-F5qe5iE.mg!XO=gRg0f5(G<gh:8fD^
%jC9d;1P#4ECi\`YKW4(Z,&B_iO+9`Vn1rX#![6p7pFM+#d)&1t4%L><2P66W#XC]L"!A.S'2\-?U(lQm_3$P(ZrXHN@DZqo2%pi$
%[h<farY:,VKXqa0LEX[E:jD&W[M5WOaRf/7%G5/f-IR!<(ErpR_+@[Ji4kD/Ln1VihXUQ>nb&(5#TZ./^kX<F`0[oskc?-Q6m,LI
%AuKrY,h9#GQ%F!b2)U)k&O"!L.4?A[#m.f<%:-<;N2"W?@r7$Qa0b*0aXFZZg%9Ba"T7A<1uI@[`;9S?&.p3W0k62Y;"W4s1_M`'
%+X+.-22l8V;3D=0H:!79/.IN`#<OmdK!=;E"/+=$iXh'm67K_?bMG27(4l`JiLE@]fHaW:)>%5m$@n<_>_41YU4/I(PaWhY!Kk[_
%)j^=c-=((=>[tJN4NHlcdW6jsD5jqabTuLd#UL.:!'J*9(#ZT[m^I3\Nh;f3fL=.55r#%@AC9"#"83<Ad41?R%K^\I>uOLb5=UW7
%O8K9PCJ]:84"W2o.P8#`9XTD.K-fA9Y$h=5\I_Rn[dF,f&@B7I8NX+"#)qoZR.b$89kBfe;-6O;Wu=5,MlC413Kq^f*Y636H6UKf
%59$>f.ki\4%L+Nl'Q!Fl!@6J]#_b5Yb\,Nt%62?mCr8!UclKY('is(S'f^Q$`,(=0HQQ3HI.fJH!6f]hH4pe:CZWj4_h(qig^j(E
%ZUt_So79&_TJ_/\@1#l5=@]VO.%g-fGm9,5WAK&.^q8Nga@]%#AX_3"Zn8-TnE5`D_VN6]Tdc65@#<N6G_DG.k?6c_FlojsE<pT,
%q?RYK?8n2g5qDOi*9=i)/GD7-!N.4\hh2gO:CHV!D>]AcJ*i(j$e'A68tX2*j&s,D1u9)^(ep1]#Lp;YX,iUp2h^+N[%nJ:_)FiO
%)cLiR'=!IM9<F0Ap]jAiLN;N8qB*o\:fKbu)SQuCBI#Y8[:VZM)@$p!a\i']2]/%"P[:olLIsn7e;i1b0X4rAU*A-Ei8;=[6!7MJ
%F!dS8`N!=pJOQ)V:G4G!,9`a()Sg%GLsrGgQ+?8uK%AJ!+WA0$s7=9TO"*iEn6d+]fg3Ml.I.7"#^9n.,kI]@LL0ptZ&2rRFUR[^
%E6+j6ENV;KY++%3=Nds''0L+eU'`+9F--91.dJ]&i2AB#N"t!<"B=OKjK',8"6>9\A!f+[`;j!-(b,AR?K<"k[kPt`$]B8fR7-SR
%LjP.Q0<6N_)AYt-,/!XVma7fNg(FB16]+O5#sD?a%U,:WW\*_b#>s.[l4gfPctY,IU(m:+TcaI>=t6$t9sA%(FbZN&j\c^a;WOh4
%XuJ\!&V,YKko)7/0C!@+N!X2/;+C<rga/iL(QQRpH)K3[=UJp%/mXU<:.>M-!A_[o'FsG+p-V#+\F(qH3,"WW22P>P2alXCU.D'l
%@a)'UG?j*CI1pU+;8WJf3E/*B+KjeLTqIT9#rA+W!F.$'a$<i3',H9`8IT7QrRES--kX1W)toA%g&Pk8[/("qkL"^V$l4SB;&YVA
%cBR17:jHFsXPAQn5"NJe=7d#:-1G8HF"sbJ']>_Gr9V>3!UL-n#ms$%mOE:td^%^;jQW%0]<_JVCXP0EnSo:Cg%$&RJ["HGRQO`'
%I4W*8/d`:S`0r1H%1Xk>\5@lH2bqai42OO#a9FL;]T`6ar+=?jBJeu3Ae??cE.`.''UZ)gFo05K)h,pEimRuY'ad5-nk3gA[tpVD
%@8/Vn>9X)^oVb;=MP:)"<5_6kR*m&XQGH?1LJ:2f6oh5.KQ\g%Lm5P-rF;[$@-C<RNF/KWWd#lk"/5l<8)2#WYWqT#mo(sLe$g^#
%P@mAU"0O@If'S15Yr&YAaEj*T&.n,jOYW8+Xd>&O7!2WAAHo$;h#!`TLk28"+=*#(Yp_?l)9NAtE4S0iK6?QQ=rndHC0If!^B3UC
%hJ>U>GkeO!Q6)"C#l+)sl"3'7"?*CY(fpEn&NU]+bp"PYi1X8@htn\EaXm,_8FaV4<JG;L*u$6++G[b58'.]"V_DB01l+b-XX4\Z
%bSm*5;]4Jn%0J+cJO=`C;*a\/jT4L.[QMdN^j'.)VCi'2[%9Qf^aa:Pc6Pep1uIsoKh!(jUmqY:hba8ShBVhK:mYi')l0gS$IBWe
%L<.-7NE!/N7<E]RJOU3FO8ZKgg5Rh3;!Ch)V6I<Y9-HRj#P^e<XB_/MNn$3#k=*6SEQf-9![9%hJ0/KRgVikb0JZ*(\)>,$1tK6'
%_I[$ulu<<HROGtFPRUqI`K)5.K:)E8HC>*U,"a%EI4_NGQj.H/N>r5oo$j"/<&Njg==b$5MMOAGB<g#_LMGq@*A;e`hA'QL>Kp6*
%/D9G<.X';\f/B$#TdS:>Bc'ej)j.Hl$GQ5O"V3.T;5M:b+HG2p;_.TXeWp;8p)U"],NX;"c)6%fYo61-^besIC?1]D>1e[<-6e:\
%m!iU_Z4[ICKscoJ1oG;I5noer'j!"8%4C(J5U$h8]F]RCqbR9q>@R303h*QKIIDG(3cuF+P:\85Nb<%"3'^/A%S!/GE!hS'FW"iE
%PNO,_9GDpN1;m'sGEAJaE,H(^iB^OR$TCQY8$<_\PrB'^9Ji%f-.NA1j-b5WDl=*J0sQ=2UKYTeiQr0+CcXiY-Z.%QFpR,^:E#o,
%#`"4.IE2]-f"qt>$0!Kn_B?i3V.T%>=V@#PL4>U7L'=OFE["@T9]<@kegGZ)Hm_#HMSej%cRQESjaNY$g`$S2,A7()*KXEKN1)1L
%ij5j1MM#NCR10:%66pp5<Q&"u)o[L(jao<?%#4FlN_m?m1b;;<KD;*>\,ii^Et20"aeDTI13AJ.XbAdl;la`$9:oGQ+qRLk[kb`c
%otV3?b_HTXSVfsdTFP^.'Y=/["VYu7dnd(GF$f>&mq<9pOoPm;U9=1;%133Ag;EKh:--ir/T"I^iA;_FCO_'g&enB:/?O"p%XJ+f
%C2T1]`55DVQOui6@J1T);03F'%0AI*$8e]U1I<jgHCH>MX,o4EZ(k8lIDKS,D/8u]-h3sAFA'M+LS_Vram(?L2GP6d`7X+-_F^&J
%,f=Z]Nj]Uk(JD^mWYrT`eRU"AKnIJY*X0*Z`_[L>`=obN\#Ce)m'U$o9#'X'reEH"<I;.a`o<d.V=<HjCCi*ti#XqW<U)n0;un/i
%<P(Ue==_>6PLXP.C-e7-eKpYYW,K0AT+dJ>]Q-$`!>!Ej;nuJDWGn<!L=jU_^Q5->:+!h*Cbt\O'V$s6qbe0[M->Jsb,n$f3R`"e
%EQDtQTgh!f.`$7.qYedqbg7b\_'&h'Bc\=eNTRrB\=A.I:=O*e%c`D+4D3D;ObSfQ;+1PC;+#O#5;qml;k]31rYN-LYIB@5jL$N_
%/u:b-=;QlTJfQ=m_dXN%em$sZaITMb$6]HO2!o%cZM6hAfuklY(8(t#BgBu^k/Ju^?u-)N5#uu8pAG(q=&9C42P3/BWRk?RP^`e&
%$PVdproF?0g/*;H,4+i"n*irY-]=3p$&di4].BcWd6WbN`QS[\$G0AQra]YaHRC:@KM`6FA@:=8pNO%V4?(1n8-kpo0Fc>Y$LDmg
%Ldo<=,i$<66S;+Q'LSK)--Z477M03l,(4__Yl_UI[71:s-=hP<du&\c@uR6O[G6`M[43:sFfk3OP*d,R!UFnEWIhP;En#21"63n@
%Eq:i"d5"7P@pRKq\\.<*?5K6.Vr*`[p=ON;2iasEj)Tk58l%].>^$1Up'3s:&`]Nl:TOks"XW]JU<uJs.SO$Z0@9%gb=RD[/-7MW
%V$`?+jYc]Dd\X:0Q2j4$%';eDC.o(o&L>9hX,(/JSpoXVAi`igb-8u11EmNbG6PdZQ4<h36D8Bs\p5$p6^]r7TZSem-/t"h_\01]
%=GrHd53dbX/F&>P;baD:+?H)t#b=nMh*H)"[FPmH<_ZOI9$=_Q6Xkup9M?Ln&M.fHj;1>fRJ>,/4R9T>^6<pO:m9I,+cfe47rps5
%)frs_MhWZ/%"'T%<K$XO@nf8BTq8Vr*!V#8aC9_+rbuol(*:Yj+Uqp8YuuA1+:gd(VV3YP&8kjM-8@e<PSdOdas+/&L@V@VL\nKb
%>0![Zpmrm-j5l9m:Z#_lBpk'91(D.gN_X'rKojf]er+A5rpeVn",#".2.ZC*aAQhrX+>rb_ln2Y/S"*3X[$mb('&8*[6'(5Q^+]L
%k5T;V[MmlU,8P_h[s=h4$HJU2nD8J%da?Y\Odam`!/4(FnJAHb:4:5b9<*SS"0Wkqn%c/t8HG-?AenOJ]\Zd1dJt*jfFR!H>;<Yo
%kj/aiM,_L\+`kZ@8QWL2JY\fP+\=Iu#Dp2al+-#d)A4a;;./Z=d"6#bql'U7YFQ#a)2.`l>Jg_&qb2lND=("oZT8i["Ff[G^k9"q
%M6N(TFf7C:`Ss8..YNBaD*ODHYd/9GhV@:@aI26f^i]AID,q3NaL"EV(B?9!lNG.BT4r[m%'u]^bTV;'H-XJ=5]0mrAufO%,86=[
%M\)C0+WGA,ObnCcR=g?c_C.P]e;!C%'WBAonh6NDF<&bWNKPX`GC"aq(s=lu=C0lCr!6Kq!'h%G3UOM7Lea6r@WA_0?X;4n!6^&T
%j$Zd1d##k-]Dqt\[3^*2eE`f:J75Za>pb2P%JQW!r,cQ86Ht$M;GG?bG"?;rL_\1]KrIc;Z4NrL#S2Q%b(rpS%#._6)@D8YjLq$K
%H5Q1(h-:iiIb*SR^J@$0(A-9uih(^KF+/0+mc*Zu8-hH[o(:JO+7;lWY:f6,qUqqHe$g-_e!h:1YD_$':RbF0(\\HLG8HbGmr&.4
%$@Xg\nFN:PqMTk&k\'o'p7;S$~>
%AI9_PrivateDataEnd
